%PDF-1.2
%‚„œ”
1 0 obj
[/CalRGB
<<
/WhitePoint [0.9505 1 1.089]
/Gamma [1.8 1.8 1.8]
/Matrix [0.4497 0.2446 0.02518 0.3613 0.672 0.1412 0.1845 0.08334 0.9227]
>>
]
endobj
2 0 obj
<<
/CreationDate (D:20030806190649+0200)
/Producer (pod2pdf)
/Title (xml22.pod)
>>
endobj
5 0 obj
<<
/Type /Encoding
/Differences [ 0 /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam
/quotedbl /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one /two /three /four /five
/six /seven /eight /nine /colon /semicolon /less /equal
/greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L
/M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft
/backslash /bracketright /asciicircum /underscore
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /emdash
/dotlessi /grave /acute /circumflex /tilde /macron /breve
/dotaccent /dieresis /.notdef /ring /cedilla /.notdef
/hungarumlaut /ogonek /caron /space /exclamdown /cent
/sterling /currency /yen /brokenbar /section /dieresis
/copyright /ordfeminine /guillemotleft /logicalnot /hyphen
/registered /macron /degree /plusminus /twosuperior
/threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright
/onequarter /onehalf /threequarters /questiondown /Agrave
/Aacute /Acircumflex /Atilde /Adieresis /Aring /AE
/Ccedilla /Egrave /Eacute /Ecircumflex /Edieresis /Igrave
/Iacute /Icircumflex /Idieresis /Eth /Ntilde /Ograve
/Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash
/Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
/germandbls /agrave /aacute /acircumflex /atilde /adieresis
/aring /ae /ccedilla /egrave /eacute /ecircumflex
/edieresis /igrave /iacute /icircumflex /idieresis /eth
/ntilde /ograve /oacute /ocircumflex /otilde /odieresis
/divide /oslash /ugrave /uacute /ucircumflex /udieresis
/yacute /thorn /ydieresis ]
>>
endobj
6 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F00
/Encoding 5 0 R
/BaseFont /Times-Roman
>>
endobj
7 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F01
/Encoding 5 0 R
/BaseFont /Times-Bold
>>
endobj
8 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F02
/Encoding 5 0 R
/BaseFont /Times-Italic
>>
endobj
9 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F03
/Encoding 5 0 R
/BaseFont /Times-BoldItalic
>>
endobj
10 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F10
/Encoding 5 0 R
/BaseFont /Courier
>>
endobj
11 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F11
/Encoding 5 0 R
/BaseFont /Courier-Bold
>>
endobj
12 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F12
/Encoding 5 0 R
/BaseFont /Courier-Oblique
>>
endobj
13 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F13
/Encoding 5 0 R
/BaseFont /Courier-BoldOblique
>>
endobj
14 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F20
/Encoding 5 0 R
/BaseFont /Helvetica
>>
endobj
15 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F21
/Encoding 5 0 R
/BaseFont /Helvetica-Bold
>>
endobj
16 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F22
/Encoding 5 0 R
/BaseFont /Helvetica-Oblique
>>
endobj
17 0 obj
<<
/Type /Font
/Subtype /Type1
/Name /F23
/Encoding 5 0 R
/BaseFont /Helvetica-BoldOblique
>>
endobj
0 g
18 0 obj
<<
/Length 19 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F21 12 Tf
1 0 0 1 72.0 752.0 Tm
0.0000 Tw
(NAME ) Tj
/F00 10 Tf
1 0 0 1 102.0 737.6 Tm
0.0000 Tw
(xml22 - search and edit XML files with PHP ) Tj
/F21 12 Tf
1 0 0 1 72.0 719.6 Tm
0.0000 Tw
(VERSION ) Tj
/F00 10 Tf
1 0 0 1 102.0 705.2 Tm
0.0000 Tw
(xml22 0.3.2 ) Tj
/F21 12 Tf
1 0 0 1 72.0 687.2 Tm
0.0000 Tw
(DESCRIPTION ) Tj
/F21 10 Tf
1 0 0 1 72.0 665.6 Tm
0.0000 Tw
(Overview ) Tj
/F00 10 Tf
1 0 0 1 102.0 653.6 Tm
1.4057 Tw
(This PHP4 code parses an XML document into a multidimensional array. The parser recognizes and) Tj
1 0 0 1 102.0 641.6 Tm
3.3283 Tw
(processes almost all of XML, including processing instructions, general or external entities and) Tj
1 0 0 1 102.0 629.6 Tm
0.2094 Tw
(notations. In addition many functions are provided to search and edit the document, build a new one and) Tj
1 0 0 1 102.0 617.6 Tm
0.7335 Tw
(write it back to a string or to a file. The ) Tj
/F01 10 Tf
0.7335 Tw
(xml22) Tj
/F00 10 Tf
0.7335 Tw
( code is aimed to provide a functionality comparable to) Tj
1 0 0 1 102.0 605.6 Tm
0.0000 Tw
(the Document Object Model in a different manner, offering its own API. ) Tj
/F21 10 Tf
1 0 0 1 72.0 587.6 Tm
0.0000 Tw
(Array Structure ) Tj
/F00 10 Tf
1 0 0 1 102.0 575.6 Tm
0.5900 Tw
(The internal representation of the document in ) Tj
/F01 10 Tf
0.5900 Tw
(xml22) Tj
/F00 10 Tf
0.5900 Tw
( differs from that of the Document Object Model.) Tj
1 0 0 1 102.0 563.6 Tm
0.8306 Tw
(The user of the code is strongly encouraged to use the API functions when dealing with the document) Tj
1 0 0 1 102.0 551.6 Tm
0.9525 Tw
(and ) Tj
/F02 10 Tf
0.9525 Tw
(not) Tj
/F00 10 Tf
0.9525 Tw
( to touch the array directly. The internal structure will change in the future \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.9525 Tw
(/IMPORTANT) Tj
1 0 0 1 102.0 539.6 Tm
0.0000 Tw
(NOTE ABOUT THE ARRAY STRUCTURE) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\), but\217of course\217this will not affect the API. ) Tj
/F00 10 Tf
1 0 0 1 102.0 527.6 Tm
0.0000 Tw
(For ) Tj
/F01 10 Tf
0.0000 Tw
(xml22) Tj
/F00 10 Tf
0.0000 Tw
( an XML document is an array of tag arrays, or "tags" for short: ) Tj
/F10 10 Tf
1 0 0 1 102.0 515.6 Tm
0.0000 Tw
( Array \( ) Tj
1 0 0 1 102.0 503.6 Tm
0.0000 Tw
(  [int] => array ) Tj
1 0 0 1 102.0 491.6 Tm
0.0000 Tw
(  [...] ) Tj
1 0 0 1 102.0 479.6 Tm
0.0000 Tw
( \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 455.6 Tm
0.0000 Tw
(A tag array has this structure: ) Tj
/F10 10 Tf
1 0 0 1 102.0 443.6 Tm
0.0000 Tw
( Array \( ) Tj
1 0 0 1 102.0 431.6 Tm
0.0000 Tw
(     [tag]        =>  string    // may be empty e.g. for comments ) Tj
1 0 0 1 102.0 419.6 Tm
0.0000 Tw
(     [level]      =>  int       // level in XML tree ) Tj
1 0 0 1 102.0 407.6 Tm
0.0000 Tw
(     [index]      =>  int       // in respect to the order of  ) Tj
1 0 0 1 102.0 395.6 Tm
0.0000 Tw
(                                // the document array ) Tj
1 0 0 1 102.0 383.6 Tm
0.0000 Tw
(     [parindex]   =>  int       // points to the index of parent ) Tj
1 0 0 1 102.0 371.6 Tm
0.0000 Tw
(                                // not set when no parent, i.e. when  ) Tj
1 0 0 1 102.0 359.6 Tm
0.0000 Tw
(                                // not below root ) Tj
1 0 0 1 102.0 347.6 Tm
0.0000 Tw
(     [children]   => Array      // each element points to an immediate  ) Tj
1 0 0 1 102.0 335.6 Tm
0.0000 Tw
(                                // child ) Tj
1 0 0 1 102.0 323.6 Tm
0.0000 Tw
(                                // not set when no children ) Tj
1 0 0 1 150.0 311.6 Tm
0.0000 Tw
(        \( ) Tj
1 0 0 1 102.0 299.6 Tm
0.0000 Tw
(            [int] => int        // document index ) Tj
1 0 0 1 102.0 287.6 Tm
0.0000 Tw
(            [int] => int        // document index ) Tj
1 0 0 1 102.0 275.6 Tm
0.0000 Tw
(            \) ) Tj
1 0 0 1 150.0 263.6 Tm
0.0000 Tw
( [attributes] => Array      // if there are any ) Tj
1 0 0 1 150.0 251.6 Tm
0.0000 Tw
(        \( ) Tj
1 0 0 1 246.0 239.6 Tm
0.0000 Tw
([name]   => 'value' ) Tj
1 0 0 1 246.0 227.6 Tm
0.0000 Tw
([name]   => 'value' ) Tj
1 0 0 1 246.0 215.6 Tm
0.0000 Tw
(\) ) Tj
1 0 0 1 150.0 203.6 Tm
0.0000 Tw
( [content]    =>  string    // not set when no content enclosed  ) Tj
1 0 0 1 102.0 191.6 Tm
0.0000 Tw
(                                // by the tag ) Tj
1 0 0 1 102.0 179.6 Tm
0.0000 Tw
(                                // and his closing tag ) Tj
1 0 0 1 150.0 167.6 Tm
0.0000 Tw
( \), ) Tj
1 0 0 1 102.0 155.6 Tm
0.0000 Tw
(  [...] ) Tj
1 0 0 1 102.0 143.6 Tm
0.0000 Tw
( \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 119.6 Tm
0.0000 Tw
(There is one tag with a different structure, the doctype tag: ) Tj
/F10 10 Tf
1 0 0 1 102.0 107.6 Tm
0.0000 Tw
( Array \( ) Tj
1 0 0 1 102.0 95.6 Tm
0.0000 Tw
(     [tag]        =>  string    // always set to "!DOCTYPE"   ) Tj
1 0 0 1 102.0 83.6 Tm
0.0000 Tw
(     [level]      =>  int       // level, should be 0  ) Tj
1 0 0 1 102.0 71.6 Tm
0.0000 Tw
(     [index]      =>  int       // in respect to the order of  ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 517.44 37 Tm
(1) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
19 0 obj
5111
endobj
20 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F02 8 0 R
/F10 10 0 R
/F21 15 0 R
>>
>>
endobj
21 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 20 0 R
/Contents 18 0 R
>>
endobj
22 0 obj
<<
/Length 23 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F10 10 Tf
1 0 0 1 102.0 758.0 Tm
0.0000 Tw
(                                // the document array ) Tj
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(     [type]       =>  Array \( ) Tj
1 0 0 1 102.0 734.0 Tm
0.0000 Tw
(                          [0] => string  // name of root ) Tj
1 0 0 1 102.0 722.0 Tm
0.0000 Tw
(                          [1] => string  // SYSTEM | PUBLIC ) Tj
1 0 0 1 102.0 710.0 Tm
0.0000 Tw
(                          [2] => string  // URI if SYSTEM, name if  ) Tj
1 0 0 1 102.0 698.0 Tm
0.0000 Tw
(                                         // PUBLIC ) Tj
1 0 0 1 102.0 686.0 Tm
0.0000 Tw
(                          [3] => string  // URI if PUBLIC, not set  ) Tj
1 0 0 1 102.0 674.0 Tm
0.0000 Tw
(                                         // if SYSTEM ) Tj
1 0 0 1 102.0 662.0 Tm
0.0000 Tw
(                      \) ) Tj
1 0 0 1 102.0 650.0 Tm
0.0000 Tw
(     [entities]   =>  Array \(   // not set if no <!ENTITY definition ) Tj
1 0 0 1 102.0 638.0 Tm
0.0000 Tw
(                          [<string>] => string // name => definition ) Tj
1 0 0 1 102.0 626.0 Tm
0.0000 Tw
(                          [...] ) Tj
1 0 0 1 102.0 614.0 Tm
0.0000 Tw
(                      \) ) Tj
1 0 0 1 102.0 602.0 Tm
0.0000 Tw
(     [notations]  =>  Array \(   // not set if no <!NOTATION definition ) Tj
1 0 0 1 102.0 590.0 Tm
0.0000 Tw
(                          [<string>] => string // name => definition ) Tj
1 0 0 1 102.0 578.0 Tm
0.0000 Tw
(                          [...] ) Tj
1 0 0 1 102.0 566.0 Tm
0.0000 Tw
(                      \) ) Tj
1 0 0 1 102.0 554.0 Tm
0.0000 Tw
(     [comments]   =>  Array \(   // all comments inside the <!DOCTYPE ) Tj
1 0 0 1 102.0 542.0 Tm
0.0000 Tw
(                                // not set if no comments ) Tj
1 0 0 1 102.0 530.0 Tm
0.0000 Tw
(                          [int] => string ) Tj
1 0 0 1 102.0 518.0 Tm
0.0000 Tw
(                      \) ) Tj
1 0 0 1 102.0 506.0 Tm
0.0000 Tw
(     [pi]         =>  Array \(   // processing instructions  ) Tj
1 0 0 1 102.0 494.0 Tm
0.0000 Tw
(                                // inside <!DOCTYPE ) Tj
1 0 0 1 102.0 482.0 Tm
0.0000 Tw
(                                // not set if no PIs ) Tj
1 0 0 1 102.0 470.0 Tm
0.0000 Tw
(                           [int] => string ) Tj
1 0 0 1 102.0 458.0 Tm
0.0000 Tw
(                      \) ) Tj
1 0 0 1 102.0 446.0 Tm
0.0000 Tw
( \) ) Tj
/F21 10 Tf
1 0 0 1 72.0 428.0 Tm
0.0000 Tw
(IMPORTANT NOTE ABOUT THE ARRAY STRUCTURE ) Tj
/F00 10 Tf
1 0 0 1 102.0 416.0 Tm
0.4547 Tw
(Until version 0.4.0 the array structure will change. This is needed for two reasons. First, the structure is) Tj
1 0 0 1 102.0 404.0 Tm
0.1808 Tw
(insufficient to allow ) Tj
/F02 10 Tf
0.1808 Tw
(complete) Tj
/F00 10 Tf
0.1808 Tw
( compliance to the XML standard. Second, another structure\217mainly with) Tj
1 0 0 1 102.0 392.0 Tm
2.1200 Tw
(additionally stored meta data\217may lead to better performance in searching an editing. As long as) Tj
1 0 0 1 102.0 380.0 Tm
0.0000 Tw
(another structure may prolong parsing time a little, persistent caching may help to save time in the large. ) Tj
/F00 10 Tf
1 0 0 1 102.0 368.0 Tm
0.0000 Tw
(Again: Never touch the array by hand! Ever use the API functions! ) Tj
/F21 10 Tf
1 0 0 1 72.0 350.0 Tm
0.0000 Tw
(Tags ) Tj
/F00 10 Tf
1 0 0 1 102.0 338.0 Tm
0.2925 Tw
(What I call a "tag" here should better called a "node" but this term is not used to prevent confusion with) Tj
1 0 0 1 102.0 326.0 Tm
0.1820 Tw
(the Document Object Model. The ) Tj
/F01 10 Tf
0.1820 Tw
(xml22) Tj
/F00 10 Tf
0.1820 Tw
( code does not conform to the W3C recommendation. It cannot,) Tj
1 0 0 1 102.0 314.0 Tm
0.0000 Tw
(at least because it is not written object oriented. ) Tj
/F00 10 Tf
1 0 0 1 102.0 302.0 Tm
0.2000 Tw
(A "node" and a "tag" are nearly the same thing in this documentation. A "tag" is actually defined by two) Tj
1 0 0 1 102.0 290.0 Tm
0.4016 Tw
(XML tags, one opening and one closing. Also a "text node" of the DOM is not considered as a separate) Tj
1 0 0 1 102.0 278.0 Tm
1.1863 Tw
("tag", it is considered as the "content" of a tag. In most cases this makes no difference, but there are) Tj
1 0 0 1 102.0 266.0 Tm
0.0000 Tw
(some restrictions that result of this model \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/RESTRICTIONS) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F00 10 Tf
1 0 0 1 102.0 254.0 Tm
0.7706 Tw
(Any tag \(or node\) is represented by an array that may be multidimensional if there are any children of) Tj
1 0 0 1 102.0 242.0 Tm
0.3740 Tw
(that tag in the XML tree or if there are attributes set for this tag. The array that represents the document) Tj
1 0 0 1 102.0 230.0 Tm
0.0000 Tw
(is nothing else but a list, i.e. an integer indexed array of those tags \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/Array Structure) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F00 10 Tf
1 0 0 1 102.0 218.0 Tm
0.0519 Tw
(The order of the tags in the array represents the order of the nodes in the document, but the indices of the) Tj
1 0 0 1 102.0 206.0 Tm
1.7411 Tw
(tags are not equal to their logical level in respect to the document. The root node of the document) Tj
1 0 0 1 102.0 194.0 Tm
0.8788 Tw
(usually doesn`t have the index of 0 in the document array. For well formed XML documents you will) Tj
1 0 0 1 102.0 182.0 Tm
0.0000 Tw
(find at this point the XML version string. If you need the root node, use the function ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_root) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 72.0 164.0 Tm
0.0000 Tw
(Searching and Editing ) Tj
/F00 10 Tf
1 0 0 1 102.0 152.0 Tm
0.4241 Tw
(Searching and editing can take place at three levels. You may access the document at the abstract XML) Tj
1 0 0 1 102.0 140.0 Tm
2.2760 Tw
(level, at the tag level or even at the internal array level if you really need this. The latter is not) Tj
1 0 0 1 102.0 128.0 Tm
0.0000 Tw
(recommended, and editing at the tag level should be done very carefuly. ) Tj
/F00 10 Tf
1 0 0 1 102.0 116.0 Tm
0.3330 Tw
(The main difference between XML level and tag level is that for the tag level you have to take care that) Tj
1 0 0 1 102.0 104.0 Tm
1.0112 Tw
(some important fields of the tag array are defined and even initialized with the proper values. For the) Tj
1 0 0 1 102.0 92.0 Tm
0.0000 Tw
(XML level you don`t have to care about this.  ) Tj
/F00 10 Tf
1 0 0 1 102.0 80.0 Tm
0.3806 Tw
(For instance, if you need a particular tag `<wanted>' with a special content, say `John Silver`, you have) Tj
1 0 0 1 102.0 68.0 Tm
0.0000 Tw
(two ways of searching. The first performs an XML level search: ) Tj
/F10 10 Tf
/F21 10 Tf
1 0 0 1 72 37 Tm
(2) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
23 0 obj
6808
endobj
24 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F02 8 0 R
/F10 10 0 R
/F21 15 0 R
>>
>>
endobj
25 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 24 0 R
/Contents 22 0 R
>>
endobj
26 0 obj
<<
/Length 27 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F00 10 Tf
1 0 0 1 102.0 770.0 Tm
0.0000 Tw
(  $doc         = xml22_parse\( 'pirate.xml' \); ) Tj
1 0 0 1 102.0 758.0 Tm
0.0000 Tw
(  $firstresult = xml22_get_all_of_name\( $doc, 'wanted' \); ) Tj
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(  $nextresult  = xml22_get_all_of_content\( $firstresult,  ) Tj
1 0 0 1 102.0 734.0 Tm
0.0000 Tw
(                 '/John Silver/' \); ) Tj
1 0 0 1 102.0 722.0 Tm
0.0000 Tw
(  $pirate      = array_shift\( $nextresult \); // to get the  ) Tj
1 0 0 1 102.0 710.0 Tm
0.0000 Tw
(                                             // first occurance ) Tj
/F00 10 Tf
1 0 0 1 102.0 686.0 Tm
0.0000 Tw
(This is the corresponding tag level search: ) Tj
/F10 10 Tf
1 0 0 1 102.0 674.0 Tm
0.0000 Tw
(  $doc         = xml22_parse\( 'pirate.xml' \); ) Tj
1 0 0 1 102.0 662.0 Tm
0.0000 Tw
(  $search      = array\( 'tag'     => '/wanted/', ) Tj
1 0 0 1 102.0 650.0 Tm
0.0000 Tw
(                        'content' => '/John Silver/' \); ) Tj
1 0 0 1 102.0 638.0 Tm
0.0000 Tw
(  $result      = xml22_get_by_regex\( $doc, $search, XML22_GET_FIRST \); ) Tj
1 0 0 1 102.0 626.0 Tm
0.0000 Tw
(  $pirate      = array_shift\( $result \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 602.0 Tm
0.0000 Tw
(It is up to you which way you prefer. ) Tj
/F00 10 Tf
1 0 0 1 102.0 590.0 Tm
0.8976 Tw
(I prefer to edit at the abstract XML level and this is what ) Tj
/F01 10 Tf
0.8976 Tw
(xml22) Tj
/F00 10 Tf
0.8976 Tw
( is really made for. The DOM on the) Tj
1 0 0 1 102.0 578.0 Tm
1.4671 Tw
(other hand allows ) Tj
/F02 10 Tf
1.4671 Tw
(only) Tj
/F00 10 Tf
1.4671 Tw
( editing at the XML level, so ) Tj
/F01 10 Tf
1.4671 Tw
(xml22) Tj
/F00 10 Tf
1.4671 Tw
( may be considered a little more flexible) Tj
1 0 0 1 102.0 566.0 Tm
0.0000 Tw
(though the code may look not that pretty. ) Tj
/F00 10 Tf
1 0 0 1 102.0 554.0 Tm
0.5217 Tw
(In the function documentation below the functions are marked to belong to the XML level or to the tag) Tj
1 0 0 1 102.0 542.0 Tm
0.0000 Tw
(level. Some of them belong to both because it is hard to decide wether they are those or that. ) Tj
/F00 10 Tf
1 0 0 1 102.0 530.0 Tm
4.1892 Tw
(The performance of the searching functions differs considerably. Very fast are functions like) Tj
1 0 0 1 102.0 518.0 Tm
4.4875 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
4.4875 Tw
(/xml22_get_first_child) Tj
/F00 10 Tf
0 g
4.4875 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
4.4875 Tw
(/xml22_get_last_child) Tj
/F00 10 Tf
0 g
4.4875 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
4.4875 Tw
(/xml22_get_next_sibling) Tj
/F00 10 Tf
0 g
4.4875 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
4.4875 Tw
(/xml22_get_prev_sibling) Tj
/F00 10 Tf
0 g
4.4875 Tw
( or) Tj
1 0 0 1 102.0 506.0 Tm
1.7069 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
1.7069 Tw
(/xml22_get_parent) Tj
/F00 10 Tf
0 g
1.7069 Tw
( because they cost only some array operations. Slow are functions that search for) Tj
1 0 0 1 102.0 494.0 Tm
4.7117 Tw
(specific values like ) Tj
/F02 10 Tf
0 0 0.8 rg
4.7117 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
4.7117 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
4.7117 Tw
(/xml22_get_all_of_content) Tj
/F00 10 Tf
0 g
4.7117 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
4.7117 Tw
(/xml22_get_all_of_name) Tj
/F00 10 Tf
0 g
4.7117 Tw
( or) Tj
1 0 0 1 102.0 482.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_by_id) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. The performance of the others is somewhere in between. ) Tj
/F00 10 Tf
1 0 0 1 102.0 470.0 Tm
0.1022 Tw
(Note: As long as ) Tj
/F01 10 Tf
0.1022 Tw
(xml22) Tj
/F00 10 Tf
0.1022 Tw
( is still under development, from time to time you may find yourself in situations) Tj
1 0 0 1 102.0 458.0 Tm
0.4953 Tw
(where you have to touch the tag arrays directly. This will be obsolete in the future as the code provides) Tj
1 0 0 1 102.0 446.0 Tm
0.0000 Tw
(more and more functions that do this for you. ) Tj
/F21 10 Tf
1 0 0 1 72.0 428.0 Tm
0.0000 Tw
(Functions Returning Tags ) Tj
/F00 10 Tf
1 0 0 1 102.0 416.0 Tm
0.8113 Tw
(The ) Tj
/F01 10 Tf
0.8113 Tw
(xml22) Tj
/F00 10 Tf
0.8113 Tw
( code includes a lot of functions dealing with single tags. Some editing functions return the) Tj
1 0 0 1 102.0 404.0 Tm
0.0000 Tw
(edited documents but a lot of functions return single tags. They are devided into two classes. ) Tj
/F00 10 Tf
1 0 0 1 102.0 392.0 Tm
0.4025 Tw
(Those that may return a collection of tags return them as an indexed array of tag arrays. If you need the) Tj
1 0 0 1 102.0 380.0 Tm
1.6535 Tw
(particular tags you have to take them out of that array first. This may be done by ) Tj
/F10 10 Tf
1.6535 Tw
(array_pop\(\)) Tj
/F00 10 Tf
1.6535 Tw
(,) Tj
1 0 0 1 102.0 368.0 Tm
1.3714 Tw
() Tj
/F10 10 Tf
1.3714 Tw
(array_shift\(\)) Tj
/F00 10 Tf
1.3714 Tw
( or in a ) Tj
/F10 10 Tf
1.3714 Tw
(foreach) Tj
/F00 10 Tf
1.3714 Tw
( loop. You have to use ) Tj
/F10 10 Tf
1.3714 Tw
(array_pop\(\)) Tj
/F00 10 Tf
1.3714 Tw
( even if these functions) Tj
1 0 0 1 102.0 356.0 Tm
1.2178 Tw
(return only ) Tj
/F02 10 Tf
1.2178 Tw
(one) Tj
/F00 10 Tf
1.2178 Tw
( single tag. However, if there really is only one element in the returned array, i.e. the) Tj
1 0 0 1 102.0 344.0 Tm
1.0011 Tw
(searching function got only one match, you may pass the returned array as is to the next searching or) Tj
1 0 0 1 102.0 332.0 Tm
0.2112 Tw
(editing function you choose. The functions will do an ) Tj
/F10 10 Tf
0.2112 Tw
(array_pop\(\)) Tj
/F00 10 Tf
0.2112 Tw
( for you. But beware if you`re not) Tj
1 0 0 1 102.0 320.0 Tm
0.0873 Tw
(shure to got only one single tag. If there are more than one in the array and you pass this array to another) Tj
1 0 0 1 102.0 308.0 Tm
0.0000 Tw
(function as a single tag, only the ) Tj
/F02 10 Tf
0.0000 Tw
(last) Tj
/F00 10 Tf
0.0000 Tw
( of these elements will be recognized. ) Tj
/F00 10 Tf
1 0 0 1 102.0 296.0 Tm
0.3321 Tw
(However, all this must ) Tj
/F02 10 Tf
0.3321 Tw
(not) Tj
/F00 10 Tf
0.3321 Tw
( be done for functions that by definition return only one tag. Most of the time) Tj
1 0 0 1 102.0 284.0 Tm
0.0000 Tw
(you may use functions of the second class. They seem to be more handy. ) Tj
/F00 10 Tf
1 0 0 1 102.0 272.0 Tm
1.5963 Tw
(As of version 0.3.0 a returned array of tag arrays\217class one\217will be considered to be a document) Tj
1 0 0 1 102.0 260.0 Tm
0 Tw
(fragment \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/Document Fragments) Tj
/F00 10 Tf
0 g
0 Tw
(\). You can use ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_is_tag) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_is_fragment) Tj
/F00 10 Tf
0 g
0 Tw
( or) Tj
1 0 0 1 102.0 248.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_is_document) Tj
/F00 10 Tf
0 g
0.0000 Tw
( to check which type of array you are about to use. ) Tj
/F00 10 Tf
1 0 0 1 102.0 236.0 Tm
0.0000 Tw
(The members of the two classes are listed here: ) Tj
/F20 10 Tf
1 0 0 1 87.0 206.0 Tm
0.0000 Tw
() Tj
ET
q
87 207 4 4 re
f
Q
BT
1 0 0 1 95 206 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 206.0 Tm
0.0000 Tw
(functions returning arrays of tags aka document fragments ) Tj
/F00 10 Tf
1 0 0 1 126.0 194.0 Tm
0 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_all_descendants) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_all_ancestors) Tj
/F00 10 Tf
0 g
0 Tw
(,) Tj
1 0 0 1 126.0 182.0 Tm
0 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_all_siblings) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_all_of_name) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_all_of_content) Tj
/F00 10 Tf
0 g
0 Tw
(,) Tj
1 0 0 1 126.0 170.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_copy_fragment) Tj
/F00 10 Tf
0 g
0.0000 Tw
( ) Tj
/F20 10 Tf
1 0 0 1 87.0 152.0 Tm
0.0000 Tw
() Tj
ET
q
87 153 4 4 re
f
Q
BT
1 0 0 1 95 152 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 152.0 Tm
0.0000 Tw
(functions returning single tags ) Tj
/F00 10 Tf
1 0 0 1 126.0 140.0 Tm
0 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_create_tag) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_add_attribute) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_delete_attribute) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_root) Tj
/F00 10 Tf
0 g
0 Tw
(,) Tj
1 0 0 1 126.0 128.0 Tm
0 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_by_id) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_first_child) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_last_child) Tj
/F00 10 Tf
0 g
0 Tw
(, ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_get_next_sibling) Tj
/F00 10 Tf
0 g
0 Tw
(,) Tj
1 0 0 1 126.0 116.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_prev_sibling) Tj
/F00 10 Tf
0 g
0.0000 Tw
( ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 517.44 37 Tm
(3) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
27 0 obj
8942
endobj
28 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
29 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 28 0 R
/Contents 26 0 R
>>
endobj
30 0 obj
<<
/Length 31 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F21 10 Tf
1 0 0 1 72.0 770.0 Tm
0.0000 Tw
(Document Fragments ) Tj
/F00 10 Tf
1 0 0 1 102.0 758.0 Tm
2.0957 Tw
(A document fragment may be considered to be an XML document without the required ) Tj
/F10 10 Tf
2.0957 Tw
(<?xml>) Tj
1 0 0 1 102.0 746.0 Tm
0.7308 Tw
(declaration at the start of it and without any DTD. If you created a) Tj
1 0 0 1 102.0 734.0 Tm
0.0909 Tw
(fragment using ) Tj
/F12 10 Tf
0 0 0.8 rg
0.0909 Tw
(/xml22_create_fragment) Tj
/F10 10 Tf
0 g
0.0909 Tw
( you may treat it as if it were a) Tj
1 0 0 1 102.0 722.0 Tm
3.0556 Tw
(document\217with the one exception, that you cannot parse a fragment) Tj
1 0 0 1 102.0 710.0 Tm
1.7222 Tw
(after you wrote it using ) Tj
/F12 10 Tf
0 0 0.8 rg
1.7222 Tw
(/xml22_write_document) Tj
/F10 10 Tf
0 g
1.7222 Tw
(. Of course, you will) Tj
1 0 0 1 102.0 698.0 Tm
1.0556 Tw
(also fail if you try ) Tj
/F12 10 Tf
0 0 0.8 rg
1.0556 Tw
(/xml22_get_version) Tj
/F10 10 Tf
0 g
1.0556 Tw
( or ) Tj
/F12 10 Tf
0 0 0.8 rg
1.0556 Tw
(/xml22_get_doctype) Tj
/F10 10 Tf
0 g
1.0556 Tw
( with a) Tj
1 0 0 1 102.0 686.0 Tm
0.0000 Tw
(fragment or if you hope to find a root node. ) Tj
/F00 10 Tf
1 0 0 1 102.0 674.0 Tm
0.5012 Tw
(Even only one tag may form a document fragment. The difference to a single tag is\217internally\217that a) Tj
1 0 0 1 102.0 662.0 Tm
0.7605 Tw
(fragment is represented by an array of tag arrays while a single tag is represented by a plain tag array.) Tj
1 0 0 1 102.0 650.0 Tm
0.0000 Tw
(You may use ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_is_tag) Tj
/F00 10 Tf
0 g
0.0000 Tw
( or ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_is_fragment) Tj
/F00 10 Tf
0 g
0.0000 Tw
( to distinguish between the two. ) Tj
/F00 10 Tf
1 0 0 1 102.0 638.0 Tm
1.6161 Tw
(Working with fragments may speed up your scripts a little.  For an example look at this little code) Tj
1 0 0 1 102.0 626.0 Tm
0.8906 Tw
(snippet. It prints the fragment of all the tags belonging to the first child of the root element, including) Tj
1 0 0 1 102.0 614.0 Tm
0.0000 Tw
(that child itself: ) Tj
/F10 10 Tf
1 0 0 1 102.0 602.0 Tm
0.0000 Tw
( $doc     = xml22_parse\( 'file.xml' \); ) Tj
1 0 0 1 102.0 590.0 Tm
0.0000 Tw
( $parent  = xml22_get_first_child\( $doc, xml22_get_root\( $doc \) \); ) Tj
1 0 0 1 102.0 578.0 Tm
0.0000 Tw
( $offset  = count\( xml22_get_all_descendants\( $doc, $parent \)\); ) Tj
1 0 0 1 102.0 566.0 Tm
0.0000 Tw
( $frament = xml22_copy_fragment\( $doc, $parent, $offset \); ) Tj
1 0 0 1 102.0 554.0 Tm
0.0000 Tw
( print xml22_write_document_str\( $fragment, XML22_BEAUTIFY \); ) Tj
/F21 10 Tf
1 0 0 1 72.0 536.0 Tm
0.0000 Tw
(Caching ) Tj
/F00 10 Tf
1 0 0 1 102.0 524.0 Tm
2.6367 Tw
(Sometimes your script may try to read the same XML file over and over again, e.g. in case of) Tj
1 0 0 1 102.0 512.0 Tm
0.4914 Tw
(concatenated XML files, one pointing to some others. To prevent multiple parsing, the parsing function) Tj
1 0 0 1 102.0 500.0 Tm
1.7278 Tw
(tries to cache the already parsed data and reads them back out of the cache if additional parsing is) Tj
1 0 0 1 102.0 488.0 Tm
0.9187 Tw
(requested. This gives a significant increase of performance. The cache is written to the file system, so) Tj
1 0 0 1 102.0 476.0 Tm
0.0000 Tw
(the data do not influence the available memory of the scripting engine. ) Tj
/F00 10 Tf
1 0 0 1 102.0 464.0 Tm
0.0000 Tw
(Exmaple: ) Tj
/F10 10 Tf
1 0 0 1 102.0 452.0 Tm
0.0000 Tw
( $doc1 = xml22_parse\( "file1.xml" \); // file1 is parsed and cached ) Tj
1 0 0 1 102.0 440.0 Tm
0.0000 Tw
( // do something with $doc1 ) Tj
1 0 0 1 102.0 428.0 Tm
0.0000 Tw
( unset\( $doc1 \); ) Tj
1 0 0 1 102.0 416.0 Tm
0.0000 Tw
( $doc2 = xml22_parse\( "file2.xml" \); // file2 is parsed and cached ) Tj
1 0 0 1 102.0 404.0 Tm
0.0000 Tw
( // do something with $doc2 ) Tj
1 0 0 1 102.0 392.0 Tm
0.0000 Tw
( unset\( $doc2 \); ) Tj
1 0 0 1 102.0 380.0 Tm
0.0000 Tw
( $doc1 = xml22_parse\( "file1.xml" \); // file1 is rebuild by the cache ) Tj
1 0 0 1 102.0 368.0 Tm
0.0000 Tw
(                                     // no parsing will happen ) Tj
1 0 0 1 102.0 356.0 Tm
0.0000 Tw
( // do something with $doc1 ) Tj
1 0 0 1 102.0 344.0 Tm
0.0000 Tw
( unset\( $doc1 \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 320.0 Tm
0.5218 Tw
(The caching mechanism checks if a document`s file has been changed since it was parsed the last time,) Tj
1 0 0 1 102.0 308.0 Tm
0.1095 Tw
(there should be no need to turn the caching off. In several cases, e.g. if the script has problems writing to) Tj
1 0 0 1 102.0 296.0 Tm
0.2745 Tw
(the file system, you may want to turn it out nevertheless. This may be done for the whole runtime of the) Tj
1 0 0 1 102.0 284.0 Tm
0.3043 Tw
(script using ) Tj
/F02 10 Tf
0 0 0.8 rg
0.3043 Tw
(/xml22_setup) Tj
/F00 10 Tf
0 g
0.3043 Tw
( or for every single call to ) Tj
/F02 10 Tf
0 0 0.8 rg
0.3043 Tw
(/xml22_parse) Tj
/F00 10 Tf
0 g
0.3043 Tw
( passing the argument ) Tj
/F10 10 Tf
0.3043 Tw
($usecache) Tj
/F00 10 Tf
0.3043 Tw
( to) Tj
1 0 0 1 102.0 272.0 Tm
0.0000 Tw
(that function. ) Tj
/F21 12 Tf
1 0 0 1 72.0 254.0 Tm
0.0000 Tw
(INSTALLATION ) Tj
/F00 10 Tf
1 0 0 1 102.0 239.6 Tm
0.0000 Tw
(First you have to download the latest release. ) Tj
/F00 10 Tf
1 0 0 1 102.0 227.6 Tm
0.0000 Tw
(Then type this sequence on your Unix/Linux box: ) Tj
/F10 10 Tf
1 0 0 1 102.0 215.6 Tm
0.0000 Tw
(  tar -xzf xml22-0_3_2.tar.gz ) Tj
1 0 0 1 102.0 203.6 Tm
0.0000 Tw
(  cd xml22-0_3_2 ) Tj
1 0 0 1 102.0 191.6 Tm
0.0000 Tw
(  make install INSTALLDIR=<path> ) Tj
/F00 10 Tf
1 0 0 1 102.0 167.6 Tm
0.0000 Tw
(If you want to uninstall the files type: ) Tj
/F10 10 Tf
1 0 0 1 102.0 155.6 Tm
0.0000 Tw
(  make uninstall INSTALLDIR=<path> ) Tj
/F00 10 Tf
1 0 0 1 102.0 131.6 Tm
2.2650 Tw
(If your system is Windows you may use a tool like Winzip to unpack the archive, then copy all) Tj
1 0 0 1 102.0 119.6 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
(*.inc) Tj
/F00 10 Tf
0.0000 Tw
(-files of the ) Tj
/F03 10 Tf
0.0000 Tw
(./xml22) Tj
/F00 10 Tf
0.0000 Tw
( subdirectory to your prefered destination. ) Tj
/F00 10 Tf
1 0 0 1 102.0 107.6 Tm
1.2684 Tw
(To use ) Tj
/F01 10 Tf
1.2684 Tw
(xml22) Tj
/F00 10 Tf
1.2684 Tw
( in your own scripts, include the file ) Tj
/F03 10 Tf
1.2684 Tw
(xml22.inc) Tj
/F00 10 Tf
1.2684 Tw
(. If all you need is the parser, you may) Tj
1 0 0 1 102.0 95.6 Tm
0.6417 Tw
(include only ) Tj
/F03 10 Tf
0.6417 Tw
(xml22-parser.inc) Tj
/F00 10 Tf
0.6417 Tw
(, which includes ) Tj
/F03 10 Tf
0.6417 Tw
(xml22-share.inc) Tj
/F00 10 Tf
0.6417 Tw
( via ) Tj
/F02 10 Tf
0.6417 Tw
(require_once\(\)) Tj
/F00 10 Tf
0.6417 Tw
(. If you do not want) Tj
1 0 0 1 102.0 83.6 Tm
0.0000 Tw
(to edit XML files, you may omit to include ) Tj
/F03 10 Tf
0.0000 Tw
(xml22-edit.inc) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(4) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
31 0 obj
6926
endobj
32 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F02 8 0 R
/F03 9 0 R
/F10 10 0 R
/F12 12 0 R
/F21 15 0 R
>>
>>
endobj
33 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 32 0 R
/Contents 30 0 R
>>
endobj
34 0 obj
<<
/Length 35 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F21 12 Tf
1 0 0 1 72.0 770.0 Tm
0.0000 Tw
(FUNCTIONS ) Tj
/F21 10 Tf
1 0 0 1 72.0 748.4 Tm
0.0000 Tw
(Parse ) Tj
/F20 10 Tf
1 0 0 1 87.0 730.4 Tm
0.0000 Tw
(xml22_parse ) Tj
/F10 10 Tf
1 0 0 1 102.0 712.4 Tm
0.0000 Tw
( array xml22_parse \( string $file,  ) Tj
1 0 0 1 102.0 700.4 Tm
0.0000 Tw
(                    [bool $usecache = XML22_CACHE] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 676.4 Tm
2.2564 Tw
(This function parses the XML document as given by ) Tj
/F10 10 Tf
2.2564 Tw
($file) Tj
/F00 10 Tf
2.2564 Tw
( and builds a multidimensional array) Tj
1 0 0 1 102.0 664.4 Tm
0.7839 Tw
(representig this XML document. ) Tj
/F10 10 Tf
0.7839 Tw
($file) Tj
/F00 10 Tf
0.7839 Tw
( may either be a valid path of the local file system or a single) Tj
1 0 0 1 102.0 652.4 Tm
1.7131 Tw
(string containing well formed XML. An XML string is assumed if the ) Tj
/F10 10 Tf
1.7131 Tw
($file) Tj
/F00 10 Tf
1.7131 Tw
( string starts with an) Tj
1 0 0 1 102.0 640.4 Tm
0.6229 Tw
() Tj
/F10 10 Tf
0.6229 Tw
(<?xml>) Tj
/F00 10 Tf
0.6229 Tw
( declaration. So, if you pass a huge string with a misspelled opening, the string will be treated) Tj
1 0 0 1 102.0 628.4 Tm
0.0000 Tw
(as a file name. The function returns the document array or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 616.4 Tm
1.8038 Tw
(The parser changes the document a little, mainly in respect to the XML syntax. These changes are) Tj
1 0 0 1 102.0 604.4 Tm
1.8887 Tw
(remaining when the document is written back to a file. Multiple declarations of the same entity or) Tj
1 0 0 1 102.0 592.4 Tm
1.3513 Tw
(notation are discarded with an error message.  Newlines inside of CDATA are replaced with spaces.) Tj
1 0 0 1 102.0 580.4 Tm
1.1775 Tw
(Comments inside of the doctype declaration are stored in the array but when the document is written) Tj
1 0 0 1 102.0 568.4 Tm
0.0000 Tw
(they are ignored \(this is considered to be a bug\). ) Tj
/F00 10 Tf
1 0 0 1 102.0 556.4 Tm
1.5064 Tw
(As required by the XML specification, entities are resolved. Predefined entities are expanded by the) Tj
1 0 0 1 102.0 544.4 Tm
0.3936 Tw
(parser and will be restored by ) Tj
/F02 10 Tf
0 0 0.8 rg
0.3936 Tw
(/xml22_write_document) Tj
/F00 10 Tf
0 g
0.3936 Tw
(. All other entities are resolved while parsing, but) Tj
1 0 0 1 102.0 532.4 Tm
0.5194 Tw
(they are not encoded again when the document is written. You may use ) Tj
/F02 10 Tf
0 0 0.8 rg
0.5194 Tw
(/xml22_get_entity) Tj
/F00 10 Tf
0 g
0.5194 Tw
( to do this by) Tj
1 0 0 1 102.0 520.4 Tm
0.0000 Tw
(yourself if needed. ) Tj
/F00 10 Tf
1 0 0 1 102.0 508.4 Tm
1.4900 Tw
(By default the parser is non-validating, i.e. external entities are not resolved. You may set the setup) Tj
1 0 0 1 102.0 496.4 Tm
1.7547 Tw
(option ) Tj
/F02 10 Tf
1.7547 Tw
(XML22_OPT_EXTERNALS) Tj
/F00 10 Tf
1.7547 Tw
( to a value of ) Tj
/F02 10 Tf
1.7547 Tw
(true) Tj
/F00 10 Tf
1.7547 Tw
( if you want external entities to be parsed \(see) Tj
1 0 0 1 102.0 484.4 Tm
0.1280 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.1280 Tw
(/xml22_setup) Tj
/F00 10 Tf
0 g
0.1280 Tw
(\). As stated for general entities, external entities are resolved but they cannot be restored by) Tj
1 0 0 1 102.0 472.4 Tm
0.6820 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.6820 Tw
(/xml22_write_document) Tj
/F00 10 Tf
0 g
0.6820 Tw
(. If the external entity is given as an URI with a `http://`-prefix, the parser tries) Tj
1 0 0 1 102.0 460.4 Tm
0.0000 Tw
(to GET it. ) Tj
/F00 10 Tf
1 0 0 1 102.0 448.4 Tm
1.2277 Tw
(The ) Tj
/F10 10 Tf
1.2277 Tw
($usecache) Tj
/F00 10 Tf
1.2277 Tw
( parameter switches the internal caching mechanism. A value of ) Tj
/F02 10 Tf
1.2277 Tw
(true) Tj
/F00 10 Tf
1.2277 Tw
(\217which is the) Tj
1 0 0 1 102.0 436.4 Tm
2.0450 Tw
(default\217turns caching on, ) Tj
/F02 10 Tf
2.0450 Tw
(false) Tj
/F00 10 Tf
2.0450 Tw
( turns it off \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
2.0450 Tw
(/Caching) Tj
/F00 10 Tf
0 g
2.0450 Tw
(\). Instead of ) Tj
/F02 10 Tf
2.0450 Tw
(true) Tj
/F00 10 Tf
2.0450 Tw
( and ) Tj
/F02 10 Tf
2.0450 Tw
(false) Tj
/F00 10 Tf
2.0450 Tw
( you may use) Tj
1 0 0 1 102.0 424.4 Tm
0.6177 Tw
(XML22_CACHE or XML22_NOCACHE. If the cache encounters a problem, an error message will be) Tj
1 0 0 1 102.0 412.4 Tm
0.0000 Tw
(stored \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_error) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\) and the file will be parsed again. Passed XML strings will not be cached. ) Tj
/F00 10 Tf
1 0 0 1 102.0 400.4 Tm
0.2306 Tw
(The caching mechanism checks if a file has been changed since the last request for parsing. This is done) Tj
1 0 0 1 102.0 388.4 Tm
1.6700 Tw
(reading the modification time of the file \(using ) Tj
/F10 10 Tf
1.6700 Tw
(filemtime\(\)) Tj
/F00 10 Tf
1.6700 Tw
(\). If the file has been changed, it is) Tj
1 0 0 1 102.0 376.4 Tm
0.0000 Tw
(parsed again. ) Tj
/F00 10 Tf
1 0 0 1 102.0 364.4 Tm
0.9528 Tw
(Note that caching still only works for the execution time of the script, not for the whole session. This) Tj
1 0 0 1 102.0 352.4 Tm
0.0000 Tw
(may change in the future. ) Tj
/F20 10 Tf
1 0 0 1 87.0 334.4 Tm
0.0000 Tw
(xml22_register_pi_func ) Tj
/F10 10 Tf
1 0 0 1 102.0 316.4 Tm
0.0000 Tw
(  bool xml22_register_pi_func\( string $target, string $funcname \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 292.4 Tm
1.8493 Tw
(The function may be used to register a callback function for a processing instruction. The function) Tj
1 0 0 1 102.0 280.4 Tm
0.8100 Tw
(expects the case sensitive target name and the name of the callback function. ) Tj
/F01 10 Tf
0.8100 Tw
(xml22_register_pi_func) Tj
/F00 10 Tf
1 0 0 1 102.0 268.4 Tm
3.8367 Tw
(should be called ) Tj
/F02 10 Tf
3.8367 Tw
(before) Tj
/F00 10 Tf
3.8367 Tw
( ) Tj
/F02 10 Tf
0 0 0.8 rg
3.8367 Tw
(/xml22_parse) Tj
/F00 10 Tf
0 g
3.8367 Tw
( is called, otherwise nothing will happen. All processing) Tj
1 0 0 1 102.0 256.4 Tm
0.2322 Tw
(instructions are passed to the callback function as they are recognized by the parser. If the parser reads a) Tj
1 0 0 1 102.0 244.4 Tm
0.4739 Tw
(PI with no registered function the PI will be silently ignored but still stored in the document array. You) Tj
1 0 0 1 102.0 232.4 Tm
0.0000 Tw
(may register as many callback functions as needed. ) Tj
/F00 10 Tf
1 0 0 1 102.0 220.4 Tm
0.1460 Tw
(If the callback function to register is not defined, ) Tj
/F01 10 Tf
0.1460 Tw
(xml22_register_pi_func) Tj
/F00 10 Tf
0.1460 Tw
( returns ) Tj
/F02 10 Tf
0.1460 Tw
(false) Tj
/F00 10 Tf
0.1460 Tw
( and sets an error) Tj
1 0 0 1 102.0 208.4 Tm
0.0000 Tw
(message. ) Tj
/F02 10 Tf
0.0000 Tw
(true) Tj
/F00 10 Tf
0.0000 Tw
( is returned on success. ) Tj
/F00 10 Tf
1 0 0 1 102.0 196.4 Tm
0.0000 Tw
(The callback function will receive only one argument, the data of the processing instruction: ) Tj
/F10 10 Tf
1 0 0 1 102.0 184.4 Tm
0.0000 Tw
(  bool callback\( string $data \) ) Tj
/F20 10 Tf
1 0 0 1 87.0 160.4 Tm
0.0000 Tw
(xml22_register_char_entity_set ) Tj
/F10 10 Tf
1 0 0 1 102.0 142.4 Tm
0.0000 Tw
( array xml22_register_char_entity_set\( array $match = null,  ) Tj
1 0 0 1 102.0 130.4 Tm
0.0000 Tw
(                                       array $replace = null \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 106.4 Tm
0 Tw
(By default, only predefined entities are encoded by ) Tj
/F02 10 Tf
0 0 0.8 rg
0 Tw
(/xml22_write_document) Tj
/F00 10 Tf
0 g
0 Tw
( and) Tj
1 0 0 1 102.0 94.4 Tm
0.2300 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.2300 Tw
(/xml22_write_document_str) Tj
/F00 10 Tf
0 g
0.2300 Tw
(, though the parser resolves character entities as well. With this function it is) Tj
1 0 0 1 102.0 82.4 Tm
0.2924 Tw
(possible to register a set of character entities to be encoded when a document is written. Two arguments) Tj
1 0 0 1 102.0 70.4 Tm
0.0087 Tw
(should be passed, the array ) Tj
/F10 10 Tf
0.0087 Tw
($match) Tj
/F00 10 Tf
0.0087 Tw
( with a number of perl regular expressions and the array ) Tj
/F10 10 Tf
0.0087 Tw
($replace) Tj
/F00 10 Tf
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 517.44 37 Tm
(5) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
35 0 obj
8104
endobj
36 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
37 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 36 0 R
/Contents 34 0 R
>>
endobj
38 0 obj
<<
/Length 39 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F00 10 Tf
1 0 0 1 102.0 770.0 Tm
0.0000 Tw
(build by the same number of character entities to replace the matches. ) Tj
/F21 10 Tf
1 0 0 1 72.0 752.0 Tm
0.0000 Tw
(Write ) Tj
/F20 10 Tf
1 0 0 1 87.0 734.0 Tm
0.0000 Tw
(xml22_write_document ) Tj
/F10 10 Tf
1 0 0 1 102.0 716.0 Tm
0.0000 Tw
( bool xml22_write_document\( array $document,  ) Tj
1 0 0 1 102.0 704.0 Tm
0.0000 Tw
(                            ressource $fd, [int $style = XML22_NORMALIZE] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 680.0 Tm
0.1078 Tw
(This function will write the document array as build by ) Tj
/F02 10 Tf
0 0 0.8 rg
0.1078 Tw
(/xml22_parse) Tj
/F00 10 Tf
0 g
0.1078 Tw
( to the file descriptor ) Tj
/F10 10 Tf
0.1078 Tw
($fd) Tj
/F00 10 Tf
0.1078 Tw
( as a well) Tj
1 0 0 1 102.0 668.0 Tm
1.0254 Tw
(formed XML document. Predefined entities are encoded. General or external entities are not encoded.) Tj
1 0 0 1 102.0 656.0 Tm
1.9893 Tw
(Tags without any content will be written in short notation, like ) Tj
/F10 10 Tf
1.9893 Tw
(<tag id="id"/>) Tj
/F00 10 Tf
1.9893 Tw
(. The function) Tj
1 0 0 1 102.0 644.0 Tm
0.0000 Tw
(returns ) Tj
/F02 10 Tf
0.0000 Tw
(true) Tj
/F00 10 Tf
0.0000 Tw
( on success or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 632.0 Tm
0 Tw
(The parameter ) Tj
/F10 10 Tf
0 Tw
($style) Tj
/F00 10 Tf
0 Tw
( determines in which way the document is written. A value of) Tj
1 0 0 1 102.0 620.0 Tm
3.2009 Tw
(XML22_NORMALIZE\217which is the default\217will cause the function to write the document in) Tj
1 0 0 1 102.0 608.0 Tm
0 Tw
(normalized form, i.e. without any spaces, tabs or newlines. You may set this variable to) Tj
1 0 0 1 102.0 596.0 Tm
0.0000 Tw
(XML22_BEAUTIFY to write the document in human readable form. ) Tj
/F20 10 Tf
1 0 0 1 87.0 578.0 Tm
0.0000 Tw
(xml22_write_document_str ) Tj
/F10 10 Tf
1 0 0 1 102.0 560.0 Tm
0.0000 Tw
( string xml22_write_document_str\( array &$document  ) Tj
1 0 0 1 102.0 548.0 Tm
0.0000 Tw
(                                 [, int $style = XML22_NORMALIZE] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 524.0 Tm
0.0776 Tw
(The function behaves the same like ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0776 Tw
(/xml22_write_document) Tj
/F00 10 Tf
0 g
0.0776 Tw
( but is not writing to a file descriptor but to a) Tj
1 0 0 1 102.0 512.0 Tm
0.0000 Tw
(string which is returned on success. ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( will be returned on error. ) Tj
/F21 10 Tf
1 0 0 1 72.0 494.0 Tm
0.0000 Tw
(Search ) Tj
/F20 10 Tf
1 0 0 1 87.0 476.0 Tm
0.0000 Tw
(xml22_get_by_regex ) Tj
/F00 10 Tf
1 0 0 1 102.0 464.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 452.0 Tm
0.0000 Tw
( array xml22_get_by_regex\( array &$document,  ) Tj
1 0 0 1 102.0 440.0 Tm
0.0000 Tw
(                           array &$query,  ) Tj
1 0 0 1 102.0 428.0 Tm
0.0000 Tw
(                          [int $tokencount = XML22_GET_ALL,  ) Tj
1 0 0 1 102.0 416.0 Tm
0.0000 Tw
(                           int $startindex = 0,  ) Tj
1 0 0 1 102.0 404.0 Tm
0.0000 Tw
(                           int $offset     = 0] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 380.0 Tm
0.5258 Tw
(This function is used to search the document array for specific tags or values. It returns an array of any) Tj
1 0 0 1 102.0 368.0 Tm
0.0000 Tw
(number of tag arrays that match the query as given by ) Tj
/F10 10 Tf
0.0000 Tw
($query) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure.  ) Tj
/F00 10 Tf
1 0 0 1 102.0 356.0 Tm
0.5269 Tw
(The parameter ) Tj
/F10 10 Tf
0.5269 Tw
($tokencount) Tj
/F00 10 Tf
0.5269 Tw
( determines the number of found tags to be returned. If ) Tj
/F10 10 Tf
0.5269 Tw
($tokencount) Tj
/F00 10 Tf
1 0 0 1 102.0 344.0 Tm
1.1343 Tw
(is set to 0, the function will return all tags found. If it is greater than 0, the function returns only the) Tj
1 0 0 1 102.0 332.0 Tm
0.8650 Tw
() Tj
/F10 10 Tf
0.8650 Tw
($tokencount) Tj
/F00 10 Tf
0.8650 Tw
( first. You may use XML22_GET_ALL or XML22_GET_FIRST instead of numerical) Tj
1 0 0 1 102.0 320.0 Tm
0.0000 Tw
(arguments. The default is to return all found tags. ) Tj
/F00 10 Tf
1 0 0 1 102.0 308.0 Tm
2.4137 Tw
(There are some parameters to influence the performance of the search a little. If you specify the) Tj
1 0 0 1 102.0 296.0 Tm
2.7300 Tw
() Tj
/F10 10 Tf
2.7300 Tw
($startindex) Tj
/F00 10 Tf
2.7300 Tw
(, the search will start at the ) Tj
/F10 10 Tf
2.7300 Tw
($startindex) Tj
/F00 10 Tf
2.7300 Tw
(th element of the array passed to as) Tj
1 0 0 1 102.0 284.0 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
($document) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F00 10 Tf
1 0 0 1 102.0 272.0 Tm
0.1139 Tw
(As another option ) Tj
/F10 10 Tf
0.1139 Tw
($offset) Tj
/F00 10 Tf
0.1139 Tw
( may be set. Is it greater than 0, the search will end ) Tj
/F02 10 Tf
0.1139 Tw
(at) Tj
/F00 10 Tf
0.1139 Tw
( the ) Tj
/F10 10 Tf
0.1139 Tw
(\($startindex) Tj
1 0 0 1 102.0 260.0 Tm
0.2486 Tw
(+ $offset\)) Tj
/F00 10 Tf
0.2486 Tw
(th element. Is ) Tj
/F10 10 Tf
0.2486 Tw
($offset == 0) Tj
/F00 10 Tf
0.2486 Tw
(\217which is the default\217the search will continue down to) Tj
1 0 0 1 102.0 248.0 Tm
3.6987 Tw
(the end of the document array. An ) Tj
/F10 10 Tf
3.6987 Tw
($offset) Tj
/F00 10 Tf
3.6987 Tw
( lesser than 0 will perform a backward search.) Tj
1 0 0 1 102.0 236.0 Tm
0.7013 Tw
() Tj
/F10 10 Tf
0.7013 Tw
($startindex) Tj
/F00 10 Tf
0.7013 Tw
( is then counted from the last element of ) Tj
/F10 10 Tf
0.7013 Tw
($document) Tj
/F00 10 Tf
0.7013 Tw
(. If you need a backward search) Tj
1 0 0 1 102.0 224.0 Tm
0.6900 Tw
(starting at the end of the document running up to the first element, you may set ) Tj
/F10 10 Tf
0.6900 Tw
($startindex = 0) Tj
/F00 10 Tf
1 0 0 1 102.0 212.0 Tm
0.0000 Tw
(and ) Tj
/F10 10 Tf
0.0000 Tw
($offset = -1) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F00 10 Tf
1 0 0 1 102.0 200.0 Tm
0.0000 Tw
(The structure of a query is ) Tj
/F10 10 Tf
1 0 0 1 102.0 188.0 Tm
0.0000 Tw
( $query = Array\( 'field' => '/regexp/', 'field' => '/regexp/' ... \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 164.0 Tm
0.0000 Tw
(or ) Tj
/F10 10 Tf
1 0 0 1 102.0 152.0 Tm
0.0000 Tw
( $query = Array\( 'field' => '/regexp/', ...,  ) Tj
1 0 0 1 102.0 140.0 Tm
0.0000 Tw
(                'attribute' => array\( 'name' => '/regexp/', ... \) \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 116.0 Tm
0.2789 Tw
(To examine the tags, you have to ) Tj
/F10 10 Tf
0.2789 Tw
(array_shift\(\)) Tj
/F00 10 Tf
0.2789 Tw
( them off of the returned array even if there is only) Tj
1 0 0 1 102.0 104.0 Tm
0.0000 Tw
(one tag found \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/Functions Returning Tags) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F00 10 Tf
1 0 0 1 102.0 92.0 Tm
0.2938 Tw
(Note: From version 0.0.2 to 0.2.95 the internal implementation of ) Tj
/F02 10 Tf
0 0 0.8 rg
0.2938 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
0.2938 Tw
( changed a little.) Tj
1 0 0 1 102.0 80.0 Tm
0.0000 Tw
(In particular the meaning of ) Tj
/F10 10 Tf
0.0000 Tw
($startindex) Tj
/F00 10 Tf
0.0000 Tw
( and ) Tj
/F10 10 Tf
0.0000 Tw
($offset) Tj
/F00 10 Tf
0.0000 Tw
( is different now. ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(6) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
39 0 obj
7358
endobj
40 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
41 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 40 0 R
/Contents 38 0 R
>>
endobj
42 0 obj
<<
/Length 43 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F20 10 Tf
1 0 0 1 87.0 770.0 Tm
0.0000 Tw
(xml22_get_all_siblings ) Tj
/F00 10 Tf
1 0 0 1 102.0 758.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(  array xml22_get_all_siblings\( array &$document, array &$tag \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 722.0 Tm
0.5395 Tw
(This function returns an array of all elements of the same XML level and with the same parent node as) Tj
1 0 0 1 102.0 710.0 Tm
0.0000 Tw
() Tj
/F10 10 Tf
0.0000 Tw
($searchtag) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. The result ) Tj
/F02 10 Tf
0.0000 Tw
(includes) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
0.0000 Tw
($searchtag) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 692.0 Tm
0.0000 Tw
(xml22_get_all_descendants ) Tj
/F00 10 Tf
1 0 0 1 102.0 680.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 668.0 Tm
0.0000 Tw
(  array xml22_get_all_descendants\( array &$document, array &$tag \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 644.0 Tm
0.4481 Tw
(This function returns an array of all subsequent elements of ) Tj
/F10 10 Tf
0.4481 Tw
($searchtag) Tj
/F00 10 Tf
0.4481 Tw
(, ) Tj
/F02 10 Tf
0.4481 Tw
(false) Tj
/F00 10 Tf
0.4481 Tw
( on error. Not only the) Tj
1 0 0 1 102.0 632.0 Tm
0.8318 Tw
(immediate children, but also the children`s children and so forth are returned. If you need only a tag`s) Tj
1 0 0 1 102.0 620.0 Tm
0.0000 Tw
(immediate children, check out the `children`-field of the tag. ) Tj
/F20 10 Tf
1 0 0 1 87.0 602.0 Tm
0.0000 Tw
(xml22_get_all_ancestors ) Tj
/F00 10 Tf
1 0 0 1 102.0 590.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 578.0 Tm
0.0000 Tw
(  array xml22_get_all_ancestors\( array &$document, array &$tag \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 554.0 Tm
0.1550 Tw
(This fnction returns an array of all related parents and grandparents of ) Tj
/F10 10 Tf
0.1550 Tw
($searchtag) Tj
/F00 10 Tf
0.1550 Tw
( or ) Tj
/F02 10 Tf
0.1550 Tw
(false) Tj
/F00 10 Tf
0.1550 Tw
( on failure.) Tj
1 0 0 1 102.0 542.0 Tm
0.4658 Tw
(All parent tags up to the root node of the XML document are returned. The immediate parent will be at) Tj
1 0 0 1 102.0 530.0 Tm
0.0245 Tw
(the start of the returned array, the root node will be at the end. If you need ) Tj
/F02 10 Tf
0.0245 Tw
(only) Tj
/F00 10 Tf
0.0245 Tw
( the immediate parent of a) Tj
1 0 0 1 102.0 518.0 Tm
0.0000 Tw
(tag use L/xml22_get_parent) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 500.0 Tm
0.0000 Tw
(xml22_get_all_of_name ) Tj
/F00 10 Tf
1 0 0 1 102.0 488.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 476.0 Tm
0.0000 Tw
(  array xml22_get_all_of_name\( array &$document, string $name, $mode = false \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 452.0 Tm
0.2468 Tw
(The function returns an array of all tags of name ) Tj
/F10 10 Tf
0.2468 Tw
($name) Tj
/F00 10 Tf
0.2468 Tw
( that are found in the document array; ) Tj
/F02 10 Tf
0.2468 Tw
(false) Tj
/F00 10 Tf
0.2468 Tw
( will) Tj
1 0 0 1 102.0 440.0 Tm
0.2210 Tw
(be returned if no tag was found or if an error occured. The argument ) Tj
/F10 10 Tf
0.2210 Tw
($name) Tj
/F00 10 Tf
0.2210 Tw
( should be a plain string, no) Tj
1 0 0 1 102.0 428.0 Tm
0.0000 Tw
(regular expression. ) Tj
/F00 10 Tf
1 0 0 1 102.0 416.0 Tm
0 Tw
(As of version 0.3.2 you may add an argument ) Tj
/F10 10 Tf
0 Tw
($mode) Tj
/F00 10 Tf
0 Tw
( to the function. If it is set to) Tj
1 0 0 1 102.0 404.0 Tm
1.4887 Tw
() Tj
/F02 10 Tf
1.4887 Tw
(XML22_START_ROOT) Tj
/F00 10 Tf
1.4887 Tw
( the search will start at the root node of the document \(which may be a little) Tj
1 0 0 1 102.0 392.0 Tm
0.0000 Tw
(faster\). ) Tj
/F20 10 Tf
1 0 0 1 87.0 374.0 Tm
0.0000 Tw
(xml22_get_all_of_content ) Tj
/F00 10 Tf
1 0 0 1 102.0 362.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 350.0 Tm
0.0000 Tw
(  array xml22_get_all_of_content\( array &$document, string $regex, $mode = false \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 326.0 Tm
0.1459 Tw
(This function returns an array of all tags of which the `content' field matches the perl compatible regular) Tj
1 0 0 1 102.0 314.0 Tm
0.0000 Tw
(expression given by ) Tj
/F10 10 Tf
0.0000 Tw
($regex) Tj
/F00 10 Tf
0.0000 Tw
(. The function will retun ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( if no tag was found or on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 302.0 Tm
0 Tw
(As of version 0.3.2 you may add an argument ) Tj
/F10 10 Tf
0 Tw
($mode) Tj
/F00 10 Tf
0 Tw
( to the function. If it is set to) Tj
1 0 0 1 102.0 290.0 Tm
1.4887 Tw
() Tj
/F02 10 Tf
1.4887 Tw
(XML22_START_ROOT) Tj
/F00 10 Tf
1.4887 Tw
( the search will start at the root node of the document \(which may be a little) Tj
1 0 0 1 102.0 278.0 Tm
0.0000 Tw
(faster\). ) Tj
/F20 10 Tf
1 0 0 1 87.0 260.0 Tm
0.0000 Tw
(xml22_get_version ) Tj
/F00 10 Tf
1 0 0 1 102.0 248.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 236.0 Tm
0.0000 Tw
(  array xml22_get_version\( array &$document \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 212.0 Tm
0.7927 Tw
(This function returns an array containing information about the XML version of the document or ) Tj
/F02 10 Tf
0.7927 Tw
(false) Tj
/F00 10 Tf
1 0 0 1 102.0 200.0 Tm
1.8257 Tw
(on failure. If the version string misses information, i.e. the ) Tj
/F10 10 Tf
1.8257 Tw
(encoding) Tj
/F00 10 Tf
1.8257 Tw
( attribute, the returned array) Tj
1 0 0 1 102.0 188.0 Tm
0.0000 Tw
(misses this field too. ) Tj
/F00 10 Tf
1 0 0 1 102.0 176.0 Tm
0.0000 Tw
(The array structure looks like this: ) Tj
/F10 10 Tf
1 0 0 1 102.0 164.0 Tm
0.0000 Tw
(  Array\( 'version'    => <string>,  // "1.0" ) Tj
1 0 0 1 102.0 152.0 Tm
0.0000 Tw
(         'standalone' => <string>,  // "no" | "yes" ) Tj
1 0 0 1 102.0 140.0 Tm
0.0000 Tw
(         'encoding'   => <string> \) // "US-ASCII" or whatever ) Tj
/F20 10 Tf
1 0 0 1 87.0 116.0 Tm
0.0000 Tw
(xml22_get_doctype ) Tj
/F00 10 Tf
1 0 0 1 102.0 104.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 92.0 Tm
0.0000 Tw
(  array xml22_get_doctype\( array &$document \) ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 517.44 37 Tm
(7) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
43 0 obj
6760
endobj
44 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
45 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 44 0 R
/Contents 42 0 R
>>
endobj
46 0 obj
<<
/Length 47 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F00 10 Tf
1 0 0 1 102.0 770.0 Tm
0.7933 Tw
(The function returns an array containing information about the XML doctype of the document or ) Tj
/F02 10 Tf
0.7933 Tw
(false) Tj
/F00 10 Tf
1 0 0 1 102.0 758.0 Tm
1.8594 Tw
(on failure. If the doctype string misses information, i.e. the name in case of a SYSTEM DTD, the) Tj
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(returned array misses this field too. ) Tj
/F10 10 Tf
1 0 0 1 102.0 734.0 Tm
0.0000 Tw
(  Array\( 'root'       => <string>,  // the name of the root element ) Tj
1 0 0 1 102.0 722.0 Tm
0.0000 Tw
(         'SYSTEM'     => <string>,  // the location of the SYSTEM DTD ) Tj
1 0 0 1 102.0 710.0 Tm
0.0000 Tw
(         'name'       => <string>,  // the name of the PUBLIC DTD ) Tj
1 0 0 1 102.0 698.0 Tm
0.0000 Tw
(         'PUBLIC'     => <string> \) // the location of the PUBLIC DTD ) Tj
/F20 10 Tf
1 0 0 1 87.0 674.0 Tm
0.0000 Tw
(xml22_get_root ) Tj
/F00 10 Tf
1 0 0 1 102.0 662.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 650.0 Tm
0.0000 Tw
(  array xml22_get_root\( array &$document \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 626.0 Tm
0.0000 Tw
(The function returns one array representig the root element of the document or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 608.0 Tm
0.0000 Tw
(xml22_has_children ) Tj
/F00 10 Tf
1 0 0 1 102.0 596.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 584.0 Tm
0.0000 Tw
(  int xml22_has_children\( array &$tag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 560.0 Tm
0.0000 Tw
(The function returns the number of children if ) Tj
/F10 10 Tf
0.0000 Tw
($tag) Tj
/F00 10 Tf
0.0000 Tw
( has any or 0 if not, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on error. ) Tj
/F20 10 Tf
1 0 0 1 87.0 542.0 Tm
0.0000 Tw
(xml22_get_first_child ) Tj
/F00 10 Tf
1 0 0 1 102.0 530.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 518.0 Tm
0.0000 Tw
(  array xml22_get_first_child\( array &$document, array &$parent \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 494.0 Tm
0.0000 Tw
(Returns the first immediate child of ) Tj
/F10 10 Tf
0.0000 Tw
($parent) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( if no child was found or on error. ) Tj
/F20 10 Tf
1 0 0 1 87.0 476.0 Tm
0.0000 Tw
(xml22_get_last_child ) Tj
/F00 10 Tf
1 0 0 1 102.0 464.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 452.0 Tm
0.0000 Tw
(  array xml22_get_last_child\( array &$document, array &$parent \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 428.0 Tm
0.0000 Tw
(Returns the last immediate child of ) Tj
/F10 10 Tf
0.0000 Tw
($parent) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( if no child was found or on error. ) Tj
/F20 10 Tf
1 0 0 1 87.0 410.0 Tm
0.0000 Tw
(xml22_get_next_sibling ) Tj
/F00 10 Tf
1 0 0 1 102.0 398.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 386.0 Tm
0.0000 Tw
(  array xml22_get_next_sibling\( array &$document, array &$tag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 362.0 Tm
0.1252 Tw
(Returns the successor tag of the same level in the XML tree as ) Tj
/F10 10 Tf
0.1252 Tw
($tag) Tj
/F00 10 Tf
0.1252 Tw
(, ) Tj
/F02 10 Tf
0.1252 Tw
(false) Tj
/F00 10 Tf
0.1252 Tw
( on failure or if no match was) Tj
1 0 0 1 102.0 350.0 Tm
0.0000 Tw
(found. ) Tj
/F20 10 Tf
1 0 0 1 87.0 332.0 Tm
0.0000 Tw
(xml22_get_prev_sibling ) Tj
/F00 10 Tf
1 0 0 1 102.0 320.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 308.0 Tm
0.0000 Tw
(  array xml22_get_prev_sibling\( array &$document, array &$tag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 284.0 Tm
0.3633 Tw
(Returns the ancestor tag of the same level in the XML tree as ) Tj
/F10 10 Tf
0.3633 Tw
($tag) Tj
/F00 10 Tf
0.3633 Tw
(, ) Tj
/F02 10 Tf
0.3633 Tw
(false) Tj
/F00 10 Tf
0.3633 Tw
( on failure or if no match was) Tj
1 0 0 1 102.0 272.0 Tm
0.0000 Tw
(found. ) Tj
/F20 10 Tf
1 0 0 1 87.0 254.0 Tm
0.0000 Tw
(xml22_get_parent ) Tj
/F00 10 Tf
1 0 0 1 102.0 242.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 230.0 Tm
0.0000 Tw
(  array xml22_get_parent\( array &$document, array &$tag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 206.0 Tm
1.0411 Tw
(The function returns the parent tag of ) Tj
/F10 10 Tf
1.0411 Tw
($tag) Tj
/F00 10 Tf
1.0411 Tw
(, ) Tj
/F02 10 Tf
1.0411 Tw
(false) Tj
/F00 10 Tf
1.0411 Tw
( on failure. This returns the parent in respect to the) Tj
1 0 0 1 102.0 194.0 Tm
0.0000 Tw
(XML tree, not in respect to the document array, i.e. you cannot get a parent of the root tag. ) Tj
/F20 10 Tf
1 0 0 1 87.0 176.0 Tm
0.0000 Tw
(xml22_get_by_id ) Tj
/F00 10 Tf
1 0 0 1 102.0 164.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 152.0 Tm
0.0000 Tw
(  array xml22_get_by_id\( array &$document, string $id,  ) Tj
1 0 0 1 102.0 140.0 Tm
0.0000 Tw
(                        [, string $idname = ""] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 116.0 Tm
0.0944 Tw
(The function returns one array representing the tag which has an attribute of type ID with the value ) Tj
/F10 10 Tf
0.0944 Tw
($id) Tj
/F00 10 Tf
0.0944 Tw
(.) Tj
1 0 0 1 102.0 104.0 Tm
0.8094 Tw
(If ) Tj
/F10 10 Tf
0.8094 Tw
($idname) Tj
/F00 10 Tf
0.8094 Tw
( is given, the attribute of ) Tj
/F10 10 Tf
0.8094 Tw
($idname) Tj
/F00 10 Tf
0.8094 Tw
( is searched for the given ) Tj
/F10 10 Tf
0.8094 Tw
($id) Tj
/F00 10 Tf
0.8094 Tw
(. Otherwise an attribute) Tj
1 0 0 1 102.0 92.0 Tm
1.0378 Tw
(name that consists of or ends with the strings `id' or `ID' is searched \( regex: ) Tj
/F10 10 Tf
1.0378 Tw
(/.*\(id|ID\)/) Tj
/F00 10 Tf
1.0378 Tw
( \). The) Tj
1 0 0 1 102.0 80.0 Tm
0.0000 Tw
(function returns ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( if no match was found or an error occured. ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(8) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
47 0 obj
6304
endobj
48 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
49 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 48 0 R
/Contents 46 0 R
>>
endobj
50 0 obj
<<
/Length 51 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F20 10 Tf
1 0 0 1 87.0 770.0 Tm
0.0000 Tw
(xml22_get_name ) Tj
/F00 10 Tf
1 0 0 1 102.0 758.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(  string xml22_get_name\( array &$tag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 722.0 Tm
0.6865 Tw
(The function returns the name of ) Tj
/F10 10 Tf
0.6865 Tw
($tag) Tj
/F00 10 Tf
0.6865 Tw
( or ) Tj
/F02 10 Tf
0.6865 Tw
(false) Tj
/F00 10 Tf
0.6865 Tw
( if no name is set. This may be the case for comments,) Tj
1 0 0 1 102.0 710.0 Tm
0.0000 Tw
(processing instructions or the XML version string. ) Tj
/F20 10 Tf
1 0 0 1 87.0 692.0 Tm
0.0000 Tw
(xml22_get_content ) Tj
/F00 10 Tf
1 0 0 1 102.0 680.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 668.0 Tm
0.0000 Tw
(  string xml22_get_content\( array &$tag,  ) Tj
1 0 0 1 102.0 656.0 Tm
0.0000 Tw
(                           [ bool $plain = true, string $rplc = '' ] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 632.0 Tm
0.6932 Tw
(This function returns the string of the `content' field of the tag ) Tj
/F10 10 Tf
0.6932 Tw
($tag) Tj
/F00 10 Tf
0.6932 Tw
( or ) Tj
/F02 10 Tf
0.6932 Tw
(false) Tj
/F00 10 Tf
0.6932 Tw
( on failure. As of version) Tj
1 0 0 1 102.0 620.0 Tm
0.6100 Tw
(0.3.0 you may add the parameter ) Tj
/F10 10 Tf
0.6100 Tw
($plain) Tj
/F00 10 Tf
0.6100 Tw
(. If ) Tj
/F10 10 Tf
0.6100 Tw
($plain) Tj
/F00 10 Tf
0.6100 Tw
( is set to ) Tj
/F02 10 Tf
0.6100 Tw
(false) Tj
/F00 10 Tf
0.6100 Tw
(, all `<![CDATA[' and `]]' strings) Tj
1 0 0 1 102.0 608.0 Tm
0.3250 Tw
(will be deleted in the returned string, so you will get the content as it is meant rather than as it is stored.) Tj
1 0 0 1 102.0 596.0 Tm
0.3367 Tw
(By default, both strings are replaced by the empty string. You may pass a third parameter ) Tj
/F10 10 Tf
0.3367 Tw
($rplc) Tj
/F00 10 Tf
0.3367 Tw
( to the) Tj
1 0 0 1 102.0 584.0 Tm
0.0000 Tw
(function which changes the replacement string. ) Tj
/F20 10 Tf
1 0 0 1 87.0 566.0 Tm
0.0000 Tw
(xml22_get_attribute ) Tj
/F00 10 Tf
1 0 0 1 102.0 554.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 542.0 Tm
0.0000 Tw
( string xml22_get_attribute\( array &$tag, string $attrname \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 518.0 Tm
0.7644 Tw
(Get a string representing the value of the attribute ) Tj
/F10 10 Tf
0.7644 Tw
($attrname) Tj
/F00 10 Tf
0.7644 Tw
( of the tag ) Tj
/F10 10 Tf
0.7644 Tw
($tag) Tj
/F00 10 Tf
0.7644 Tw
(. The function returns) Tj
1 0 0 1 102.0 506.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 488.0 Tm
0.0000 Tw
(xml22_get_entity ) Tj
/F00 10 Tf
1 0 0 1 102.0 476.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 464.0 Tm
0.0000 Tw
( mixed xml22_get_entity\( string &$doc [, string $name = ''] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 440.0 Tm
0.0000 Tw
(By default, the function returns an array containing pairs of entity names and definitions. ) Tj
/F10 10 Tf
1 0 0 1 102.0 428.0 Tm
0.0000 Tw
( Array\( [&name;] => "definition" \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 404.0 Tm
0.7971 Tw
(If ) Tj
/F10 10 Tf
0.7971 Tw
($name) Tj
/F00 10 Tf
0.7971 Tw
( is specified, a string representing the definition of the entity given by ) Tj
/F10 10 Tf
0.7971 Tw
($name) Tj
/F00 10 Tf
0.7971 Tw
( is returned. A) Tj
1 0 0 1 102.0 392.0 Tm
0.0000 Tw
(value of false will be returned on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 380.0 Tm
0.0000 Tw
(The entity must be defined by the ) Tj
/F02 10 Tf
0.0000 Tw
(internal) Tj
/F00 10 Tf
0.0000 Tw
( DTD section of the document \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/RESTRICTIONS) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F20 10 Tf
1 0 0 1 87.0 362.0 Tm
0.0000 Tw
(xml22_get_notation ) Tj
/F00 10 Tf
1 0 0 1 102.0 350.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 338.0 Tm
0.0000 Tw
( mixed xml22_get_notation\( string &$doc [, string $name = ''] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 314.0 Tm
0.0000 Tw
(By default, the function returns an array containing pairs of notation names and definitions. ) Tj
/F10 10 Tf
1 0 0 1 102.0 302.0 Tm
0.0000 Tw
( Array\( [name] => "definition" \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 278.0 Tm
0.2088 Tw
(If ) Tj
/F10 10 Tf
0.2088 Tw
($name) Tj
/F00 10 Tf
0.2088 Tw
( is specified, a string representing the definition of the notation given by ) Tj
/F10 10 Tf
0.2088 Tw
($name) Tj
/F00 10 Tf
0.2088 Tw
( is returned. A) Tj
1 0 0 1 102.0 266.0 Tm
0.0000 Tw
(value of false will be returned on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 254.0 Tm
0.0000 Tw
(The notation must be defined by the ) Tj
/F02 10 Tf
0.0000 Tw
(internal) Tj
/F00 10 Tf
0.0000 Tw
( DTD section of the document \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/RESTRICTIONS) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F20 10 Tf
1 0 0 1 87.0 236.0 Tm
0.0000 Tw
(xml22_is_tag ) Tj
/F00 10 Tf
1 0 0 1 102.0 224.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 212.0 Tm
0.0000 Tw
( bool xml22_is_tag\( array &$search \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 188.0 Tm
0.0000 Tw
(Return ) Tj
/F02 10 Tf
0.0000 Tw
(true) Tj
/F00 10 Tf
0.0000 Tw
( if ) Tj
/F10 10 Tf
0.0000 Tw
($search) Tj
/F00 10 Tf
0.0000 Tw
( is a tag array, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( otherwise. ) Tj
/F20 10 Tf
1 0 0 1 87.0 170.0 Tm
0.0000 Tw
(xml22_is_fragment ) Tj
/F00 10 Tf
1 0 0 1 102.0 158.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 146.0 Tm
0.0000 Tw
( bool xml22_is_fragment\( array &$search \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 122.0 Tm
0.0000 Tw
(Return ) Tj
/F02 10 Tf
0.0000 Tw
(true) Tj
/F00 10 Tf
0.0000 Tw
( if ) Tj
/F10 10 Tf
0.0000 Tw
($search) Tj
/F00 10 Tf
0.0000 Tw
( is an array representing a document fragment, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( otherwise. ) Tj
/F20 10 Tf
1 0 0 1 87.0 104.0 Tm
0.0000 Tw
(xml22_is_document ) Tj
/F00 10 Tf
1 0 0 1 102.0 92.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 80.0 Tm
0.0000 Tw
( bool xml22_is_document\( array &$search \); ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 517.44 37 Tm
(9) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
51 0 obj
6682
endobj
52 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
53 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 52 0 R
/Contents 50 0 R
>>
endobj
54 0 obj
<<
/Length 55 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F00 10 Tf
1 0 0 1 102.0 770.0 Tm
0.0000 Tw
(Return ) Tj
/F02 10 Tf
0.0000 Tw
(true) Tj
/F00 10 Tf
0.0000 Tw
( if ) Tj
/F10 10 Tf
0.0000 Tw
($search) Tj
/F00 10 Tf
0.0000 Tw
( is a document array, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( otherwise. ) Tj
/F20 10 Tf
1 0 0 1 87.0 752.0 Tm
0.0000 Tw
(xml22_is_below_root ) Tj
/F00 10 Tf
1 0 0 1 102.0 740.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 728.0 Tm
0.0000 Tw
(  int xml22_is_below_root\( array &$tag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 704.0 Tm
0.1809 Tw
(The function returns ) Tj
/F02 10 Tf
0.1809 Tw
(1) Tj
/F00 10 Tf
0.1809 Tw
( if ) Tj
/F10 10 Tf
0.1809 Tw
($tag) Tj
/F00 10 Tf
0.1809 Tw
( is located below the root node of the document it belongs to, ) Tj
/F02 10 Tf
0.1809 Tw
(0) Tj
/F00 10 Tf
0.1809 Tw
( if it is the) Tj
1 0 0 1 102.0 692.0 Tm
0.3582 Tw
(root itself or ) Tj
/F02 10 Tf
0.3582 Tw
(-1) Tj
/F00 10 Tf
0.3582 Tw
( if it is located above the root node. The returned value will be ) Tj
/F02 10 Tf
0.3582 Tw
(false) Tj
/F00 10 Tf
0.3582 Tw
( if ) Tj
/F10 10 Tf
0.3582 Tw
($tag) Tj
/F00 10 Tf
0.3582 Tw
( is not valid) Tj
1 0 0 1 102.0 680.0 Tm
0.0000 Tw
(\(check for identity with ) Tj
/F10 10 Tf
0.0000 Tw
(===) Tj
/F00 10 Tf
0.0000 Tw
(, not just for equality\). ) Tj
/F21 10 Tf
1 0 0 1 72.0 662.0 Tm
0.0000 Tw
(Edit ) Tj
/F20 10 Tf
1 0 0 1 87.0 644.0 Tm
0.0000 Tw
(xml22_create_document ) Tj
/F00 10 Tf
1 0 0 1 102.0 632.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 620.0 Tm
0.0000 Tw
(  array xml22_create_document\( string $version  ) Tj
1 0 0 1 102.0 608.0 Tm
0.0000 Tw
(                              [, string $standalone = "no",  ) Tj
1 0 0 1 102.0 596.0 Tm
0.0000 Tw
(                                 string $encoding = "" ] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 572.0 Tm
0.2207 Tw
(The function returns an array representing an empty XML document. The array actually consists of only) Tj
1 0 0 1 102.0 560.0 Tm
0.5719 Tw
(one element containing the XML version string. The XML version will be set as given by ) Tj
/F10 10 Tf
0.5719 Tw
($version) Tj
/F00 10 Tf
0.5719 Tw
(.) Tj
1 0 0 1 102.0 548.0 Tm
0 Tw
(By default, the function creates a document with an external DTD, i.e. the attribute) Tj
1 0 0 1 102.0 536.0 Tm
0.3785 Tw
() Tj
/F10 10 Tf
0.3785 Tw
(standalone="no") Tj
/F00 10 Tf
0.3785 Tw
(. You may change this to "yes" by the argument ) Tj
/F10 10 Tf
0.3785 Tw
($standalone) Tj
/F00 10 Tf
0.3785 Tw
(. In addition you) Tj
1 0 0 1 102.0 524.0 Tm
0.0000 Tw
(can specify the encoding string with ) Tj
/F10 10 Tf
0.0000 Tw
($encoding) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 506.0 Tm
0.0000 Tw
(xml22_create_tag ) Tj
/F00 10 Tf
1 0 0 1 102.0 494.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 482.0 Tm
0.0000 Tw
( array xml22_create_tag\( string $name, [string $content = '', ) Tj
1 0 0 1 102.0 470.0 Tm
0.0000 Tw
(                                        array $template = false, ) Tj
1 0 0 1 102.0 458.0 Tm
0.0000 Tw
(                                        bool  $mode = XML22_BYSIBLING] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 434.0 Tm
2.5461 Tw
(Create a tag array with `tag`-field set to ) Tj
/F10 10 Tf
2.5461 Tw
($name) Tj
/F00 10 Tf
2.5461 Tw
(. If ) Tj
/F10 10 Tf
2.5461 Tw
($content) Tj
/F00 10 Tf
2.5461 Tw
( is given, it will be written to a) Tj
1 0 0 1 102.0 422.0 Tm
2.8307 Tw
(`content`-field. The fields `index`, `parindex' and `level' will be left ) Tj
/F02 10 Tf
2.8307 Tw
(false) Tj
/F00 10 Tf
2.8307 Tw
( or will be filled with) Tj
1 0 0 1 102.0 410.0 Tm
0.3119 Tw
(meaningful values if a ) Tj
/F10 10 Tf
0.3119 Tw
($template) Tj
/F00 10 Tf
0.3119 Tw
( tag array is given. The ) Tj
/F10 10 Tf
0.3119 Tw
($mode) Tj
/F00 10 Tf
0.3119 Tw
( marks the ) Tj
/F10 10 Tf
0.3119 Tw
($template) Tj
/F00 10 Tf
0.3119 Tw
( as a sibling) Tj
1 0 0 1 102.0 398.0 Tm
0.6219 Tw
(or the parent of the tag to create. It may be set to XML22_BYSIBLING or XML22_BYPARENT. The) Tj
1 0 0 1 102.0 386.0 Tm
0.5806 Tw
(created tag will have its `index`-field set to the immediate descendant of ) Tj
/F10 10 Tf
0.5806 Tw
($template) Tj
/F00 10 Tf
0.5806 Tw
( in respect to the) Tj
1 0 0 1 102.0 374.0 Tm
0.0000 Tw
(document array. The function returns the created tag array or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 362.0 Tm
4.4593 Tw
(The created tag does not appear in the document until you add it using ) Tj
/F02 10 Tf
0 0 0.8 rg
4.4593 Tw
(/xml22_add_child) Tj
/F00 10 Tf
0 g
4.4593 Tw
(,) Tj
1 0 0 1 102.0 350.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_add_sibling) Tj
/F00 10 Tf
0 g
0.0000 Tw
( or ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_insert_tag) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 332.0 Tm
0.0000 Tw
(xml22_create_fragment ) Tj
/F00 10 Tf
1 0 0 1 102.0 320.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 308.0 Tm
0.0000 Tw
(  array xml22_create_fragment\( array $firsttag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 284.0 Tm
0.0913 Tw
(The function returns an array representing a document fragment. The fragment will contain only one tag,) Tj
1 0 0 1 102.0 272.0 Tm
0.4418 Tw
() Tj
/F10 10 Tf
0.4418 Tw
($firsttag) Tj
/F00 10 Tf
0.4418 Tw
(. The XML tree level of ) Tj
/F10 10 Tf
0.4418 Tw
($firsttag) Tj
/F00 10 Tf
0.4418 Tw
( will be reset to 0. If the returned value equals ) Tj
/F02 10 Tf
0.4418 Tw
(false) Tj
/F00 10 Tf
0.4418 Tw
(,) Tj
1 0 0 1 102.0 260.0 Tm
0.0000 Tw
(an error occured. ) Tj
/F20 10 Tf
1 0 0 1 87.0 242.0 Tm
0.0000 Tw
(xml22_add_attribute ) Tj
/F00 10 Tf
1 0 0 1 102.0 230.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 218.0 Tm
0.0000 Tw
( array xml22_add_attribute\( array $tag, string $name, string $value \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 194.0 Tm
0.2305 Tw
(This function adds an attribute ) Tj
/F10 10 Tf
0.2305 Tw
($name) Tj
/F00 10 Tf
0.2305 Tw
( with a value of ) Tj
/F10 10 Tf
0.2305 Tw
($value) Tj
/F00 10 Tf
0.2305 Tw
( to the tag given as ) Tj
/F10 10 Tf
0.2305 Tw
($tag) Tj
/F00 10 Tf
0.2305 Tw
(. If an attribute) Tj
1 0 0 1 102.0 182.0 Tm
0.5931 Tw
(with name ) Tj
/F10 10 Tf
0.5931 Tw
($name) Tj
/F00 10 Tf
0.5931 Tw
( already exists, its value will be updated to ) Tj
/F10 10 Tf
0.5931 Tw
($value) Tj
/F00 10 Tf
0.5931 Tw
(. The function returns the edited) Tj
1 0 0 1 102.0 170.0 Tm
0.0000 Tw
(tag array or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 152.0 Tm
0.0000 Tw
(xml22_delete_attribute ) Tj
/F00 10 Tf
1 0 0 1 102.0 140.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 128.0 Tm
0.0000 Tw
( array xml22_delete_attribute\( array $tag, string $name \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 104.0 Tm
0.6765 Tw
(This function deletes an attribute ) Tj
/F10 10 Tf
0.6765 Tw
($name) Tj
/F00 10 Tf
0.6765 Tw
( from the tag given as ) Tj
/F10 10 Tf
0.6765 Tw
($tag) Tj
/F00 10 Tf
0.6765 Tw
(. If no attribute remains after this) Tj
1 0 0 1 102.0 92.0 Tm
0.4775 Tw
(operation, the `attribute`-field of ) Tj
/F10 10 Tf
0.4775 Tw
($tag) Tj
/F00 10 Tf
0.4775 Tw
( will also be deleted. The function returns the edited tag array or) Tj
1 0 0 1 102.0 80.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(10) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
55 0 obj
7825
endobj
56 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
57 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 56 0 R
/Contents 54 0 R
>>
endobj
58 0 obj
<<
/Length 59 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F20 10 Tf
1 0 0 1 87.0 770.0 Tm
0.0000 Tw
(xml22_add_content ) Tj
/F00 10 Tf
1 0 0 1 102.0 758.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(  array xml22_add_content\( array $tag, string $content ) Tj
1 0 0 1 102.0 734.0 Tm
0.0000 Tw
(                          [, bool $action = XML22_OVWRT,  ) Tj
1 0 0 1 102.0 722.0 Tm
0.0000 Tw
(                             bool $cdata = false ]  ) Tj
/F00 10 Tf
1 0 0 1 102.0 698.0 Tm
1.2671 Tw
(By default, the function inserts the string ) Tj
/F10 10 Tf
1.2671 Tw
($content) Tj
/F00 10 Tf
1.2671 Tw
( to the `content' field of the tag ) Tj
/F10 10 Tf
1.2671 Tw
($tag) Tj
/F00 10 Tf
1.2671 Tw
(, i.e. any) Tj
1 0 0 1 102.0 686.0 Tm
0.0953 Tw
(content that already exists will be overwritten. The function concats the string to the `content' field if the) Tj
1 0 0 1 102.0 674.0 Tm
0.0000 Tw
(parameter ) Tj
/F10 10 Tf
0.0000 Tw
($action) Tj
/F00 10 Tf
0.0000 Tw
( is set to XML22_CAT. ) Tj
/F00 10 Tf
1 0 0 1 102.0 662.0 Tm
3.6600 Tw
(The `content' field will be written as an explicit ) Tj
/F10 10 Tf
3.6600 Tw
(<![CDATA]]> declaration if the) Tj
1 0 0 1 102.0 650.0 Tm
0.0909 Tw
(parameter ) Tj
/F10 10 Tf
0.0909 Tw
($cdata) Tj
/F10 10 Tf
0.0909 Tw
( is set to XML22_CDATA. Then the ) Tj
/F12 10 Tf
0.0909 Tw
(whole) Tj
/F10 10 Tf
0.0909 Tw
( content will be) Tj
1 0 0 1 102.0 638.0 Tm
1.1875 Tw
(enclosed in a single ) Tj
/F10 10 Tf
1.1875 Tw
(<![CDATA]]>\217regardless if you set XML22_CAT\217and) Tj
1 0 0 1 102.0 626.0 Tm
0.9500 Tw
(all ) Tj
/F10 10 Tf
0.9500 Tw
(<![CDATA]]> that already exist will disappear. If you need mixed) Tj
1 0 0 1 102.0 614.0 Tm
0.3500 Tw
() Tj
/F10 10 Tf
0.3500 Tw
(<![CDATA]]> and normal XML you should ) Tj
/F12 10 Tf
0.3500 Tw
(not) Tj
/F10 10 Tf
0.3500 Tw
( use XML22_CDATA. You better) Tj
1 0 0 1 102.0 602.0 Tm
0.0000 Tw
(specify the different ) Tj
/F10 10 Tf
0.0000 Tw
(<![CDATA]]> in the ) Tj
/F10 10 Tf
0.0000 Tw
($content) Tj
/F10 10 Tf
0.0000 Tw
( string one by one. ) Tj
/F00 10 Tf
1 0 0 1 102.0 590.0 Tm
0.0000 Tw
(The function returns the edited tag or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 572.0 Tm
0.0000 Tw
(xml22_delete_tag ) Tj
/F00 10 Tf
1 0 0 1 102.0 560.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 548.0 Tm
0.0000 Tw
(  array xml22_delete_tag\( array $document, array $tag  ) Tj
1 0 0 1 102.0 536.0 Tm
0.0000 Tw
(                         [, bool $descend = false ] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 512.0 Tm
0.1083 Tw
(Delete the given tag. If you set the optional parameter ) Tj
/F10 10 Tf
0.1083 Tw
($descend) Tj
/F00 10 Tf
0.1083 Tw
( to ) Tj
/F02 10 Tf
0.1083 Tw
(true) Tj
/F00 10 Tf
0.1083 Tw
(, all descendants of the tag will) Tj
1 0 0 1 102.0 500.0 Tm
0.3936 Tw
(be deleted too. Instead of ) Tj
/F02 10 Tf
0.3936 Tw
(true) Tj
/F00 10 Tf
0.3936 Tw
( you may use XML22_DEL_CHILDREN. The function returns the edited) Tj
1 0 0 1 102.0 488.0 Tm
0.0000 Tw
(document array, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure.  ) Tj
/F00 10 Tf
1 0 0 1 102.0 476.0 Tm
0.6427 Tw
(Note that deleting a tag setting XML22_DEL_CHILDREN is not that much slower than deleting just a) Tj
1 0 0 1 102.0 464.0 Tm
0.0000 Tw
(single tag. ) Tj
/F20 10 Tf
1 0 0 1 87.0 446.0 Tm
0.0000 Tw
(xml22_insert_tag ) Tj
/F00 10 Tf
1 0 0 1 102.0 434.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 422.0 Tm
0.0000 Tw
(  array xml22_insert_tag\( array $document, array $tag  ) Tj
1 0 0 1 102.0 410.0 Tm
0.0000 Tw
(                           [, mixed $ancestor = 0] \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 386.0 Tm
1.4871 Tw
(Insert the given tag at the position below ) Tj
/F10 10 Tf
1.4871 Tw
($ancestor) Tj
/F00 10 Tf
1.4871 Tw
(. The ) Tj
/F10 10 Tf
1.4871 Tw
($ancestor) Tj
/F00 10 Tf
1.4871 Tw
( may be a tag array or an) Tj
1 0 0 1 102.0 374.0 Tm
0.0460 Tw
(integer representing the `index' field of the ancestor tag. If ) Tj
/F10 10 Tf
0.0460 Tw
($ancestor) Tj
/F00 10 Tf
0.0460 Tw
( is omitted, the ancestor element) Tj
1 0 0 1 102.0 362.0 Tm
0.6058 Tw
(is determined by the `index' field of the tag which should be greater than 0. ) Tj
/F10 10 Tf
0.6058 Tw
($tag) Tj
/F00 10 Tf
0.6058 Tw
( will be updated and) Tj
1 0 0 1 102.0 350.0 Tm
0.0000 Tw
(may be reused. The function returns the edited document array or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 332.0 Tm
0.0000 Tw
(xml22_replace_tag ) Tj
/F00 10 Tf
1 0 0 1 102.0 320.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 308.0 Tm
0.0000 Tw
( array xml22_replace_tag\( array $document, array $oldtag, array $newtag \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 284.0 Tm
0.0000 Tw
(Replace ) Tj
/F10 10 Tf
0.0000 Tw
($oldtag) Tj
/F00 10 Tf
0.0000 Tw
( with ) Tj
/F10 10 Tf
0.0000 Tw
($newtag) Tj
/F00 10 Tf
0.0000 Tw
( and return the edited ) Tj
/F10 10 Tf
0.0000 Tw
($document) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 272.0 Tm
0.0345 Tw
(This function may also be used to simply change a tag. It is much faster to use this than to first deleting a) Tj
1 0 0 1 102.0 260.0 Tm
0.0000 Tw
(tag and after that inserting a new one at the same place. ) Tj
/F10 10 Tf
0.0000 Tw
($newtag) Tj
/F00 10 Tf
0.0000 Tw
( will be updated and may be reused. ) Tj
/F20 10 Tf
1 0 0 1 87.0 242.0 Tm
0.0000 Tw
(xml22_move_tag ) Tj
/F00 10 Tf
1 0 0 1 102.0 230.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
(, ) Tj
/F02 10 Tf
0.0000 Tw
(tag level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 218.0 Tm
0.0000 Tw
( array xml22_move_tag\( array $document, array $tag, mixed $newancestor \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 194.0 Tm
2.3938 Tw
(This function moves ) Tj
/F10 10 Tf
2.3938 Tw
($tag) Tj
/F00 10 Tf
2.3938 Tw
( from its current position to the position below ) Tj
/F10 10 Tf
2.3938 Tw
($newancestor) Tj
/F00 10 Tf
2.3938 Tw
(. The) Tj
1 0 0 1 102.0 182.0 Tm
2.3280 Tw
(argument ) Tj
/F10 10 Tf
2.3280 Tw
($newancestor) Tj
/F00 10 Tf
2.3280 Tw
( may be a tag array or an integer representing the `index' field of the) Tj
1 0 0 1 102.0 170.0 Tm
0.3038 Tw
(newancestor tag. ) Tj
/F10 10 Tf
0.3038 Tw
($tag) Tj
/F00 10 Tf
0.3038 Tw
( will be updated and may be reused. The function returns the edited document or) Tj
1 0 0 1 102.0 158.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 146.0 Tm
2.5383 Tw
(Note: Currently this function is implemented by simply calling ) Tj
/F02 10 Tf
0 0 0.8 rg
2.5383 Tw
(/xml22_delete_tag) Tj
/F00 10 Tf
0 g
2.5383 Tw
( followed by an) Tj
1 0 0 1 102.0 134.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_insert_tag) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. This may change in the future. ) Tj
/F20 10 Tf
1 0 0 1 87.0 116.0 Tm
0.0000 Tw
(xml22_copy_fragment ) Tj
/F00 10 Tf
1 0 0 1 102.0 104.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 92.0 Tm
0.0000 Tw
( array xml22_copy_fragment\( array &$document, array $start, int $offset \) ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 511.88 37 Tm
(11) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
59 0 obj
7841
endobj
60 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F12 12 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
61 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 60 0 R
/Contents 58 0 R
>>
endobj
62 0 obj
<<
/Length 63 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F00 10 Tf
1 0 0 1 102.0 770.0 Tm
0.6160 Tw
(This function returns an array representing a copy of the document fragment starting with tag ) Tj
/F10 10 Tf
0.6160 Tw
($start) Tj
/F00 10 Tf
1 0 0 1 102.0 758.0 Tm
0.4875 Tw
(and ending ) Tj
/F10 10 Tf
0.4875 Tw
($offset) Tj
/F00 10 Tf
0.4875 Tw
( tags below ) Tj
/F10 10 Tf
0.4875 Tw
($start) Tj
/F00 10 Tf
0.4875 Tw
(. The internal indices of the array are normalized to the base) Tj
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(of 0. The function returns ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on error. ) Tj
/F20 10 Tf
1 0 0 1 87.0 728.0 Tm
0.0000 Tw
(xml22_delete_fragment ) Tj
/F00 10 Tf
1 0 0 1 102.0 716.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 704.0 Tm
0.0000 Tw
( array xml22_delete_fragment\( array $document, array $start, int $offset \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 680.0 Tm
1.7257 Tw
(The function deletes the document fragment starting at the tag ) Tj
/F10 10 Tf
1.7257 Tw
($start) Tj
/F00 10 Tf
1.7257 Tw
( and ending ) Tj
/F10 10 Tf
1.7257 Tw
($offset) Tj
/F00 10 Tf
1.7257 Tw
( tags) Tj
1 0 0 1 102.0 668.0 Tm
0.7637 Tw
(below ) Tj
/F10 10 Tf
0.7637 Tw
($start) Tj
/F00 10 Tf
0.7637 Tw
(. If ) Tj
/F10 10 Tf
0.7637 Tw
($offset) Tj
/F00 10 Tf
0.7637 Tw
( exceeds the document, all until the end of the document will be deleted.) Tj
1 0 0 1 102.0 656.0 Tm
0.0000 Tw
(The edited document array is returned or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on error. ) Tj
/F20 10 Tf
1 0 0 1 87.0 638.0 Tm
0.0000 Tw
(xml22_insert_fragment ) Tj
/F00 10 Tf
1 0 0 1 102.0 626.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 614.0 Tm
0.0000 Tw
( array xml22_insert_fragment\( array $document, array $fragment,  ) Tj
1 0 0 1 102.0 602.0 Tm
0.0000 Tw
(                              array &$ancestor \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 578.0 Tm
0.9514 Tw
(The function will insert the document fragment ) Tj
/F10 10 Tf
0.9514 Tw
($fragment) Tj
/F00 10 Tf
0.9514 Tw
( below the tag given by ) Tj
/F10 10 Tf
0.9514 Tw
($ancestor) Tj
/F00 10 Tf
0.9514 Tw
(. If) Tj
1 0 0 1 102.0 566.0 Tm
0.7487 Tw
() Tj
/F10 10 Tf
0.7487 Tw
($ancestor) Tj
/F00 10 Tf
0.7487 Tw
( has any descendants, the fragment will be inserted below the last of its descendants. The) Tj
1 0 0 1 102.0 554.0 Tm
0.0000 Tw
(edited document array is returned or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 536.0 Tm
0.0000 Tw
(xml22_replace_fragment ) Tj
/F00 10 Tf
1 0 0 1 102.0 524.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 512.0 Tm
0.0000 Tw
( array xml22_replace_fragment\( array $document, array $fragment, ) Tj
1 0 0 1 102.0 500.0 Tm
0.0000 Tw
(                               array $start \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 476.0 Tm
4.0770 Tw
(The function replaces in ) Tj
/F10 10 Tf
4.0770 Tw
($document) Tj
/F00 10 Tf
4.0770 Tw
( a document fragment of length ) Tj
/F10 10 Tf
4.0770 Tw
(count\($fragment\)) Tj
/F00 10 Tf
4.0770 Tw
(,) Tj
1 0 0 1 102.0 464.0 Tm
0.6925 Tw
(beginning at ) Tj
/F10 10 Tf
0.6925 Tw
($starttag) Tj
/F00 10 Tf
0.6925 Tw
( with the document fragment given with ) Tj
/F10 10 Tf
0.6925 Tw
($fragment) Tj
/F00 10 Tf
0.6925 Tw
(. The edited document) Tj
1 0 0 1 102.0 452.0 Tm
0.0000 Tw
(is returned or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 440.0 Tm
1.7940 Tw
(Note: The function does ) Tj
/F02 10 Tf
1.7940 Tw
(not) Tj
/F00 10 Tf
1.7940 Tw
( check if the logical\217or XML\217structure of the fragment to replace is) Tj
1 0 0 1 102.0 428.0 Tm
0.0000 Tw
(equivalent to the structure of the replacement. ) Tj
/F20 10 Tf
1 0 0 1 87.0 410.0 Tm
0.0000 Tw
(xml22_move_fragment ) Tj
/F00 10 Tf
1 0 0 1 102.0 398.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 386.0 Tm
0.0000 Tw
( array xml22_move_fragment\( array &$document, array $start,  ) Tj
1 0 0 1 102.0 374.0 Tm
0.0000 Tw
(                            int $offset, array $newancestor \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 350.0 Tm
1.3287 Tw
(This function will wove the document fragment that starts at tag ) Tj
/F10 10 Tf
1.3287 Tw
($start) Tj
/F00 10 Tf
1.3287 Tw
( and ends at ) Tj
/F10 10 Tf
1.3287 Tw
($ofset) Tj
/F00 10 Tf
1.3287 Tw
( tags) Tj
1 0 0 1 102.0 338.0 Tm
0.0875 Tw
(below ) Tj
/F10 10 Tf
0.0875 Tw
($start) Tj
/F00 10 Tf
0.0875 Tw
( below ) Tj
/F10 10 Tf
0.0875 Tw
($newancestor) Tj
/F00 10 Tf
0.0875 Tw
(. If ) Tj
/F10 10 Tf
0.0875 Tw
($newancestor) Tj
/F00 10 Tf
0.0875 Tw
( has any descendants, the fragment will be) Tj
1 0 0 1 102.0 326.0 Tm
0.0000 Tw
(inserted below the last of its descendants. The edited document array is returned or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 308.0 Tm
0.0000 Tw
(xml22_add_doctype ) Tj
/F00 10 Tf
1 0 0 1 102.0 296.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 284.0 Tm
0.0000 Tw
(  array xml22_add_doctype\( array $document, array $doctype \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 260.0 Tm
1.0013 Tw
(A proper doctype declaration as specified by the array ) Tj
/F10 10 Tf
1.0013 Tw
($doctype) Tj
/F00 10 Tf
1.0013 Tw
( will be inserted into the document) Tj
1 0 0 1 102.0 248.0 Tm
0.0079 Tw
() Tj
/F10 10 Tf
0.0079 Tw
($document) Tj
/F00 10 Tf
0.0079 Tw
( at the position immediately below the XML version string. If a doctype declaration already) Tj
1 0 0 1 102.0 236.0 Tm
0.0000 Tw
(exists it will be overwritten. The function returns the edited document or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F00 10 Tf
1 0 0 1 102.0 224.0 Tm
0.0000 Tw
(The ) Tj
/F10 10 Tf
0.0000 Tw
($doctype) Tj
/F00 10 Tf
0.0000 Tw
( array can have two variants as described here: ) Tj
/F10 10 Tf
1 0 0 1 102.0 212.0 Tm
0.0000 Tw
(  Array\( 'root'   => <string>,  // name of the root element ) Tj
1 0 0 1 102.0 200.0 Tm
0.0000 Tw
(         'SYSTEM' => <string> \) // location of the SYSTEM DTD ) Tj
1 0 0 1 102.0 176.0 Tm
0.0000 Tw
(  Array\( 'root'   => <string>,  // name of the root element ) Tj
1 0 0 1 102.0 164.0 Tm
0.0000 Tw
(         'name'   => <string>,  // name of the PUBLIC DTD ) Tj
1 0 0 1 102.0 152.0 Tm
0.0000 Tw
(         'PUBLIC' => <string> \) // location of the PUBLIC DTD ) Tj
/F20 10 Tf
1 0 0 1 87.0 128.0 Tm
0.0000 Tw
(xml22_add_root ) Tj
/F00 10 Tf
1 0 0 1 102.0 116.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 104.0 Tm
0.0000 Tw
(  array array xml22_add_root\( array $document, string $name,  ) Tj
1 0 0 1 102.0 92.0 Tm
0.0000 Tw
(                              string $namespace \) ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(12) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
63 0 obj
7094
endobj
64 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
65 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 64 0 R
/Contents 62 0 R
>>
endobj
66 0 obj
<<
/Length 67 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F00 10 Tf
1 0 0 1 102.0 770.0 Tm
1.7039 Tw
(The function adds a root tag to the document array ) Tj
/F10 10 Tf
1.7039 Tw
($document) Tj
/F00 10 Tf
1.7039 Tw
(. The name of the tag is given by) Tj
1 0 0 1 102.0 758.0 Tm
0.7378 Tw
() Tj
/F10 10 Tf
0.7378 Tw
($name) Tj
/F00 10 Tf
0.7378 Tw
(. The parameter ) Tj
/F10 10 Tf
0.7378 Tw
($namespace) Tj
/F00 10 Tf
0.7378 Tw
( will be used to set an attribute `xmlns' of the root tag. If a root) Tj
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
(tag already exists in the document it will be overwridden. ) Tj
/F00 10 Tf
1 0 0 1 102.0 734.0 Tm
0.0000 Tw
(The function returns the edited document or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 716.0 Tm
0.0000 Tw
(xml22_add_child ) Tj
/F00 10 Tf
1 0 0 1 102.0 704.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 692.0 Tm
0.0000 Tw
(  array xml22_add_child\( array $document, array $tag, array $parent \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 668.0 Tm
0.5971 Tw
(The function adds the tag ) Tj
/F10 10 Tf
0.5971 Tw
($tag) Tj
/F00 10 Tf
0.5971 Tw
( to the document array ) Tj
/F10 10 Tf
0.5971 Tw
($document) Tj
/F00 10 Tf
0.5971 Tw
(, assuming that ) Tj
/F10 10 Tf
0.5971 Tw
($tag) Tj
/F00 10 Tf
0.5971 Tw
( is a child of) Tj
1 0 0 1 102.0 656.0 Tm
1.4306 Tw
() Tj
/F10 10 Tf
1.4306 Tw
($parent) Tj
/F00 10 Tf
1.4306 Tw
(. If the parent already has any children, the new tag will be added below the last of these) Tj
1 0 0 1 102.0 644.0 Tm
1.2165 Tw
(children or below the last of the subsequent children. ) Tj
/F10 10 Tf
1.2165 Tw
($tag) Tj
/F00 10 Tf
1.2165 Tw
( will be updated and may be reused. The) Tj
1 0 0 1 102.0 632.0 Tm
0.0000 Tw
(edited document array is returned or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 614.0 Tm
0.0000 Tw
(xml22_add_sibling ) Tj
/F00 10 Tf
1 0 0 1 102.0 602.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 590.0 Tm
0.0000 Tw
(  array xml22_add_sibling\( array $document, array $tag,   ) Tj
1 0 0 1 102.0 578.0 Tm
0.0000 Tw
(                           array $ancestor \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 554.0 Tm
0.0406 Tw
(This function adds the tag ) Tj
/F10 10 Tf
0.0406 Tw
($tag) Tj
/F00 10 Tf
0.0406 Tw
( to the document array ) Tj
/F10 10 Tf
0.0406 Tw
($document) Tj
/F00 10 Tf
0.0406 Tw
(, assuming that ) Tj
/F10 10 Tf
0.0406 Tw
($tag) Tj
/F00 10 Tf
0.0406 Tw
( is a sibling of) Tj
1 0 0 1 102.0 542.0 Tm
1.9862 Tw
() Tj
/F10 10 Tf
1.9862 Tw
($ancestor) Tj
/F00 10 Tf
1.9862 Tw
(. The new tag will be added immediately below the ancestor or below the last of the) Tj
1 0 0 1 102.0 530.0 Tm
0.1729 Tw
(ancestors children if there are any. ) Tj
/F10 10 Tf
0.1729 Tw
($tag) Tj
/F00 10 Tf
0.1729 Tw
( will be updated and may be reused. The edited document array) Tj
1 0 0 1 102.0 518.0 Tm
0.0000 Tw
(is returend or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F20 10 Tf
1 0 0 1 87.0 500.0 Tm
0.0000 Tw
(xml22_add_comment ) Tj
/F00 10 Tf
1 0 0 1 102.0 488.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0.0000 Tw
(XML level) Tj
/F00 10 Tf
0.0000 Tw
( ) Tj
/F10 10 Tf
1 0 0 1 102.0 476.0 Tm
0.0000 Tw
(  array xml22_add_comment\( array $document, string $comment,  ) Tj
1 0 0 1 102.0 464.0 Tm
0.0000 Tw
(                           mixed $ancestor \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 440.0 Tm
1.3980 Tw
(The function adds a comment as given by ) Tj
/F10 10 Tf
1.3980 Tw
($comment) Tj
/F00 10 Tf
1.3980 Tw
( to the document ) Tj
/F10 10 Tf
1.3980 Tw
($document) Tj
/F00 10 Tf
1.3980 Tw
( at the position) Tj
1 0 0 1 102.0 428.0 Tm
1.9064 Tw
(below ) Tj
/F10 10 Tf
1.9064 Tw
($ancestor) Tj
/F00 10 Tf
1.9064 Tw
(. The argument ) Tj
/F10 10 Tf
1.9064 Tw
($ancestor) Tj
/F00 10 Tf
1.9064 Tw
( may be a tag array or an integer representing the) Tj
1 0 0 1 102.0 416.0 Tm
0.0000 Tw
(`index' field of the ancestor tag. The function returns the edited document or ) Tj
/F02 10 Tf
0.0000 Tw
(false) Tj
/F00 10 Tf
0.0000 Tw
( on failure. ) Tj
/F21 10 Tf
1 0 0 1 72.0 398.0 Tm
0.0000 Tw
(Miscellaneous ) Tj
/F20 10 Tf
1 0 0 1 87.0 380.0 Tm
0.0000 Tw
(xml22_setup ) Tj
/F10 10 Tf
1 0 0 1 102.0 362.0 Tm
0.0000 Tw
(  bool xml22_setup\( array &$options \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 338.0 Tm
0.0842 Tw
(You may use this function to customize the behavior of the ) Tj
/F01 10 Tf
0.0842 Tw
(xml22) Tj
/F00 10 Tf
0.0842 Tw
( code. It is intended to set some values) Tj
1 0 0 1 102.0 326.0 Tm
0.0121 Tw
(for the whole runtime of the script. Once an options is set via ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0121 Tw
(/xml22_setup) Tj
/F00 10 Tf
0 g
0.0121 Tw
( it cannot be changed later on.) Tj
1 0 0 1 102.0 314.0 Tm
1.4161 Tw
(For instance, if you want to switch caching off and on several times, don`t use this function but the) Tj
1 0 0 1 102.0 302.0 Tm
0.0000 Tw
(paramater ) Tj
/F10 10 Tf
0.0000 Tw
($usecache) Tj
/F00 10 Tf
0.0000 Tw
( of the ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_parse) Tj
/F00 10 Tf
0 g
0.0000 Tw
( function. ) Tj
/F00 10 Tf
1 0 0 1 102.0 290.0 Tm
0.0000 Tw
(The array ) Tj
/F10 10 Tf
0.0000 Tw
($options) Tj
/F00 10 Tf
0.0000 Tw
( consists of pairs of option names and values: ) Tj
/F10 10 Tf
1 0 0 1 102.0 278.0 Tm
0.0000 Tw
(  $options = Array\( 'XML22_OPT_<name>' => <value>, ... \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 254.0 Tm
0.0000 Tw
(Possible options and their values are: ) Tj
/F20 10 Tf
1 0 0 1 87.0 224.0 Tm
0.0000 Tw
() Tj
ET
q
87 225 4 4 re
f
Q
BT
1 0 0 1 95 224 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 224.0 Tm
0.0000 Tw
(XML22_OPT_CACHE ) Tj
/F00 10 Tf
1 0 0 1 126.0 212.0 Tm
0.0000 Tw
(Switch caching on or off \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_parse) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F10 10 Tf
1 0 0 1 126.0 200.0 Tm
0.0000 Tw
(  XML22_OPT_CACHE = XML22_CACHE | XML22_NOCACHE ) Tj
/F20 10 Tf
1 0 0 1 87.0 176.0 Tm
0.0000 Tw
() Tj
ET
q
87 177 4 4 re
f
Q
BT
1 0 0 1 95 176 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 176.0 Tm
0.0000 Tw
(XML22_OPT_EXTERNALS ) Tj
/F00 10 Tf
1 0 0 1 126.0 164.0 Tm
0.0000 Tw
(Switch parsing of external entities on and off \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_parse) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F10 10 Tf
1 0 0 1 126.0 152.0 Tm
0.0000 Tw
(  XML22_OPT_EXTERNALS = true | false ) Tj
/F20 10 Tf
1 0 0 1 87.0 128.0 Tm
0.0000 Tw
() Tj
ET
q
87 129 4 4 re
f
Q
BT
1 0 0 1 95 128 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 128.0 Tm
0.0000 Tw
(XML22_OPT_WRITESTYLE ) Tj
/F00 10 Tf
1 0 0 1 126.0 116.0 Tm
0.0000 Tw
(Set the style for writing a document \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_write_document) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F10 10 Tf
1 0 0 1 126.0 104.0 Tm
0.0000 Tw
(  XML22_OPT_WRITESTYLE = XML22_NORMALIZE | XML22_BEAUTIFY ) Tj
/F20 10 Tf
1 0 0 1 87.0 80.0 Tm
0.0000 Tw
() Tj
ET
q
87 81 4 4 re
f
Q
BT
1 0 0 1 95 80 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 80.0 Tm
0.0000 Tw
(XML22_OPT_TABSIZE ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 511.88 37 Tm
(13) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
67 0 obj
7269
endobj
68 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
69 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 68 0 R
/Contents 66 0 R
>>
endobj
70 0 obj
<<
/Length 71 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F00 10 Tf
1 0 0 1 126.0 770.0 Tm
2.5237 Tw
(Set the tabsize in characters for indentation of the lines if the document is written in style) Tj
1 0 0 1 126.0 758.0 Tm
0.0000 Tw
(XML22_BEAUTIFY \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_write_document) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). This value defaults to 3. ) Tj
/F10 10 Tf
1 0 0 1 126.0 746.0 Tm
0.0000 Tw
(  XML22_OPT_TABSIZE = <int> ) Tj
/F00 10 Tf
1 0 0 1 102.0 722.0 Tm
1.3867 Tw
(An error will be reported and the function will return ) Tj
/F02 10 Tf
1.3867 Tw
(false) Tj
/F00 10 Tf
1.3867 Tw
( if any option doesn`t match the range of) Tj
1 0 0 1 102.0 710.0 Tm
0.0000 Tw
(possible values. Unknown options will be silently ignored. ) Tj
/F00 10 Tf
1 0 0 1 102.0 698.0 Tm
0.6700 Tw
(The function should be called only once and ) Tj
/F02 10 Tf
0.6700 Tw
(before) Tj
/F00 10 Tf
0.6700 Tw
( you call any other function of ) Tj
/F01 10 Tf
0.6700 Tw
(xml22) Tj
/F00 10 Tf
0.6700 Tw
(. If you try to) Tj
1 0 0 1 102.0 686.0 Tm
0.1726 Tw
(call it twice, the function will return ) Tj
/F02 10 Tf
0.1726 Tw
(false) Tj
/F00 10 Tf
0.1726 Tw
( and an error will be set. You may check this via ) Tj
/F02 10 Tf
0 0 0.8 rg
0.1726 Tw
(/xml22_error) Tj
/F00 10 Tf
0 g
0.1726 Tw
(.) Tj
1 0 0 1 102.0 674.0 Tm
0.0000 Tw
(If you run it once but too late, no error will be reported but your code may not behave as expected. ) Tj
/F20 10 Tf
1 0 0 1 87.0 656.0 Tm
0.0000 Tw
(xml22_error ) Tj
/F10 10 Tf
1 0 0 1 102.0 638.0 Tm
0.0000 Tw
( array xml22_error\(\) ) Tj
/F00 10 Tf
1 0 0 1 102.0 614.0 Tm
0.0284 Tw
(Returns an array of all error messages. The last error is additionaly written to a field `last' of the returned) Tj
1 0 0 1 102.0 602.0 Tm
0.7750 Tw
(array. Every call to ) Tj
/F02 10 Tf
0 0 0.8 rg
0.7750 Tw
(/xml22_error) Tj
/F00 10 Tf
0 g
0.7750 Tw
( will unset this field. You may check if this field is set to check if an) Tj
1 0 0 1 102.0 590.0 Tm
0.0000 Tw
(error occured during the last function call. ) Tj
/F21 12 Tf
1 0 0 1 72.0 572.0 Tm
0.0000 Tw
(FAQ ) Tj
/F21 10 Tf
1 0 0 1 72.0 550.4 Tm
0.0000 Tw
(Why doesn`t PHP find the include files? ) Tj
/F00 10 Tf
1 0 0 1 102.0 538.4 Tm
0.1588 Tw
(Possibly you work with a different directory structure as stated in the ) Tj
/F02 10 Tf
0 0 0.8 rg
0.1588 Tw
(/Installation) Tj
/F00 10 Tf
0 g
0.1588 Tw
( section. If this is what) Tj
1 0 0 1 102.0 526.4 Tm
0.5641 Tw
(you want, you have to adjust the ) Tj
/F10 10 Tf
0.5641 Tw
(require_once) Tj
/F00 10 Tf
0.5641 Tw
( statements at the start of the ) Tj
/F01 10 Tf
0.5641 Tw
(xml22) Tj
/F00 10 Tf
0.5641 Tw
( include files by) Tj
1 0 0 1 102.0 514.4 Tm
0.0000 Tw
(your own, or\217simple\217the include path via ) Tj
/F02 10 Tf
0.0000 Tw
(ini_set\(\)) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 72.0 496.4 Tm
0.0000 Tw
(Why does my parsing always fail? ) Tj
/F00 10 Tf
1 0 0 1 102.0 484.4 Tm
0.7800 Tw
(If you pass a string, not a filename to ) Tj
/F02 10 Tf
0 0 0.8 rg
0.7800 Tw
(/xml22_parse) Tj
/F00 10 Tf
0 g
0.7800 Tw
(, remember that it must contain ) Tj
/F02 10 Tf
0.7800 Tw
(well formed) Tj
/F00 10 Tf
0.7800 Tw
( XML,) Tj
1 0 0 1 102.0 472.4 Tm
0.0000 Tw
(i.e. the string has to start with at least this statement: ) Tj
/F10 10 Tf
0.0000 Tw
(<?xml version="1.0"?>) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 72.0 454.4 Tm
0.0000 Tw
(When I parse an XML file, the script seems to wait forever. Why? ) Tj
/F00 10 Tf
1 0 0 1 102.0 442.4 Tm
1.6794 Tw
(Possibly the parser tries to read an external entity via HTTP GET, but the network or the server is) Tj
1 0 0 1 102.0 430.4 Tm
0.0000 Tw
(unreachable. ) Tj
/F21 10 Tf
1 0 0 1 72.0 412.4 Tm
0.0000 Tw
(Why can`t I find any `tag' field in the matched element? ) Tj
/F00 10 Tf
1 0 0 1 102.0 400.4 Tm
2.4806 Tw
(If you work with the returned data of searching functions that may return more than one match,) Tj
1 0 0 1 102.0 388.4 Tm
0.7148 Tw
(remember that the returned array is not a plain tag array but an array of tag arrays. If you need the tag) Tj
1 0 0 1 102.0 376.4 Tm
0.5794 Tw
(array by itself, you have to apply ) Tj
/F10 10 Tf
0.5794 Tw
(array_shift\(\)) Tj
/F00 10 Tf
0.5794 Tw
( or ) Tj
/F10 10 Tf
0.5794 Tw
(array_pop\(\)) Tj
/F00 10 Tf
0.5794 Tw
( first, even if there is only one) Tj
1 0 0 1 102.0 364.4 Tm
0.0000 Tw
(match returned \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/Functions Returning Tags) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F00 10 Tf
1 0 0 1 102.0 352.4 Tm
0.8423 Tw
(Another reason may be that the element represents an XML comment, the ) Tj
/F10 10 Tf
0.8423 Tw
(<?xml> declaration) Tj
1 0 0 1 102.0 340.4 Tm
0.0000 Tw
(or a processing instruction. ) Tj
/F00 10 Tf
1 0 0 1 102.0 328.4 Tm
0.0000 Tw
(Usually you don`t need to touch the tag array directly. Use ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_name) Tj
/F00 10 Tf
0 g
0.0000 Tw
( or ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_content) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 72.0 310.4 Tm
0.0000 Tw
(Why does my search always fail? ) Tj
/F00 10 Tf
1 0 0 1 102.0 298.4 Tm
0.0617 Tw
(Check the regular expressions. Are there valid delimiters \(e.g. "/^[fF]ine [rR]egex$/"\217note the slashes\)?) Tj
1 0 0 1 102.0 286.4 Tm
2.4757 Tw
(Did you use variables inside the regular expressions, but single instead of double quotes \(wrong:) Tj
1 0 0 1 102.0 274.4 Tm
0.0000 Tw
(`/^$wonder$/' right: "/^$wonder$/" \)? ) Tj
/F00 10 Tf
1 0 0 1 102.0 262.4 Tm
2.7764 Tw
(If you use ) Tj
/F02 10 Tf
0 0 0.8 rg
2.7764 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
2.7764 Tw
( search for attributes by an additional array ) Tj
/F02 10 Tf
2.7764 Tw
(inside) Tj
/F00 10 Tf
2.7764 Tw
( the array that) Tj
1 0 0 1 102.0 250.4 Tm
0.0000 Tw
(represents the query. ) Tj
/F00 10 Tf
1 0 0 1 102.0 238.4 Tm
0.7200 Tw
(As of version 0.0.2 you may pass tags to the searching functions either by an array as it is returned by) Tj
1 0 0 1 102.0 226.4 Tm
3.8223 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
3.8223 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
3.8223 Tw
( or you may\217better\217search by the tag array itself as it results from an) Tj
1 0 0 1 102.0 214.4 Tm
0.2350 Tw
() Tj
/F10 10 Tf
0.2350 Tw
(array_pop\(\)) Tj
/F00 10 Tf
0.2350 Tw
( of the latter. This has been introduced for robustness but you are on the safe side if you) Tj
1 0 0 1 102.0 202.4 Tm
0.0000 Tw
(do the ) Tj
/F10 10 Tf
0.0000 Tw
(array_pop\(\)) Tj
/F00 10 Tf
0.0000 Tw
( by yourself \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/Functions Returning Tags) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F00 10 Tf
1 0 0 1 102.0 190.4 Tm
0.7380 Tw
(As of version 0.2.95 you may need ) Tj
/F02 10 Tf
0 0 0.8 rg
0.7380 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
0.7380 Tw
( only in some very special cases. Now ) Tj
/F01 10 Tf
0.7380 Tw
(xml22) Tj
/F00 10 Tf
1 0 0 1 102.0 178.4 Tm
0.0000 Tw
(contains a lot of specialized searching functions \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/Search) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F21 10 Tf
1 0 0 1 72.0 160.4 Tm
0.0000 Tw
(Why does my editing always fail? ) Tj
/F00 10 Tf
1 0 0 1 102.0 148.4 Tm
0.0648 Tw
(Especially if you try to insert or to replace a tag ensure that the given tag arrays include at least the fields) Tj
1 0 0 1 102.0 136.4 Tm
0.1522 Tw
(`index`, `level' and `parindex' i.e. you must tell the functions where to place the tags. The fields must be) Tj
1 0 0 1 102.0 124.4 Tm
0.1672 Tw
(set \(defined\), they do not necessarily have to have a true value\217though you should fill one in to prevent) Tj
1 0 0 1 102.0 112.4 Tm
0.0000 Tw
(confusion. ) Tj
/F00 10 Tf
1 0 0 1 102.0 100.4 Tm
0.0000 Tw
(Best practice is to get a sibling first and work like this: ) Tj
/F10 10 Tf
1 0 0 1 102.0 88.4 Tm
0.0000 Tw
( $search  = array\('tag'     => '/name/', ) Tj
1 0 0 1 102.0 76.4 Tm
0.0000 Tw
(                  'content' => '/John Silver/'\); ) Tj
1 0 0 1 102.0 64.4 Tm
0.0000 Tw
( $sibling = array_shift\( xml22_get_by_regex\( $doc,  ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(14) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
71 0 obj
8106
endobj
72 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
73 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 72 0 R
/Contents 70 0 R
>>
endobj
74 0 obj
<<
/Length 75 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F10 10 Tf
1 0 0 1 102.0 758.0 Tm
0.0000 Tw
(                         $search, XML22_GET_FIRST \) \); ) Tj
1 0 0 1 102.0 746.0 Tm
0.0000 Tw
( $new = xml22_create_tag\( 'position', 'chairman', $sibling,  ) Tj
1 0 0 1 102.0 734.0 Tm
0.0000 Tw
(                          XML22_BYSIBLING \); ) Tj
1 0 0 1 102.0 722.0 Tm
0.0000 Tw
( $doc = xml22_insert_tag\( $doc, $new \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 698.0 Tm
2.6987 Tw
(This may be done similar for a given parent using XML22_BYPARENT. Much better is to use) Tj
1 0 0 1 102.0 686.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_add_sibling) Tj
/F00 10 Tf
0 g
0.0000 Tw
( or ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_add_child) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 72.0 668.0 Tm
0.0000 Tw
(When I delete a parent, it`s children remaining. What now? ) Tj
/F00 10 Tf
1 0 0 1 102.0 656.0 Tm
0.0000 Tw
(You should not delete a parent before you have deleted all of it`s children.  ) Tj
/F00 10 Tf
1 0 0 1 102.0 644.0 Tm
0.0000 Tw
(As of version 0.3.0 all you have to do is to add an additional parameter to ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_delete_tag) Tj
/F00 10 Tf
0 g
0.0000 Tw
(: ) Tj
/F10 10 Tf
1 0 0 1 102.0 632.0 Tm
0.0000 Tw
( $doc = xml22_delete_tag\( $doc, $tag, XML22_DEL_CHILDREN \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 608.0 Tm
0.0000 Tw
(The old way to delete root safely looks like this: ) Tj
/F10 10 Tf
1 0 0 1 102.0 596.0 Tm
0.0000 Tw
( function my_delete_fragment\( $doc, $parent \) \{ ) Tj
1 0 0 1 102.0 584.0 Tm
0.0000 Tw
(   $descarray = array_reverse\(xml22_get_all_descendants\($doc, $parent\)\); ) Tj
1 0 0 1 102.0 572.0 Tm
0.0000 Tw
(   foreach\( $descarray as $child \) \{ ) Tj
1 0 0 1 102.0 560.0 Tm
0.0000 Tw
(     if \( xml22_get_first_child\( $doc, $child \) \) \{  ) Tj
1 0 0 1 102.0 548.0 Tm
0.0000 Tw
(       $doc = my_delete_fragment\( $doc, $child \); ) Tj
1 0 0 1 102.0 536.0 Tm
0.0000 Tw
(     \} ) Tj
1 0 0 1 102.0 524.0 Tm
0.0000 Tw
(     $doc = xml22_delete_tag\( $doc, $child \); ) Tj
1 0 0 1 102.0 512.0 Tm
0.0000 Tw
(   \} ) Tj
1 0 0 1 102.0 500.0 Tm
0.0000 Tw
(   $doc = xml22_delete_tag\( $doc, $parent \); ) Tj
1 0 0 1 102.0 488.0 Tm
0.0000 Tw
(   return $doc; ) Tj
1 0 0 1 102.0 476.0 Tm
0.0000 Tw
( \} ) Tj
1 0 0 1 102.0 452.0 Tm
0.0000 Tw
( $doc  = xml22_parse\('myfile.xml'\); ) Tj
1 0 0 1 102.0 440.0 Tm
0.0000 Tw
( $root = xml22_get_root\( $doc \); ) Tj
1 0 0 1 102.0 428.0 Tm
0.0000 Tw
( $doc  = my_delete_fragment\( $doc, $root \); ) Tj
/F21 10 Tf
1 0 0 1 72.0 410.0 Tm
0.0000 Tw
(What means "Cannot pass parameter x by reference"? ) Tj
/F00 10 Tf
1 0 0 1 102.0 398.0 Tm
0.7729 Tw
(As of version 0.2.95 the internal interface of the searching functions changed to improve performance.) Tj
1 0 0 1 102.0 386.0 Tm
1.2588 Tw
(The arrays are no longer passed by value. Instead they are passed by reference. That means that you) Tj
1 0 0 1 102.0 374.0 Tm
0.0000 Tw
(cannot write your searching arrays for ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
0.0000 Tw
( inlined anymore. If you wrote: ) Tj
/F10 10 Tf
1 0 0 1 102.0 362.0 Tm
0.0000 Tw
(  $tag = xml22_get_by_regex\( $doc, array\('tag' => 'node' \) \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 338.0 Tm
0.0000 Tw
(you must write now: ) Tj
/F10 10 Tf
1 0 0 1 102.0 326.0 Tm
0.0000 Tw
(  $search = array\('tag' => 'node' \); ) Tj
1 0 0 1 102.0 314.0 Tm
0.0000 Tw
(  $tag    = xml22_get_by_regex\( $doc, $search \); ) Tj
/F00 10 Tf
1 0 0 1 102.0 290.0 Tm
1.2377 Tw
(Remember that you usually don`t need ) Tj
/F02 10 Tf
0 0 0.8 rg
1.2377 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
1.2377 Tw
(. There are a lot of specialised searching) Tj
1 0 0 1 102.0 278.0 Tm
0.0000 Tw
(functions available now. ) Tj
/F21 10 Tf
1 0 0 1 72.0 260.0 Tm
0.0000 Tw
(Is there any way to mix \(X\)HTML into my XML? ) Tj
/F00 10 Tf
1 0 0 1 102.0 248.0 Tm
0.0000 Tw
(Use an explicit CDATA declaration like this: ) Tj
/F10 10 Tf
1 0 0 1 102.0 236.0 Tm
0.0000 Tw
( <node><![CDATA[<b>A <i>very important</i> notice.</b>]]></node> ) Tj
/F00 10 Tf
1 0 0 1 102.0 212.0 Tm
0.0000 Tw
(This will result in an array element like this: ) Tj
/F10 10 Tf
1 0 0 1 102.0 200.0 Tm
0.0000 Tw
( Array \( ) Tj
1 0 0 1 102.0 188.0 Tm
0.0000 Tw
(   [tag] => node, ) Tj
1 0 0 1 102.0 176.0 Tm
0.0000 Tw
(   [...] ) Tj
1 0 0 1 102.0 164.0 Tm
0.0000 Tw
(   [content] => <b>A <i>very important</i> notice.</b> ) Tj
1 0 0 1 102.0 152.0 Tm
0.0000 Tw
( \) ) Tj
/F00 10 Tf
1 0 0 1 102.0 128.0 Tm
0.0000 Tw
(If you use ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_add_content) Tj
/F00 10 Tf
0 g
0.0000 Tw
( you can instruct the function to do this for you. ) Tj
/F21 10 Tf
1 0 0 1 72.0 110.0 Tm
0.0000 Tw
(Does caching work persistent? ) Tj
/F00 10 Tf
1 0 0 1 102.0 98.0 Tm
0.0000 Tw
(Not yet. It works only for the runtime of the script. ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 511.88 37 Tm
(15) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
75 0 obj
5028
endobj
76 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F21 15 0 R
>>
>>
endobj
77 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 76 0 R
/Contents 74 0 R
>>
endobj
78 0 obj
<<
/Length 79 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F21 10 Tf
1 0 0 1 72.0 770.0 Tm
0.0000 Tw
(What about DOM? ) Tj
/F00 10 Tf
1 0 0 1 102.0 758.0 Tm
0.3376 Tw
(This code is absolutely ) Tj
/F02 10 Tf
0.3376 Tw
(not) Tj
/F00 10 Tf
0.3376 Tw
( conforming to DOM, though it is aimed to provide a similar functionality. If) Tj
1 0 0 1 102.0 746.0 Tm
0.0771 Tw
(you have support of DOM compiled into your PHP module \(support of ) Tj
/F02 10 Tf
0.0771 Tw
(libxml2) Tj
/F00 10 Tf
0.0771 Tw
(\), use that. This code may) Tj
1 0 0 1 102.0 734.0 Tm
0.0000 Tw
(only be used if you have ) Tj
/F02 10 Tf
0.0000 Tw
(no) Tj
/F00 10 Tf
0.0000 Tw
( DOM support for your PHP module. ) Tj
/F00 10 Tf
1 0 0 1 102.0 722.0 Tm
0.6562 Tw
(Writing a class conforming to the specification of DOM Core Level 1 completely in PHP may become) Tj
1 0 0 1 102.0 710.0 Tm
0.4518 Tw
(another story\217though it may seem to be useless. As of PHP4 the scripting engine has the possibility to) Tj
1 0 0 1 102.0 698.0 Tm
0.6556 Tw
(support DOM if it is compiled with support for ) Tj
/F02 10 Tf
0.6556 Tw
(libxml2) Tj
/F00 10 Tf
0.6556 Tw
(. Unfortunately, not every user has control over) Tj
1 0 0 1 102.0 686.0 Tm
0.1924 Tw
(the PHP module and the libraries installed on the system where \(s\)he runs her/his code. DOM support in) Tj
1 0 0 1 102.0 674.0 Tm
0.2150 Tw
(PHP is still marked as "experimental" and some providers do not want to provide experimental stuff due) Tj
1 0 0 1 102.0 662.0 Tm
0.0000 Tw
(to security reasons. ) Tj
/F00 10 Tf
1 0 0 1 102.0 650.0 Tm
0.9120 Tw
(Last but not least, not everybody likes OOP. This one is for those who think of the old times as good) Tj
1 0 0 1 102.0 638.0 Tm
0.0000 Tw
(times ;\) ) Tj
/F21 12 Tf
1 0 0 1 72.0 620.0 Tm
0.0000 Tw
(REQUIREMENTS  ) Tj
/F00 10 Tf
1 0 0 1 102.0 605.6 Tm
0.0000 Tw
(PHP ) Tj
/F00 10 Tf
0.0000 Tw
(= 4.0.0, XML support \(libexpat\), Perl compatible regular expressions. ) Tj
/F21 12 Tf
1 0 0 1 72.0 575.6 Tm
0.0000 Tw
(RESTRICTIONS ) Tj
/F00 10 Tf
1 0 0 1 102.0 561.2 Tm
0.8753 Tw
(Do not use these functions for ) Tj
/F02 10 Tf
0.8753 Tw
(very) Tj
/F00 10 Tf
0.8753 Tw
( huge XML files. The whole file will be read into memory at once) Tj
1 0 0 1 102.0 549.2 Tm
0.6286 Tw
(and the multidimensional array build up by the parsing function will consume obviously ) Tj
/F02 10 Tf
0.6286 Tw
(more) Tj
/F00 10 Tf
0.6286 Tw
( memory) Tj
1 0 0 1 102.0 537.2 Tm
2.0876 Tw
(than the plain file does. You better split your files into pieces and handle them using the caching) Tj
1 0 0 1 102.0 525.2 Tm
0.0000 Tw
(mechanism \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/Caching) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F00 10 Tf
1 0 0 1 102.0 513.2 Tm
0.0000 Tw
(There are some restrictions to the parser. Currently not supported features are: namespaces. ) Tj
/F00 10 Tf
1 0 0 1 102.0 501.2 Tm
0.1528 Tw
(External DTDs are not parsed, i.e. the parser is non-validating. This is a restriction of the XML parser of) Tj
1 0 0 1 102.0 489.2 Tm
0.0000 Tw
(PHP4 which is actually an interface to ) Tj
/F10 10 Tf
0.0000 Tw
(libexpat) Tj
/F00 10 Tf
0.0000 Tw
(. ) Tj
/F00 10 Tf
1 0 0 1 102.0 477.2 Tm
0.0000 Tw
(Currently there is no unicode support. ) Tj
/F00 10 Tf
1 0 0 1 102.0 465.2 Tm
0.2621 Tw
(The code may work for correctly nested data. It may ) Tj
/F02 10 Tf
0.2621 Tw
(not) Tj
/F00 10 Tf
0.2621 Tw
( be useful for data including the XML data type) Tj
1 0 0 1 102.0 453.2 Tm
0.9459 Tw
(ANY i.e. not for tags that are embedded in CDATA \(you cannot use this code to process \(X\)HTML\).) Tj
1 0 0 1 102.0 441.2 Tm
0.0000 Tw
(This may change in the future. ) Tj
/F21 12 Tf
1 0 0 1 72.0 423.2 Tm
0.0000 Tw
(TO DO ) Tj
/F20 10 Tf
1 0 0 1 87.0 401.6 Tm
0.0000 Tw
() Tj
ET
q
87 402.6 4 4 re
f
Q
BT
1 0 0 1 95 401.6 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 401.6 Tm
0.0000 Tw
(change structure of the array to improve performance and compatibility to standards ) Tj
/F20 10 Tf
1 0 0 1 87.0 383.6 Tm
0.0000 Tw
() Tj
ET
q
87 384.6 4 4 re
f
Q
BT
1 0 0 1 95 383.6 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 383.6 Tm
0.0000 Tw
(unicode support ) Tj
/F20 10 Tf
1 0 0 1 87.0 365.6 Tm
0.0000 Tw
() Tj
ET
q
87 366.6 4 4 re
f
Q
BT
1 0 0 1 95 365.6 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 365.6 Tm
0.0000 Tw
(optimize performance of editing functions ) Tj
/F20 10 Tf
1 0 0 1 87.0 347.6 Tm
0.0000 Tw
() Tj
ET
q
87 348.6 4 4 re
f
Q
BT
1 0 0 1 95 347.6 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 347.6 Tm
0.0000 Tw
(enable persistent caching ) Tj
/F21 12 Tf
1 0 0 1 72.0 317.6 Tm
0.0000 Tw
(CHANGELOG ) Tj
/F21 10 Tf
1 0 0 1 72.0 296.0 Tm
0.0000 Tw
(0.3.4 ) Tj
/F20 10 Tf
1 0 0 1 87.0 278.0 Tm
0.0000 Tw
() Tj
ET
q
87 279 4 4 re
f
Q
BT
1 0 0 1 95 278 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 278.0 Tm
0.0000 Tw
(Function ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_has_children) Tj
/F00 10 Tf
0 g
0.0000 Tw
( return the number of children now \(added by request\). ) Tj
/F21 10 Tf
1 0 0 1 72.0 248.0 Tm
0.0000 Tw
(0.3.3 ) Tj
/F20 10 Tf
1 0 0 1 87.0 230.0 Tm
0.0000 Tw
() Tj
ET
q
87 231 4 4 re
f
Q
BT
1 0 0 1 95 230 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 230.0 Tm
0.0000 Tw
(Some bugs fixed. ) Tj
/F21 10 Tf
1 0 0 1 72.0 200.0 Tm
0.0000 Tw
(0.3.2 ) Tj
/F20 10 Tf
1 0 0 1 87.0 182.0 Tm
0.0000 Tw
() Tj
ET
q
87 183 4 4 re
f
Q
BT
1 0 0 1 95 182 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 182.0 Tm
0.0000 Tw
(Extended functionality of ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_all_of_name) Tj
/F00 10 Tf
0 g
0.0000 Tw
( and ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_all_of_content) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 164.0 Tm
0.0000 Tw
() Tj
ET
q
87 165 4 4 re
f
Q
BT
1 0 0 1 95 164 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 164.0 Tm
1.3058 Tw
(Some optimizations, e.g. ) Tj
/F02 10 Tf
0 0 0.8 rg
1.3058 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
1.3058 Tw
( runs about two times faster now which effects a) Tj
1 0 0 1 126.0 152.0 Tm
0.0000 Tw
(number of other functions too. ) Tj
/F20 10 Tf
1 0 0 1 87.0 134.0 Tm
0.0000 Tw
() Tj
ET
q
87 135 4 4 re
f
Q
BT
1 0 0 1 95 134 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 134.0 Tm
0.0000 Tw
(Fixed bug in ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_get_all_of_name) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 116.0 Tm
0.0000 Tw
() Tj
ET
q
87 117 4 4 re
f
Q
BT
1 0 0 1 95 116 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 116.0 Tm
0.0000 Tw
(Test scripts may be used at command line now. ) Tj
/F20 10 Tf
1 0 0 1 87.0 98.0 Tm
0.0000 Tw
() Tj
ET
q
87 99.0000000000001 4 4 re
f
Q
BT
1 0 0 1 95 98.0000000000001 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 98.0 Tm
0.0000 Tw
(Fixed bug in the profiling function of test scripts. ) Tj
/F20 10 Tf
1 0 0 1 87.0 80.0 Tm
0.0000 Tw
() Tj
ET
q
87 81.0000000000001 4 4 re
f
Q
BT
1 0 0 1 95 80.0000000000001 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 80.0 Tm
0.0000 Tw
(Makefiles ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(16) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
79 0 obj
7172
endobj
80 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
81 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 80 0 R
/Contents 78 0 R
>>
endobj
82 0 obj
<<
/Length 83 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Ister.ORG) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F21 10 Tf
1 0 0 1 72.0 770.0 Tm
0.0000 Tw
(0.3.1 ) Tj
/F20 10 Tf
1 0 0 1 87.0 752.0 Tm
0.0000 Tw
() Tj
ET
q
87 753 4 4 re
f
Q
BT
1 0 0 1 95 752 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 752.0 Tm
0.0000 Tw
(New function ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_register_char_entity_set) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 734.0 Tm
0.0000 Tw
() Tj
ET
q
87 735 4 4 re
f
Q
BT
1 0 0 1 95 734 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 734.0 Tm
0.0000 Tw
(Minor bugfixes. ) Tj
/F21 10 Tf
1 0 0 1 72.0 704.0 Tm
0.0000 Tw
(0.3.0 ) Tj
/F20 10 Tf
1 0 0 1 87.0 686.0 Tm
0.0000 Tw
() Tj
ET
q
87 687 4 4 re
f
Q
BT
1 0 0 1 95 686 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 686.0 Tm
0.0000 Tw
(The parser accepts a filename as well as a single string containing well formed XML. ) Tj
/F20 10 Tf
1 0 0 1 87.0 668.0 Tm
0.0000 Tw
() Tj
ET
q
87 669 4 4 re
f
Q
BT
1 0 0 1 95 668 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 668.0 Tm
0.3993 Tw
(General Entities are resolved now. The parser may be configured to parse external entities as well) Tj
1 0 0 1 126.0 656.0 Tm
0.0000 Tw
(\(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_setup) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F20 10 Tf
1 0 0 1 87.0 638.0 Tm
0.0000 Tw
() Tj
ET
q
87 639 4 4 re
f
Q
BT
1 0 0 1 95 638 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 638.0 Tm
0.0000 Tw
(Support for processing instructions, see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_register_pi_func) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F20 10 Tf
1 0 0 1 87.0 620.0 Tm
0.0000 Tw
() Tj
ET
q
87 621 4 4 re
f
Q
BT
1 0 0 1 95 620 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 620.0 Tm
0.0000 Tw
(A new function ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_write_document_str) Tj
/F00 10 Tf
0 g
0.0000 Tw
( is introduced to write an XML document to a string. ) Tj
/F20 10 Tf
1 0 0 1 87.0 602.0 Tm
0.0000 Tw
() Tj
ET
q
87 603 4 4 re
f
Q
BT
1 0 0 1 95 602 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 602.0 Tm
0.0000 Tw
() Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_delete_tag) Tj
/F00 10 Tf
0 g
0.0000 Tw
( is now able to delete a tag and all of its descendants in one task. ) Tj
/F20 10 Tf
1 0 0 1 87.0 584.0 Tm
0.0000 Tw
() Tj
ET
q
87 585 4 4 re
f
Q
BT
1 0 0 1 95 584 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 584.0 Tm
0.0000 Tw
(Support for document fragments. ) Tj
/F20 10 Tf
1 0 0 1 87.0 566.0 Tm
0.0000 Tw
() Tj
ET
q
87 567 4 4 re
f
Q
BT
1 0 0 1 95 566 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 566.0 Tm
0.0000 Tw
(Some optimizations in pattern matching. ) Tj
/F20 10 Tf
1 0 0 1 87.0 548.0 Tm
0.0000 Tw
() Tj
ET
q
87 549 4 4 re
f
Q
BT
1 0 0 1 95 548 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 548.0 Tm
2.4064 Tw
(For better maintanance, the include file is splitted into five pieces. You still include simply) Tj
1 0 0 1 126.0 536.0 Tm
0.0000 Tw
() Tj
/F03 10 Tf
0.0000 Tw
(xml22.inc) Tj
/F00 10 Tf
0.0000 Tw
( that manages the additional includes for you. See ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/Installation) Tj
/F00 10 Tf
0 g
0.0000 Tw
(. ) Tj
/F21 10 Tf
1 0 0 1 72.0 506.0 Tm
0.0000 Tw
(0.2.96 ) Tj
/F20 10 Tf
1 0 0 1 87.0 488.0 Tm
0.0000 Tw
() Tj
ET
q
87 489 4 4 re
f
Q
BT
1 0 0 1 95 488 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 488.0 Tm
0.0000 Tw
(Now ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_write_document) Tj
/F00 10 Tf
0 g
0.0000 Tw
( encodes predefined entities. ) Tj
/F21 10 Tf
1 0 0 1 72.0 458.0 Tm
0.0000 Tw
(0.2.95 ) Tj
/F20 10 Tf
1 0 0 1 87.0 440.0 Tm
0.0000 Tw
() Tj
ET
q
87 441 4 4 re
f
Q
BT
1 0 0 1 95 440 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 440.0 Tm
0 Tw
(Now the parser recognizes entities as well as ) Tj
/F10 10 Tf
0 Tw
(<!ENTITY> and ) Tj
/F10 10 Tf
0 Tw
(<!NOTATION>) Tj
1 0 0 1 126.0 428.0 Tm
0.0000 Tw
(definitions or processing instructions. ) Tj
/F20 10 Tf
1 0 0 1 87.0 410.0 Tm
0.0000 Tw
() Tj
ET
q
87 411 4 4 re
f
Q
BT
1 0 0 1 95 410 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 410.0 Tm
0.0000 Tw
(Fixed some hidden bugs in the parser. ) Tj
/F20 10 Tf
1 0 0 1 87.0 392.0 Tm
0.0000 Tw
() Tj
ET
q
87 393 4 4 re
f
Q
BT
1 0 0 1 95 392 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 392.0 Tm
0.0000 Tw
(Added several functions to get particular nodes or information about nodes. ) Tj
/F20 10 Tf
1 0 0 1 87.0 374.0 Tm
0.0000 Tw
() Tj
ET
q
87 375 4 4 re
f
Q
BT
1 0 0 1 95 374 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 374.0 Tm
0.0000 Tw
(Added several new editing functions. ) Tj
/F20 10 Tf
1 0 0 1 87.0 356.0 Tm
0.0000 Tw
() Tj
ET
q
87 357 4 4 re
f
Q
BT
1 0 0 1 95 356 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 356.0 Tm
0.0000 Tw
(Added ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/xml22_setup) Tj
/F00 10 Tf
0 g
0.0000 Tw
( function. ) Tj
/F20 10 Tf
1 0 0 1 87.0 338.0 Tm
0.0000 Tw
() Tj
ET
q
87 339 4 4 re
f
Q
BT
1 0 0 1 95 338 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 338.0 Tm
0.0000 Tw
(Caching now checks if the cached document`s file has been changed. ) Tj
/F20 10 Tf
1 0 0 1 87.0 320.0 Tm
0.0000 Tw
() Tj
ET
q
87 321 4 4 re
f
Q
BT
1 0 0 1 95 320 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 320.0 Tm
0.8250 Tw
(It should be safe now to pass the results of searching functions that return arrays of tags back to) Tj
1 0 0 1 126.0 308.0 Tm
0.2192 Tw
(those functions. To make this possible some changes to ) Tj
/F02 10 Tf
0 0 0.8 rg
0.2192 Tw
(/xml22_get_by_regex) Tj
/F00 10 Tf
0 g
0.2192 Tw
( were necessary. The) Tj
1 0 0 1 126.0 296.0 Tm
0.0000 Tw
(meaning of ) Tj
/F10 10 Tf
0.0000 Tw
($startindex) Tj
/F00 10 Tf
0.0000 Tw
( and ) Tj
/F10 10 Tf
0.0000 Tw
($offset) Tj
/F00 10 Tf
0.0000 Tw
( changed a little. ) Tj
/F20 10 Tf
1 0 0 1 87.0 278.0 Tm
0.0000 Tw
() Tj
ET
q
87 279 4 4 re
f
Q
BT
1 0 0 1 95 278 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 278.0 Tm
0.9482 Tw
(Changed pass-by-value to pass-by-reference internally where it makes sense. This influences the) Tj
1 0 0 1 126.0 266.0 Tm
0.0000 Tw
(API at only one point \(see ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0000 Tw
(/What means "Cannot pass parameter x by reference"?) Tj
/F00 10 Tf
0 g
0.0000 Tw
(\). ) Tj
/F20 10 Tf
1 0 0 1 87.0 248.0 Tm
0.0000 Tw
() Tj
ET
q
87 249 4 4 re
f
Q
BT
1 0 0 1 95 248 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 248.0 Tm
0.0000 Tw
(The tests run now with the \(extended\) W3C `staff.xml'. ) Tj
/F20 10 Tf
1 0 0 1 87.0 230.0 Tm
0.0000 Tw
() Tj
ET
q
87 231 4 4 re
f
Q
BT
1 0 0 1 95 230 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 230.0 Tm
0.7814 Tw
(A new and more common version numbering. The code is still considered developmental, so the) Tj
1 0 0 1 126.0 218.0 Tm
0.7356 Tw
(major version number is 0. Now the minor number marks the level of development and the third) Tj
1 0 0 1 126.0 206.0 Tm
0.0000 Tw
(number marks the bugfix level. ) Tj
/F21 10 Tf
1 0 0 1 72.0 176.0 Tm
0.0000 Tw
(0.0.2 ) Tj
/F20 10 Tf
1 0 0 1 87.0 158.0 Tm
0.0000 Tw
() Tj
ET
q
87 159 4 4 re
f
Q
BT
1 0 0 1 95 158 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 158.0 Tm
0.0000 Tw
(Added editing functions for single tags. ) Tj
/F20 10 Tf
1 0 0 1 87.0 140.0 Tm
0.0000 Tw
() Tj
ET
q
87 141 4 4 re
f
Q
BT
1 0 0 1 95 140 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 140.0 Tm
0.0000 Tw
(Added function to write a document. ) Tj
/F20 10 Tf
1 0 0 1 87.0 122.0 Tm
0.0000 Tw
() Tj
ET
q
87 123 4 4 re
f
Q
BT
1 0 0 1 95 122 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 122.0 Tm
0.0000 Tw
(Added internal checks to improve robustness. ) Tj
/F20 10 Tf
1 0 0 1 87.0 104.0 Tm
0.0000 Tw
() Tj
ET
q
87 105 4 4 re
f
Q
BT
1 0 0 1 95 104 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 104.0 Tm
0.0000 Tw
(Changed the structure of the document array by adding a new element `index'. ) Tj
/F20 10 Tf
1 0 0 1 87.0 86.0 Tm
0.0000 Tw
() Tj
ET
q
87 87 4 4 re
f
Q
BT
1 0 0 1 95 86 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 86.0 Tm
0.0618 Tw
(Enhanced error reporting. ) Tj
/F02 10 Tf
0.0618 Tw
(/xml22_parse_error) Tj
/F00 10 Tf
0.0618 Tw
( is obsolete. Now use ) Tj
/F02 10 Tf
0 0 0.8 rg
0.0618 Tw
(/xml22_error) Tj
/F00 10 Tf
0 g
0.0618 Tw
( which returns an) Tj
1 0 0 1 126.0 74.0 Tm
0.0000 Tw
(array containing all errors. ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 511.88 37 Tm
(17) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
83 0 obj
8501
endobj
84 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F02 8 0 R
/F03 9 0 R
/F10 10 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
85 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 84 0 R
/Contents 82 0 R
>>
endobj
86 0 obj
<<
/Length 87 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 476.32 797 Tm
(Ister.ORG) Tj
/F20 10 Tf
1 0 0 1 87.0 770.0 Tm
0.0000 Tw
() Tj
ET
q
87 771 4 4 re
f
Q
BT
1 0 0 1 95 770 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 770.0 Tm
0.0000 Tw
(Added basic support for XML comments. ) Tj
/F21 10 Tf
1 0 0 1 72.0 740.0 Tm
0.0000 Tw
(0.0.1 ) Tj
/F20 10 Tf
1 0 0 1 87.0 722.0 Tm
0.0000 Tw
() Tj
ET
q
87 723 4 4 re
f
Q
BT
1 0 0 1 95 722 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 722.0 Tm
0.0000 Tw
(Parsing of a document into a multidimensional array. ) Tj
/F20 10 Tf
1 0 0 1 87.0 704.0 Tm
0.0000 Tw
() Tj
ET
q
87 705 4 4 re
f
Q
BT
1 0 0 1 95 704 Tm
/F20 10 Tf
0.0000 Tw
( ) Tj
/F00 10 Tf
1 0 0 1 126.0 704.0 Tm
0.0000 Tw
(Basic searching functions. ) Tj
/F21 12 Tf
1 0 0 1 72.0 674.0 Tm
0.0000 Tw
(LICENSE  ) Tj
/F00 10 Tf
1 0 0 1 102.0 659.6 Tm
0.0000 Tw
(Copyright \(C\) 2003 Ingo Schramm ) Tj
/F00 10 Tf
1 0 0 1 102.0 647.6 Tm
1.6476 Tw
(This program is free software; you can redistribute it and/or modify it under the terms of the GNU) Tj
1 0 0 1 102.0 635.6 Tm
0.0844 Tw
(General Public License as published by the Free Software Foundation; either version 2 of the License, or) Tj
1 0 0 1 102.0 623.6 Tm
0.0000 Tw
(\(at your option\) any later version. ) Tj
/F00 10 Tf
1 0 0 1 102.0 611.6 Tm
1.9207 Tw
(This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;) Tj
1 0 0 1 102.0 599.6 Tm
2.1891 Tw
(without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR) Tj
1 0 0 1 102.0 587.6 Tm
0.0000 Tw
(PURPOSE.  See the GNU General Public License for more details. ) Tj
/F00 10 Tf
1 0 0 1 102.0 575.6 Tm
0.8800 Tw
(You should have received a copy of the GNU General Public License along with this program; if not,) Tj
1 0 0 1 102.0 563.6 Tm
0.0000 Tw
(write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA ) Tj
/F21 12 Tf
1 0 0 1 72.0 545.6 Tm
0.0000 Tw
(REPORTING BUGS ) Tj
/F00 10 Tf
1 0 0 1 102.0 531.2 Tm
0.3424 Tw
(If you want to report bugs or if you have any suggestions feel free to send a message to the author. You) Tj
1 0 0 1 102.0 519.2 Tm
1.6633 Tw
(will find the current e-mail address at http://www.ister.org. Please add to your report the version of) Tj
1 0 0 1 102.0 507.2 Tm
0.0000 Tw
() Tj
/F01 10 Tf
0.0000 Tw
(xml22) Tj
/F00 10 Tf
0.0000 Tw
( you use, the version of your PHP module and the type of system it runs on. ) Tj
/F21 12 Tf
1 0 0 1 72.0 489.2 Tm
0.0000 Tw
(AUTHOR   ) Tj
/F00 10 Tf
1 0 0 1 102.0 474.8 Tm
0.0000 Tw
(Ingo Schramm ) Tj
/F00 10 Tf
1 0 0 1 102.0 462.8 Tm
0.0000 Tw
(http://code.ister.org ) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(18) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
87 0 obj
2801
endobj
88 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F00 6 0 R
/F01 7 0 R
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
89 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 88 0 R
/Contents 86 0 R
>>
endobj
90 0 obj
<<
/Length 91 0 R
>>
stream
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
/F20 24 Tf
1 0 0 1 202.784 770 Tm
(Table of Contents) Tj
1 0 0 1 265.496 741.2 Tm
(xml22) Tj
/F20 10 Tf
ET
q
0.95 g
72 680.6 451 12 re
f
Q
BT
1 0 0 1 102 683.6 Tm
(NAME) Tj
1 0 0 1 487.44 683.6 Tm
(1) Tj
ET
q
1 g
72 668.6 451 12 re
f
Q
BT
1 0 0 1 102 671.6 Tm
(VERSION) Tj
1 0 0 1 487.44 671.6 Tm
(1) Tj
ET
q
0.95 g
72 656.6 451 12 re
f
Q
BT
1 0 0 1 102 659.6 Tm
(DESCRIPTION) Tj
1 0 0 1 487.44 659.6 Tm
(1) Tj
ET
q
1 g
72 644.6 451 12 re
f
Q
BT
1 0 0 1 132 647.6 Tm
(Overview) Tj
1 0 0 1 487.44 647.6 Tm
(1) Tj
ET
q
0.95 g
72 632.6 451 12 re
f
Q
BT
1 0 0 1 132 635.6 Tm
(Array Structure) Tj
1 0 0 1 487.44 635.6 Tm
(1) Tj
ET
q
1 g
72 620.6 451 12 re
f
Q
BT
1 0 0 1 132 623.6 Tm
(IMPORTANT NOTE ABOUT THE ARRAY STRUCTURE) Tj
1 0 0 1 487.44 623.6 Tm
(2) Tj
ET
q
0.95 g
72 608.6 451 12 re
f
Q
BT
1 0 0 1 132 611.6 Tm
(Tags) Tj
1 0 0 1 487.44 611.6 Tm
(2) Tj
ET
q
1 g
72 596.6 451 12 re
f
Q
BT
1 0 0 1 132 599.6 Tm
(Searching and Editing) Tj
1 0 0 1 487.44 599.6 Tm
(2) Tj
ET
q
0.95 g
72 584.6 451 12 re
f
Q
BT
1 0 0 1 132 587.6 Tm
(Functions Returning Tags) Tj
1 0 0 1 487.44 587.6 Tm
(3) Tj
ET
q
1 g
72 572.6 451 12 re
f
Q
BT
1 0 0 1 132 575.6 Tm
(Document Fragments) Tj
1 0 0 1 487.44 575.6 Tm
(4) Tj
ET
q
0.95 g
72 560.6 451 12 re
f
Q
BT
1 0 0 1 132 563.6 Tm
(Caching) Tj
1 0 0 1 487.44 563.6 Tm
(4) Tj
ET
q
1 g
72 548.6 451 12 re
f
Q
BT
1 0 0 1 102 551.6 Tm
(INSTALLATION) Tj
1 0 0 1 487.44 551.6 Tm
(4) Tj
ET
q
0.95 g
72 536.6 451 12 re
f
Q
BT
1 0 0 1 102 539.6 Tm
(FUNCTIONS) Tj
1 0 0 1 487.44 539.6 Tm
(5) Tj
ET
q
1 g
72 524.6 451 12 re
f
Q
BT
1 0 0 1 132 527.6 Tm
(Parse) Tj
1 0 0 1 487.44 527.6 Tm
(5) Tj
ET
q
0.95 g
72 512.6 451 12 re
f
Q
BT
1 0 0 1 162 515.6 Tm
(xml22_parse) Tj
1 0 0 1 487.44 515.6 Tm
(5) Tj
ET
q
1 g
72 500.6 451 12 re
f
Q
BT
1 0 0 1 162 503.6 Tm
(xml22_register_pi_func) Tj
1 0 0 1 487.44 503.6 Tm
(5) Tj
ET
q
0.95 g
72 488.6 451 12 re
f
Q
BT
1 0 0 1 162 491.6 Tm
(xml22_register_char_entity_set) Tj
1 0 0 1 487.44 491.6 Tm
(5) Tj
ET
q
1 g
72 476.6 451 12 re
f
Q
BT
1 0 0 1 132 479.6 Tm
(Write) Tj
1 0 0 1 487.44 479.6 Tm
(6) Tj
ET
q
0.95 g
72 464.6 451 12 re
f
Q
BT
1 0 0 1 162 467.6 Tm
(xml22_write_document) Tj
1 0 0 1 487.44 467.6 Tm
(6) Tj
ET
q
1 g
72 452.6 451 12 re
f
Q
BT
1 0 0 1 162 455.6 Tm
(xml22_write_document_str) Tj
1 0 0 1 487.44 455.6 Tm
(6) Tj
ET
q
0.95 g
72 440.6 451 12 re
f
Q
BT
1 0 0 1 132 443.6 Tm
(Search) Tj
1 0 0 1 487.44 443.6 Tm
(6) Tj
ET
q
1 g
72 428.6 451 12 re
f
Q
BT
1 0 0 1 162 431.6 Tm
(xml22_get_by_regex) Tj
1 0 0 1 487.44 431.6 Tm
(6) Tj
ET
q
0.95 g
72 416.6 451 12 re
f
Q
BT
1 0 0 1 162 419.6 Tm
(xml22_get_all_siblings) Tj
1 0 0 1 487.44 419.6 Tm
(7) Tj
ET
q
1 g
72 404.6 451 12 re
f
Q
BT
1 0 0 1 162 407.6 Tm
(xml22_get_all_descendants) Tj
1 0 0 1 487.44 407.6 Tm
(7) Tj
ET
q
0.95 g
72 392.6 451 12 re
f
Q
BT
1 0 0 1 162 395.6 Tm
(xml22_get_all_ancestors) Tj
1 0 0 1 487.44 395.6 Tm
(7) Tj
ET
q
1 g
72 380.6 451 12 re
f
Q
BT
1 0 0 1 162 383.6 Tm
(xml22_get_all_of_name) Tj
1 0 0 1 487.44 383.6 Tm
(7) Tj
ET
q
0.95 g
72 368.6 451 12 re
f
Q
BT
1 0 0 1 162 371.6 Tm
(xml22_get_all_of_content) Tj
1 0 0 1 487.44 371.6 Tm
(7) Tj
ET
q
1 g
72 356.6 451 12 re
f
Q
BT
1 0 0 1 162 359.6 Tm
(xml22_get_version) Tj
1 0 0 1 487.44 359.6 Tm
(7) Tj
ET
q
0.95 g
72 344.6 451 12 re
f
Q
BT
1 0 0 1 162 347.6 Tm
(xml22_get_doctype) Tj
1 0 0 1 487.44 347.6 Tm
(7) Tj
ET
q
1 g
72 332.6 451 12 re
f
Q
BT
1 0 0 1 162 335.6 Tm
(xml22_get_root) Tj
1 0 0 1 487.44 335.6 Tm
(8) Tj
ET
q
0.95 g
72 320.6 451 12 re
f
Q
BT
1 0 0 1 162 323.6 Tm
(xml22_has_children) Tj
1 0 0 1 487.44 323.6 Tm
(8) Tj
ET
q
1 g
72 308.6 451 12 re
f
Q
BT
1 0 0 1 162 311.6 Tm
(xml22_get_first_child) Tj
1 0 0 1 487.44 311.6 Tm
(8) Tj
ET
q
0.95 g
72 296.6 451 12 re
f
Q
BT
1 0 0 1 162 299.6 Tm
(xml22_get_last_child) Tj
1 0 0 1 487.44 299.6 Tm
(8) Tj
ET
q
1 g
72 284.6 451 12 re
f
Q
BT
1 0 0 1 162 287.6 Tm
(xml22_get_next_sibling) Tj
1 0 0 1 487.44 287.6 Tm
(8) Tj
ET
q
0.95 g
72 272.6 451 12 re
f
Q
BT
1 0 0 1 162 275.6 Tm
(xml22_get_prev_sibling) Tj
1 0 0 1 487.44 275.6 Tm
(8) Tj
ET
q
1 g
72 260.6 451 12 re
f
Q
BT
1 0 0 1 162 263.6 Tm
(xml22_get_parent) Tj
1 0 0 1 487.44 263.6 Tm
(8) Tj
ET
q
0.95 g
72 248.6 451 12 re
f
Q
BT
1 0 0 1 162 251.6 Tm
(xml22_get_by_id) Tj
1 0 0 1 487.44 251.6 Tm
(8) Tj
ET
q
1 g
72 236.6 451 12 re
f
Q
BT
1 0 0 1 162 239.6 Tm
(xml22_get_name) Tj
1 0 0 1 487.44 239.6 Tm
(9) Tj
ET
q
0.95 g
72 224.6 451 12 re
f
Q
BT
1 0 0 1 162 227.6 Tm
(xml22_get_content) Tj
1 0 0 1 487.44 227.6 Tm
(9) Tj
ET
q
1 g
72 212.6 451 12 re
f
Q
BT
1 0 0 1 162 215.6 Tm
(xml22_get_attribute) Tj
1 0 0 1 487.44 215.6 Tm
(9) Tj
ET
q
0.95 g
72 200.6 451 12 re
f
Q
BT
1 0 0 1 162 203.6 Tm
(xml22_get_entity) Tj
1 0 0 1 487.44 203.6 Tm
(9) Tj
ET
q
1 g
72 188.6 451 12 re
f
Q
BT
1 0 0 1 162 191.6 Tm
(xml22_get_notation) Tj
1 0 0 1 487.44 191.6 Tm
(9) Tj
ET
q
0.95 g
72 176.6 451 12 re
f
Q
BT
1 0 0 1 162 179.6 Tm
(xml22_is_tag) Tj
1 0 0 1 487.44 179.6 Tm
(9) Tj
ET
q
1 g
72 164.6 451 12 re
f
Q
BT
1 0 0 1 162 167.6 Tm
(xml22_is_fragment) Tj
1 0 0 1 487.44 167.6 Tm
(9) Tj
ET
q
0.95 g
72 152.6 451 12 re
f
Q
BT
1 0 0 1 162 155.6 Tm
(xml22_is_document) Tj
1 0 0 1 487.44 155.6 Tm
(9) Tj
ET
q
1 g
72 140.6 451 12 re
f
Q
BT
1 0 0 1 162 143.6 Tm
(xml22_is_below_root) Tj
1 0 0 1 481.88 143.6 Tm
(10) Tj
ET
q
0.95 g
72 128.6 451 12 re
f
Q
BT
1 0 0 1 132 131.6 Tm
(Edit) Tj
1 0 0 1 481.88 131.6 Tm
(10) Tj
ET
q
1 g
72 116.6 451 12 re
f
Q
BT
1 0 0 1 162 119.6 Tm
(xml22_create_document) Tj
1 0 0 1 481.88 119.6 Tm
(10) Tj
ET
q
0.95 g
72 104.6 451 12 re
f
Q
BT
1 0 0 1 162 107.6 Tm
(xml22_create_tag) Tj
1 0 0 1 481.88 107.6 Tm
(10) Tj
ET
q
1 g
72 92.6 451 12 re
f
Q
BT
1 0 0 1 162 95.6 Tm
(xml22_create_fragment) Tj
1 0 0 1 481.88 95.6 Tm
(10) Tj
ET
q
0.95 g
72 80.6 451 12 re
f
Q
BT
1 0 0 1 162 83.6 Tm
(xml22_add_attribute) Tj
1 0 0 1 481.88 83.6 Tm
(10) Tj
ET
q
1 g
72 68.6 451 12 re
f
Q
BT
1 0 0 1 162 71.6 Tm
(xml22_delete_attribute) Tj
1 0 0 1 481.88 71.6 Tm
(10) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 520.22 37 Tm
(i) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
91 0 obj
6033
endobj
92 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
93 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 92 0 R
/Contents 90 0 R
>>
endobj
94 0 obj
<<
/Length 95 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(xml22) Tj
1 0 0 1 438.55 797 Tm
(Table of Contents) Tj
/F20 10 Tf
ET
q
0.95 g
72 767 451 12 re
f
Q
BT
1 0 0 1 162 770 Tm
(xml22_add_content) Tj
1 0 0 1 481.88 770 Tm
(11) Tj
ET
q
1 g
72 755 451 12 re
f
Q
BT
1 0 0 1 162 758 Tm
(xml22_delete_tag) Tj
1 0 0 1 481.88 758 Tm
(11) Tj
ET
q
0.95 g
72 743 451 12 re
f
Q
BT
1 0 0 1 162 746 Tm
(xml22_insert_tag) Tj
1 0 0 1 481.88 746 Tm
(11) Tj
ET
q
1 g
72 731 451 12 re
f
Q
BT
1 0 0 1 162 734 Tm
(xml22_replace_tag) Tj
1 0 0 1 481.88 734 Tm
(11) Tj
ET
q
0.95 g
72 719 451 12 re
f
Q
BT
1 0 0 1 162 722 Tm
(xml22_move_tag) Tj
1 0 0 1 481.88 722 Tm
(11) Tj
ET
q
1 g
72 707 451 12 re
f
Q
BT
1 0 0 1 162 710 Tm
(xml22_copy_fragment) Tj
1 0 0 1 481.88 710 Tm
(11) Tj
ET
q
0.95 g
72 695 451 12 re
f
Q
BT
1 0 0 1 162 698 Tm
(xml22_delete_fragment) Tj
1 0 0 1 481.88 698 Tm
(12) Tj
ET
q
1 g
72 683 451 12 re
f
Q
BT
1 0 0 1 162 686 Tm
(xml22_insert_fragment) Tj
1 0 0 1 481.88 686 Tm
(12) Tj
ET
q
0.95 g
72 671 451 12 re
f
Q
BT
1 0 0 1 162 674 Tm
(xml22_replace_fragment) Tj
1 0 0 1 481.88 674 Tm
(12) Tj
ET
q
1 g
72 659 451 12 re
f
Q
BT
1 0 0 1 162 662 Tm
(xml22_move_fragment) Tj
1 0 0 1 481.88 662 Tm
(12) Tj
ET
q
0.95 g
72 647 451 12 re
f
Q
BT
1 0 0 1 162 650 Tm
(xml22_add_doctype) Tj
1 0 0 1 481.88 650 Tm
(12) Tj
ET
q
1 g
72 635 451 12 re
f
Q
BT
1 0 0 1 162 638 Tm
(xml22_add_root) Tj
1 0 0 1 481.88 638 Tm
(12) Tj
ET
q
0.95 g
72 623 451 12 re
f
Q
BT
1 0 0 1 162 626 Tm
(xml22_add_child) Tj
1 0 0 1 481.88 626 Tm
(13) Tj
ET
q
1 g
72 611 451 12 re
f
Q
BT
1 0 0 1 162 614 Tm
(xml22_add_sibling) Tj
1 0 0 1 481.88 614 Tm
(13) Tj
ET
q
0.95 g
72 599 451 12 re
f
Q
BT
1 0 0 1 162 602 Tm
(xml22_add_comment) Tj
1 0 0 1 481.88 602 Tm
(13) Tj
ET
q
1 g
72 587 451 12 re
f
Q
BT
1 0 0 1 132 590 Tm
(Miscellaneous) Tj
1 0 0 1 481.88 590 Tm
(13) Tj
ET
q
0.95 g
72 575 451 12 re
f
Q
BT
1 0 0 1 162 578 Tm
(xml22_setup) Tj
1 0 0 1 481.88 578 Tm
(13) Tj
ET
q
1 g
72 563 451 12 re
f
Q
BT
1 0 0 1 162 566 Tm
(xml22_error) Tj
1 0 0 1 481.88 566 Tm
(14) Tj
ET
q
0.95 g
72 551 451 12 re
f
Q
BT
1 0 0 1 102 554 Tm
(FAQ) Tj
1 0 0 1 481.88 554 Tm
(14) Tj
ET
q
1 g
72 539 451 12 re
f
Q
BT
1 0 0 1 132 542 Tm
(Why doesn`t PHP find the include files?) Tj
1 0 0 1 481.88 542 Tm
(14) Tj
ET
q
0.95 g
72 527 451 12 re
f
Q
BT
1 0 0 1 132 530 Tm
(Why does my parsing always fail?) Tj
1 0 0 1 481.88 530 Tm
(14) Tj
ET
q
1 g
72 515 451 12 re
f
Q
BT
1 0 0 1 132 518 Tm
(When I parse an XML file, the script seems to wait forever. Why?) Tj
1 0 0 1 481.88 518 Tm
(14) Tj
ET
q
0.95 g
72 503 451 12 re
f
Q
BT
1 0 0 1 132 506 Tm
(Why can`t I find any `tag' field in the matched element?) Tj
1 0 0 1 481.88 506 Tm
(14) Tj
ET
q
1 g
72 491 451 12 re
f
Q
BT
1 0 0 1 132 494 Tm
(Why does my search always fail?) Tj
1 0 0 1 481.88 494 Tm
(14) Tj
ET
q
0.95 g
72 479 451 12 re
f
Q
BT
1 0 0 1 132 482 Tm
(Why does my editing always fail?) Tj
1 0 0 1 481.88 482 Tm
(14) Tj
ET
q
1 g
72 467 451 12 re
f
Q
BT
1 0 0 1 132 470 Tm
(When I delete a parent, it`s children remaining. What now?) Tj
1 0 0 1 481.88 470 Tm
(15) Tj
ET
q
0.95 g
72 455 451 12 re
f
Q
BT
1 0 0 1 132 458 Tm
(What means "Cannot pass parameter x by reference"?) Tj
1 0 0 1 481.88 458 Tm
(15) Tj
ET
q
1 g
72 443 451 12 re
f
Q
BT
1 0 0 1 132 446 Tm
(Is there any way to mix \(X\)HTML into my XML?) Tj
1 0 0 1 481.88 446 Tm
(15) Tj
ET
q
0.95 g
72 431 451 12 re
f
Q
BT
1 0 0 1 132 434 Tm
(Does caching work persistent?) Tj
1 0 0 1 481.88 434 Tm
(15) Tj
ET
q
1 g
72 419 451 12 re
f
Q
BT
1 0 0 1 132 422 Tm
(What about DOM?) Tj
1 0 0 1 481.88 422 Tm
(16) Tj
ET
q
0.95 g
72 407 451 12 re
f
Q
BT
1 0 0 1 102 410 Tm
(REQUIREMENTS ) Tj
1 0 0 1 481.88 410 Tm
(16) Tj
ET
q
1 g
72 395 451 12 re
f
Q
BT
1 0 0 1 102 398 Tm
(RESTRICTIONS) Tj
1 0 0 1 481.88 398 Tm
(16) Tj
ET
q
0.95 g
72 383 451 12 re
f
Q
BT
1 0 0 1 102 386 Tm
(TO DO) Tj
1 0 0 1 481.88 386 Tm
(16) Tj
ET
q
1 g
72 371 451 12 re
f
Q
BT
1 0 0 1 102 374 Tm
(CHANGELOG) Tj
1 0 0 1 481.88 374 Tm
(16) Tj
ET
q
0.95 g
72 359 451 12 re
f
Q
BT
1 0 0 1 132 362 Tm
(0.3.4) Tj
1 0 0 1 481.88 362 Tm
(16) Tj
ET
q
1 g
72 347 451 12 re
f
Q
BT
1 0 0 1 132 350 Tm
(0.3.3) Tj
1 0 0 1 481.88 350 Tm
(16) Tj
ET
q
0.95 g
72 335 451 12 re
f
Q
BT
1 0 0 1 132 338 Tm
(0.3.2) Tj
1 0 0 1 481.88 338 Tm
(16) Tj
ET
q
1 g
72 323 451 12 re
f
Q
BT
1 0 0 1 132 326 Tm
(0.3.1) Tj
1 0 0 1 481.88 326 Tm
(17) Tj
ET
q
0.95 g
72 311 451 12 re
f
Q
BT
1 0 0 1 132 314 Tm
(0.3.0) Tj
1 0 0 1 481.88 314 Tm
(17) Tj
ET
q
1 g
72 299 451 12 re
f
Q
BT
1 0 0 1 132 302 Tm
(0.2.96) Tj
1 0 0 1 481.88 302 Tm
(17) Tj
ET
q
0.95 g
72 287 451 12 re
f
Q
BT
1 0 0 1 132 290 Tm
(0.2.95) Tj
1 0 0 1 481.88 290 Tm
(17) Tj
ET
q
1 g
72 275 451 12 re
f
Q
BT
1 0 0 1 132 278 Tm
(0.0.2) Tj
1 0 0 1 481.88 278 Tm
(17) Tj
ET
q
0.95 g
72 263 451 12 re
f
Q
BT
1 0 0 1 132 266 Tm
(0.0.1) Tj
1 0 0 1 481.88 266 Tm
(18) Tj
ET
q
1 g
72 251 451 12 re
f
Q
BT
1 0 0 1 102 254 Tm
(LICENSE ) Tj
1 0 0 1 481.88 254 Tm
(18) Tj
ET
q
0.95 g
72 239 451 12 re
f
Q
BT
1 0 0 1 102 242 Tm
(REPORTING BUGS) Tj
1 0 0 1 481.88 242 Tm
(18) Tj
ET
q
1 g
72 227 451 12 re
f
Q
BT
1 0 0 1 102 230 Tm
(AUTHOR  ) Tj
1 0 0 1 481.88 230 Tm
(18) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(ii) Tj
1 0 0 1 449.64 37 Tm
(06 August 2003) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
95 0 obj
5237
endobj
96 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F20 14 0 R
/F21 15 0 R
>>
>>
endobj
97 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 96 0 R
/Contents 94 0 R
>>
endobj
98 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 101 0 R
/Contents 99 0 R
>>
endobj
99 0 obj
<<
/Length 100 0 R
>>
stream
q
1 0 0 rg
180 626 8 130 re
F
Q
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
210 626 m
523 626 l
s
BT
/F21 30 Tf
1 0 0 1 210 706 Tm
0 -30 TD
(Documentation) Tj
T* (by) Tj
0 0 0.8 rg
/F22 30 Tf
(Ister.ORG) Tj
/F21 9 Tf
T* ( (pod2pdf 1.2 © Alan Fry)) Tj
/F03 48 Tf
0 g
1 0 0 1 236.156 371 Tm
(xml22) Tj
ET
endstream
endobj
100 0 obj
292
endobj
101 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F03 9 0 R
/F21 15 0 R
/F22 16 0 R
>>
>>
endobj
102 0 obj
<<
/Length 103 0 R
>>
stream
72 792 m
523 792 l
S
BT
0 G
1 i 0 J 0 j 0.1 w 10 M []0 d
/F21 10 Tf
1 0 0 1 72 797 Tm
(Title Page) Tj
1 0 0 1 494.65 797 Tm
(xml22) Tj
/F21 10 Tf
1 0 0 1 72 37 Tm
(06 August 2003) Tj
1 0 0 1 488.54 37 Tm
(Fly leaf) Tj
ET
72 50 m
523 50 l
S
endstream
endobj
103 0 obj
240
endobj
104 0 obj
<<
/ProcSet [/PDF /Text]
/ColorSpace <</DefaultRGB 1 0 R>>
/Font
<<
/F21 15 0 R
>>
>>
endobj
105 0 obj
<<
/Type /Page
/Parent 4 0 R
/Resources 104 0 R
/Contents 102 0 R
>>
endobj
107 0 obj
<<
/Parent 106 0 R
/Dest [93 0 R /Fit]
/First 108 0 R
/Last 205 0 R
/Count 98 
/Title (Table of Contents)
>>
endobj
108 0 obj
<<
/Parent 107 0 R
/Dest [21 0 R /FitH 766.4]
/Next 109 0 R
/Title (NAME)
>>
endobj
109 0 obj
<<
/Parent 107 0 R
/Dest [21 0 R /FitH 734]
/Previous 108 0 R
/Next 110 0 R
/Title (VERSION)
>>
endobj
110 0 obj
<<
/Parent 107 0 R
/Dest [21 0 R /FitH 701.6]
/Previous 109 0 R
/Next 119 0 R
/First 111 0 R
/Last 118 0 R
/Count 8 
/Title (DESCRIPTION)
>>
endobj
111 0 obj
<<
/Parent 110 0 R
/Dest [21 0 R /FitH 677.6]
/Next 112 0 R
/Title (Overview)
>>
endobj
112 0 obj
<<
/Parent 110 0 R
/Dest [21 0 R /FitH 599.6]
/Previous 111 0 R
/Next 113 0 R
/Title (Array Structure)
>>
endobj
113 0 obj
<<
/Parent 110 0 R
/Dest [25 0 R /FitH 440]
/Previous 112 0 R
/Next 114 0 R
/Title (IMPORTANT NOTE ABOUT THE ARRAY STRUCTURE)
>>
endobj
114 0 obj
<<
/Parent 110 0 R
/Dest [25 0 R /FitH 362]
/Previous 113 0 R
/Next 115 0 R
/Title (Tags)
>>
endobj
115 0 obj
<<
/Parent 110 0 R
/Dest [25 0 R /FitH 176]
/Previous 114 0 R
/Next 116 0 R
/Title (Searching and Editing)
>>
endobj
116 0 obj
<<
/Parent 110 0 R
/Dest [29 0 R /FitH 440]
/Previous 115 0 R
/Next 117 0 R
/Title (Functions Returning Tags)
>>
endobj
117 0 obj
<<
/Parent 110 0 R
/Dest [33 0 R /FitH 782]
/Previous 116 0 R
/Next 118 0 R
/Title (Document Fragments)
>>
endobj
118 0 obj
<<
/Parent 110 0 R
/Dest [33 0 R /FitH 548]
/Previous 117 0 R
/Title (Caching)
>>
endobj
119 0 obj
<<
/Parent 107 0 R
/Dest [33 0 R /FitH 268.4]
/Previous 110 0 R
/Next 120 0 R
/Title (INSTALLATION)
>>
endobj
120 0 obj
<<
/Parent 107 0 R
/Dest [37 0 R /FitH 784.4]
/Previous 119 0 R
/Next 178 0 R
/First 121 0 R
/Last 175 0 R
/Count 57 
/Title (FUNCTIONS)
>>
endobj
121 0 obj
<<
/Parent 120 0 R
/Dest [37 0 R /FitH 760.4]
/Next 125 0 R
/First 122 0 R
/Last 124 0 R
/Count 3 
/Title (Parse)
>>
endobj
122 0 obj
<<
/Parent 121 0 R
/Dest [37 0 R /FitH 742.4]
/Next 123 0 R
/Title (xml22_parse)
>>
endobj
123 0 obj
<<
/Parent 121 0 R
/Dest [37 0 R /FitH 346.4]
/Previous 122 0 R
/Next 124 0 R
/Title (xml22_register_pi_func)
>>
endobj
124 0 obj
<<
/Parent 121 0 R
/Dest [37 0 R /FitH 172.4]
/Previous 123 0 R
/Title (xml22_register_char_entity_set)
>>
endobj
125 0 obj
<<
/Parent 120 0 R
/Dest [41 0 R /FitH 764]
/Previous 121 0 R
/Next 128 0 R
/First 126 0 R
/Last 127 0 R
/Count 2 
/Title (Write)
>>
endobj
126 0 obj
<<
/Parent 125 0 R
/Dest [41 0 R /FitH 746]
/Next 127 0 R
/Title (xml22_write_document)
>>
endobj
127 0 obj
<<
/Parent 125 0 R
/Dest [41 0 R /FitH 590]
/Previous 126 0 R
/Title (xml22_write_document_str)
>>
endobj
128 0 obj
<<
/Parent 120 0 R
/Dest [41 0 R /FitH 506]
/Previous 125 0 R
/Next 154 0 R
/First 129 0 R
/Last 153 0 R
/Count 25 
/Title (Search)
>>
endobj
129 0 obj
<<
/Parent 128 0 R
/Dest [41 0 R /FitH 488]
/Next 130 0 R
/Title (xml22_get_by_regex)
>>
endobj
130 0 obj
<<
/Parent 128 0 R
/Dest [45 0 R /FitH 782]
/Previous 129 0 R
/Next 131 0 R
/Title (xml22_get_all_siblings)
>>
endobj
131 0 obj
<<
/Parent 128 0 R
/Dest [45 0 R /FitH 704]
/Previous 130 0 R
/Next 132 0 R
/Title (xml22_get_all_descendants)
>>
endobj
132 0 obj
<<
/Parent 128 0 R
/Dest [45 0 R /FitH 614]
/Previous 131 0 R
/Next 133 0 R
/Title (xml22_get_all_ancestors)
>>
endobj
133 0 obj
<<
/Parent 128 0 R
/Dest [45 0 R /FitH 512]
/Previous 132 0 R
/Next 134 0 R
/Title (xml22_get_all_of_name)
>>
endobj
134 0 obj
<<
/Parent 128 0 R
/Dest [45 0 R /FitH 386]
/Previous 133 0 R
/Next 135 0 R
/Title (xml22_get_all_of_content)
>>
endobj
135 0 obj
<<
/Parent 128 0 R
/Dest [45 0 R /FitH 272]
/Previous 134 0 R
/Next 136 0 R
/Title (xml22_get_version)
>>
endobj
136 0 obj
<<
/Parent 128 0 R
/Dest [45 0 R /FitH 128]
/Previous 135 0 R
/Next 137 0 R
/Title (xml22_get_doctype)
>>
endobj
137 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 686]
/Previous 136 0 R
/Next 138 0 R
/Title (xml22_get_root)
>>
endobj
138 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 620]
/Previous 137 0 R
/Next 139 0 R
/Title (xml22_has_children)
>>
endobj
139 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 554]
/Previous 138 0 R
/Next 140 0 R
/Title (xml22_get_first_child)
>>
endobj
140 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 488]
/Previous 139 0 R
/Next 141 0 R
/Title (xml22_get_last_child)
>>
endobj
141 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 422]
/Previous 140 0 R
/Next 142 0 R
/Title (xml22_get_next_sibling)
>>
endobj
142 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 344]
/Previous 141 0 R
/Next 143 0 R
/Title (xml22_get_prev_sibling)
>>
endobj
143 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 266]
/Previous 142 0 R
/Next 144 0 R
/Title (xml22_get_parent)
>>
endobj
144 0 obj
<<
/Parent 128 0 R
/Dest [49 0 R /FitH 188]
/Previous 143 0 R
/Next 145 0 R
/Title (xml22_get_by_id)
>>
endobj
145 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 782]
/Previous 144 0 R
/Next 146 0 R
/Title (xml22_get_name)
>>
endobj
146 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 704]
/Previous 145 0 R
/Next 147 0 R
/Title (xml22_get_content)
>>
endobj
147 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 578]
/Previous 146 0 R
/Next 148 0 R
/Title (xml22_get_attribute)
>>
endobj
148 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 500]
/Previous 147 0 R
/Next 149 0 R
/Title (xml22_get_entity)
>>
endobj
149 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 374]
/Previous 148 0 R
/Next 150 0 R
/Title (xml22_get_notation)
>>
endobj
150 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 248]
/Previous 149 0 R
/Next 151 0 R
/Title (xml22_is_tag)
>>
endobj
151 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 182]
/Previous 150 0 R
/Next 152 0 R
/Title (xml22_is_fragment)
>>
endobj
152 0 obj
<<
/Parent 128 0 R
/Dest [53 0 R /FitH 116]
/Previous 151 0 R
/Next 153 0 R
/Title (xml22_is_document)
>>
endobj
153 0 obj
<<
/Parent 128 0 R
/Dest [57 0 R /FitH 764]
/Previous 152 0 R
/Title (xml22_is_below_root)
>>
endobj
154 0 obj
<<
/Parent 120 0 R
/Dest [57 0 R /FitH 674]
/Previous 128 0 R
/Next 175 0 R
/First 155 0 R
/Last 174 0 R
/Count 20 
/Title (Edit)
>>
endobj
155 0 obj
<<
/Parent 154 0 R
/Dest [57 0 R /FitH 656]
/Next 156 0 R
/Title (xml22_create_document)
>>
endobj
156 0 obj
<<
/Parent 154 0 R
/Dest [57 0 R /FitH 518]
/Previous 155 0 R
/Next 157 0 R
/Title (xml22_create_tag)
>>
endobj
157 0 obj
<<
/Parent 154 0 R
/Dest [57 0 R /FitH 344]
/Previous 156 0 R
/Next 158 0 R
/Title (xml22_create_fragment)
>>
endobj
158 0 obj
<<
/Parent 154 0 R
/Dest [57 0 R /FitH 254]
/Previous 157 0 R
/Next 159 0 R
/Title (xml22_add_attribute)
>>
endobj
159 0 obj
<<
/Parent 154 0 R
/Dest [57 0 R /FitH 164]
/Previous 158 0 R
/Next 160 0 R
/Title (xml22_delete_attribute)
>>
endobj
160 0 obj
<<
/Parent 154 0 R
/Dest [61 0 R /FitH 782]
/Previous 159 0 R
/Next 161 0 R
/Title (xml22_add_content)
>>
endobj
161 0 obj
<<
/Parent 154 0 R
/Dest [61 0 R /FitH 584]
/Previous 160 0 R
/Next 162 0 R
/Title (xml22_delete_tag)
>>
endobj
162 0 obj
<<
/Parent 154 0 R
/Dest [61 0 R /FitH 458]
/Previous 161 0 R
/Next 163 0 R
/Title (xml22_insert_tag)
>>
endobj
163 0 obj
<<
/Parent 154 0 R
/Dest [61 0 R /FitH 344]
/Previous 162 0 R
/Next 164 0 R
/Title (xml22_replace_tag)
>>
endobj
164 0 obj
<<
/Parent 154 0 R
/Dest [61 0 R /FitH 254]
/Previous 163 0 R
/Next 165 0 R
/Title (xml22_move_tag)
>>
endobj
165 0 obj
<<
/Parent 154 0 R
/Dest [61 0 R /FitH 128]
/Previous 164 0 R
/Next 166 0 R
/Title (xml22_copy_fragment)
>>
endobj
166 0 obj
<<
/Parent 154 0 R
/Dest [65 0 R /FitH 740]
/Previous 165 0 R
/Next 167 0 R
/Title (xml22_delete_fragment)
>>
endobj
167 0 obj
<<
/Parent 154 0 R
/Dest [65 0 R /FitH 650]
/Previous 166 0 R
/Next 168 0 R
/Title (xml22_insert_fragment)
>>
endobj
168 0 obj
<<
/Parent 154 0 R
/Dest [65 0 R /FitH 548]
/Previous 167 0 R
/Next 169 0 R
/Title (xml22_replace_fragment)
>>
endobj
169 0 obj
<<
/Parent 154 0 R
/Dest [65 0 R /FitH 422]
/Previous 168 0 R
/Next 170 0 R
/Title (xml22_move_fragment)
>>
endobj
170 0 obj
<<
/Parent 154 0 R
/Dest [65 0 R /FitH 320]
/Previous 169 0 R
/Next 171 0 R
/Title (xml22_add_doctype)
>>
endobj
171 0 obj
<<
/Parent 154 0 R
/Dest [65 0 R /FitH 140]
/Previous 170 0 R
/Next 172 0 R
/Title (xml22_add_root)
>>
endobj
172 0 obj
<<
/Parent 154 0 R
/Dest [69 0 R /FitH 728]
/Previous 171 0 R
/Next 173 0 R
/Title (xml22_add_child)
>>
endobj
173 0 obj
<<
/Parent 154 0 R
/Dest [69 0 R /FitH 626]
/Previous 172 0 R
/Next 174 0 R
/Title (xml22_add_sibling)
>>
endobj
174 0 obj
<<
/Parent 154 0 R
/Dest [69 0 R /FitH 512]
/Previous 173 0 R
/Title (xml22_add_comment)
>>
endobj
175 0 obj
<<
/Parent 120 0 R
/Dest [69 0 R /FitH 410]
/Previous 154 0 R
/First 176 0 R
/Last 177 0 R
/Count 2 
/Title (Miscellaneous)
>>
endobj
176 0 obj
<<
/Parent 175 0 R
/Dest [69 0 R /FitH 392]
/Next 177 0 R
/Title (xml22_setup)
>>
endobj
177 0 obj
<<
/Parent 175 0 R
/Dest [73 0 R /FitH 668]
/Previous 176 0 R
/Title (xml22_error)
>>
endobj
178 0 obj
<<
/Parent 107 0 R
/Dest [73 0 R /FitH 586.4]
/Previous 120 0 R
/Next 190 0 R
/First 179 0 R
/Last 189 0 R
/Count 11 
/Title (FAQ)
>>
endobj
179 0 obj
<<
/Parent 178 0 R
/Dest [73 0 R /FitH 562.4]
/Next 180 0 R
/Title (Why doesn`t PHP find the include files?)
>>
endobj
180 0 obj
<<
/Parent 178 0 R
/Dest [73 0 R /FitH 508.4]
/Previous 179 0 R
/Next 181 0 R
/Title (Why does my parsing always fail?)
>>
endobj
181 0 obj
<<
/Parent 178 0 R
/Dest [73 0 R /FitH 466.4]
/Previous 180 0 R
/Next 182 0 R
/Title (When I parse an XML file, the script seems to wait forever. Why?)
>>
endobj
182 0 obj
<<
/Parent 178 0 R
/Dest [73 0 R /FitH 424.4]
/Previous 181 0 R
/Next 183 0 R
/Title (Why can`t I find any `tag' field in the matched element?)
>>
endobj
183 0 obj
<<
/Parent 178 0 R
/Dest [73 0 R /FitH 322.4]
/Previous 182 0 R
/Next 184 0 R
/Title (Why does my search always fail?)
>>
endobj
184 0 obj
<<
/Parent 178 0 R
/Dest [73 0 R /FitH 172.4]
/Previous 183 0 R
/Next 185 0 R
/Title (Why does my editing always fail?)
>>
endobj
185 0 obj
<<
/Parent 178 0 R
/Dest [77 0 R /FitH 680]
/Previous 184 0 R
/Next 186 0 R
/Title (When I delete a parent, it`s children remaining. What now?)
>>
endobj
186 0 obj
<<
/Parent 178 0 R
/Dest [77 0 R /FitH 422]
/Previous 185 0 R
/Next 187 0 R
/Title (What means "Cannot pass parameter x by reference"?)
>>
endobj
187 0 obj
<<
/Parent 178 0 R
/Dest [77 0 R /FitH 272]
/Previous 186 0 R
/Next 188 0 R
/Title (Is there any way to mix \(X\)HTML into my XML?)
>>
endobj
188 0 obj
<<
/Parent 178 0 R
/Dest [77 0 R /FitH 122]
/Previous 187 0 R
/Next 189 0 R
/Title (Does caching work persistent?)
>>
endobj
189 0 obj
<<
/Parent 178 0 R
/Dest [81 0 R /FitH 782]
/Previous 188 0 R
/Title (What about DOM?)
>>
endobj
190 0 obj
<<
/Parent 107 0 R
/Dest [81 0 R /FitH 634.4]
/Previous 178 0 R
/Next 191 0 R
/Title (REQUIREMENTS )
>>
endobj
191 0 obj
<<
/Parent 107 0 R
/Dest [81 0 R /FitH 590]
/Previous 190 0 R
/Next 192 0 R
/Title (RESTRICTIONS)
>>
endobj
192 0 obj
<<
/Parent 107 0 R
/Dest [81 0 R /FitH 437.6]
/Previous 191 0 R
/Next 193 0 R
/Title (TO DO)
>>
endobj
193 0 obj
<<
/Parent 107 0 R
/Dest [81 0 R /FitH 332]
/Previous 192 0 R
/Next 203 0 R
/First 194 0 R
/Last 202 0 R
/Count 9 
/Title (CHANGELOG)
>>
endobj
194 0 obj
<<
/Parent 193 0 R
/Dest [81 0 R /FitH 308]
/Next 195 0 R
/Title (0.3.4)
>>
endobj
195 0 obj
<<
/Parent 193 0 R
/Dest [81 0 R /FitH 260]
/Previous 194 0 R
/Next 196 0 R
/Title (0.3.3)
>>
endobj
196 0 obj
<<
/Parent 193 0 R
/Dest [81 0 R /FitH 212]
/Previous 195 0 R
/Next 197 0 R
/Title (0.3.2)
>>
endobj
197 0 obj
<<
/Parent 193 0 R
/Dest [85 0 R /FitH 782]
/Previous 196 0 R
/Next 198 0 R
/Title (0.3.1)
>>
endobj
198 0 obj
<<
/Parent 193 0 R
/Dest [85 0 R /FitH 716]
/Previous 197 0 R
/Next 199 0 R
/Title (0.3.0)
>>
endobj
199 0 obj
<<
/Parent 193 0 R
/Dest [85 0 R /FitH 518]
/Previous 198 0 R
/Next 200 0 R
/Title (0.2.96)
>>
endobj
200 0 obj
<<
/Parent 193 0 R
/Dest [85 0 R /FitH 470]
/Previous 199 0 R
/Next 201 0 R
/Title (0.2.95)
>>
endobj
201 0 obj
<<
/Parent 193 0 R
/Dest [85 0 R /FitH 188]
/Previous 200 0 R
/Next 202 0 R
/Title (0.0.2)
>>
endobj
202 0 obj
<<
/Parent 193 0 R
/Dest [89 0 R /FitH 752]
/Previous 201 0 R
/Title (0.0.1)
>>
endobj
203 0 obj
<<
/Parent 107 0 R
/Dest [89 0 R /FitH 688.4]
/Previous 193 0 R
/Next 204 0 R
/Title (LICENSE )
>>
endobj
204 0 obj
<<
/Parent 107 0 R
/Dest [89 0 R /FitH 560]
/Previous 203 0 R
/Next 205 0 R
/Title (REPORTING BUGS)
>>
endobj
205 0 obj
<<
/Parent 107 0 R
/Dest [89 0 R /FitH 503.6]
/Previous 204 0 R
/Title (AUTHOR  )
>>
endobj
106 0 obj
<<
/Type /Outlines
/Count 99
/First 107 0 R
/Last 205 0 R
>>
endobj
3 0 obj
<<
/Type /Catalog
/Pages 4 0 R
/PageMode /UseOutlines
/Outlines 106 0 R
>>
endobj
4 0 obj
<<
/Type /Pages
/Kids [ 98 0 R 105 0 R 93 0 R 97 0 R 21 0 R 25 0 R 29 0 R 33 0 R 37 0 R 41 0 R 45 0 R 49 0 R 53 0 R 57 0 R 61 0 R 65 0 R 69 0 R 73 0 R 77 0 R 81 0 R 85 0 R 89 0 R ]
/Count 22
/MediaBox [0 0 595 842]
>>
endobj
xref
0 206
0000000000 65535 f 
0000000015 00000 n 
0000000171 00000 n 
0000159108 00000 n 
0000159198 00000 n 
0000000269 00000 n 
0000002369 00000 n 
0000002468 00000 n 
0000002566 00000 n 
0000002666 00000 n 
0000002770 00000 n 
0000002866 00000 n 
0000002967 00000 n 
0000003071 00000 n 
0000003179 00000 n 
0000003277 00000 n 
0000003380 00000 n 
0000003486 00000 n 
0000003600 00000 n 
0000008765 00000 n 
0000008786 00000 n 
0000008933 00000 n 
0000009016 00000 n 
0000015878 00000 n 
0000015899 00000 n 
0000016046 00000 n 
0000016129 00000 n 
0000025125 00000 n 
0000025146 00000 n 
0000025305 00000 n 
0000025388 00000 n 
0000032368 00000 n 
0000032389 00000 n 
0000032559 00000 n 
0000032642 00000 n 
0000040800 00000 n 
0000040821 00000 n 
0000040980 00000 n 
0000041063 00000 n 
0000048475 00000 n 
0000048496 00000 n 
0000048644 00000 n 
0000048727 00000 n 
0000055541 00000 n 
0000055562 00000 n 
0000055710 00000 n 
0000055793 00000 n 
0000062151 00000 n 
0000062172 00000 n 
0000062320 00000 n 
0000062403 00000 n 
0000069139 00000 n 
0000069160 00000 n 
0000069308 00000 n 
0000069391 00000 n 
0000077270 00000 n 
0000077291 00000 n 
0000077439 00000 n 
0000077522 00000 n 
0000085417 00000 n 
0000085438 00000 n 
0000085598 00000 n 
0000085681 00000 n 
0000092829 00000 n 
0000092850 00000 n 
0000092998 00000 n 
0000093081 00000 n 
0000100404 00000 n 
0000100425 00000 n 
0000100584 00000 n 
0000100667 00000 n 
0000108827 00000 n 
0000108848 00000 n 
0000109007 00000 n 
0000109090 00000 n 
0000114172 00000 n 
0000114193 00000 n 
0000114329 00000 n 
0000114412 00000 n 
0000121638 00000 n 
0000121659 00000 n 
0000121807 00000 n 
0000121890 00000 n 
0000130445 00000 n 
0000130466 00000 n 
0000130625 00000 n 
0000130708 00000 n 
0000133563 00000 n 
0000133584 00000 n 
0000133720 00000 n 
0000133803 00000 n 
0000139890 00000 n 
0000139911 00000 n 
0000140025 00000 n 
0000140108 00000 n 
0000145399 00000 n 
0000145420 00000 n 
0000145534 00000 n 
0000145617 00000 n 
0000145701 00000 n 
0000146048 00000 n 
0000146069 00000 n 
0000146195 00000 n 
0000146491 00000 n 
0000146512 00000 n 
0000146615 00000 n 
0000159030 00000 n 
0000146701 00000 n 
0000146827 00000 n 
0000146921 00000 n 
0000147034 00000 n 
0000147192 00000 n 
0000147290 00000 n 
0000147413 00000 n 
0000147559 00000 n 
0000147669 00000 n 
0000147796 00000 n 
0000147926 00000 n 
0000148050 00000 n 
0000148149 00000 n 
0000148269 00000 n 
0000148426 00000 n 
0000148560 00000 n 
0000148661 00000 n 
0000148791 00000 n 
0000148915 00000 n 
0000149065 00000 n 
0000149173 00000 n 
0000149289 00000 n 
0000149441 00000 n 
0000149547 00000 n 
0000149675 00000 n 
0000149806 00000 n 
0000149935 00000 n 
0000150062 00000 n 
0000150192 00000 n 
0000150315 00000 n 
0000150438 00000 n 
0000150558 00000 n 
0000150682 00000 n 
0000150809 00000 n 
0000150935 00000 n 
0000151063 00000 n 
0000151191 00000 n 
0000151313 00000 n 
0000151434 00000 n 
0000151554 00000 n 
0000151677 00000 n 
0000151802 00000 n 
0000151924 00000 n 
0000152048 00000 n 
0000152166 00000 n 
0000152289 00000 n 
0000152412 00000 n 
0000152523 00000 n 
0000152673 00000 n 
0000152782 00000 n 
0000152904 00000 n 
0000153031 00000 n 
0000153156 00000 n 
0000153284 00000 n 
0000153407 00000 n 
0000153529 00000 n 
0000153651 00000 n 
0000153774 00000 n 
0000153894 00000 n 
0000154019 00000 n 
0000154146 00000 n 
0000154273 00000 n 
0000154401 00000 n 
0000154526 00000 n 
0000154649 00000 n 
0000154769 00000 n 
0000154890 00000 n 
0000155013 00000 n 
0000155122 00000 n 
0000155266 00000 n 
0000155365 00000 n 
0000155468 00000 n 
0000155619 00000 n 
0000155748 00000 n 
0000155888 00000 n 
0000156060 00000 n 
0000156224 00000 n 
0000156363 00000 n 
0000156503 00000 n 
0000156667 00000 n 
0000156823 00000 n 
0000156975 00000 n 
0000157110 00000 n 
0000157217 00000 n 
0000157338 00000 n 
0000157456 00000 n 
0000157569 00000 n 
0000157723 00000 n 
0000157816 00000 n 
0000157927 00000 n 
0000158038 00000 n 
0000158149 00000 n 
0000158260 00000 n 
0000158372 00000 n 
0000158484 00000 n 
0000158595 00000 n 
0000158692 00000 n 
0000158808 00000 n 
0000158928 00000 n 
trailer
<<
/Size 206
/Root 3 0 R
/Info 2 0 R
>>
startxref
159431
%%EOF
